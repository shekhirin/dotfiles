{
    "version": 0,
    "date": "2024-12-12 12:35:57",
    "url": "chrome-extension://likgccmbimhjbgkjambclfkhldnlhbnn/",
    "manifest": {
        "action": {
            "default_icon": {
                "16": "images/icon16.png",
                "19": "images/icon19.png",
                "32": "images/icon32.png",
                "38": "images/icon38.png",
                "48": "images/icon48.png",
                "64": "images/icon64.png",
                "128": "images/icon128.png"
            },
            "default_popup": "action-popup.html",
            "default_title": "Yomitan"
        },
        "author": {
            "email": "themoeway@googlegroups.com"
        },
        "background": {
            "service_worker": "sw.js",
            "type": "module"
        },
        "commands": {
            "openInfoPage": {
                "description": "Open the info page"
            },
            "openPopupWindow": {
                "description": "Open the popup window"
            },
            "openSearchPage": {
                "description": "Open the search page",
                "suggested_key": {
                    "default": "Alt+Insert"
                }
            },
            "openSettingsPage": {
                "description": "Open the settings page"
            },
            "toggleTextScanning": {
                "description": "Toggle text scanning on/off",
                "suggested_key": {
                    "default": "Alt+Delete"
                }
            }
        },
        "content_scripts": [
            {
                "all_frames": true,
                "js": [
                    "js/app/content-script-wrapper.js"
                ],
                "match_about_blank": true,
                "matches": [
                    "http://*/*",
                    "https://*/*",
                    "file://*/*"
                ],
                "run_at": "document_idle"
            }
        ],
        "content_security_policy": {
            "extension_pages": "default-src 'self'; img-src blob: 'self'; style-src 'self' 'unsafe-inline'; media-src *; connect-src *",
            "sandbox": "sandbox allow-scripts; default-src 'self'; script-src 'self' 'unsafe-eval'; style-src 'unsafe-inline'"
        },
        "description": "Japanese dictionary with Anki integration",
        "differential_fingerprint": "1.db73ae92f067da2264ebd9f7f6b5790effce1c9789ae430d5b417be4bb4e7a1e",
        "host_permissions": [
            "<all_urls>"
        ],
        "icons": {
            "16": "images/icon16.png",
            "19": "images/icon19.png",
            "32": "images/icon32.png",
            "38": "images/icon38.png",
            "48": "images/icon48.png",
            "64": "images/icon64.png",
            "128": "images/icon128.png"
        },
        "key": "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuFMG+/vjX2le7bR1dzuuLZwLxycxTxo033lLgMvO2BYQeQjIxhHazptr+34TX9oN71jnDxc11MWIl/pJPXVhdWyawrVNX9AVSz0kqOcvv0TqJAoVofLeAtRAeANjGjIM6QN46SAq9RAsKh60+0ZxYVWasFHB0gdbIaucJE54sXcUOGBsCah/ZziZMsunEhWpUC0nKT3eW9/eRQVHMBVFQ06R1luESf2f0EXbiS70smI0j3jb0xxWnbHQS8Bz20WZi0/kcysCmU/suMKCzdRXENWVcPG2xpcIYbSXBUHuP25jr3qElq5VEqeIUeHdYHd0GbkhlHPG0Cuo38q6D4lQ5wIDAQAB",
        "manifest_version": 3,
        "minimum_chrome_version": "102.0.0.0",
        "name": "Yomitan",
        "optional_permissions": [
            "clipboardRead",
            "nativeMessaging"
        ],
        "options_ui": {
            "open_in_tab": true,
            "page": "settings.html"
        },
        "permissions": [
            "storage",
            "clipboardWrite",
            "unlimitedStorage",
            "declarativeNetRequest",
            "scripting",
            "offscreen",
            "contextMenus"
        ],
        "sandbox": {
            "pages": [
                "template-renderer.html"
            ]
        },
        "update_url": "https://clients2.google.com/service/update2/crx",
        "version": "24.11.23.0",
        "web_accessible_resources": [
            {
                "matches": [
                    "<all_urls>"
                ],
                "resources": [
                    "popup.html",
                    "template-renderer.html",
                    "js/*"
                ]
            }
        ]
    },
    "environment": {
        "browser": "chrome",
        "platform": {
            "os": "mac"
        }
    },
    "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36",
    "permissions": {
        "origins": [
            "<all_urls>",
            "file:///*",
            "http://*/*",
            "https://*/*"
        ],
        "permissions": [
            "clipboardWrite",
            "contextMenus",
            "nativeMessaging",
            "storage",
            "unlimitedStorage",
            "declarativeNetRequest",
            "scripting",
            "offscreen"
        ]
    },
    "options": {
        "profiles": [
            {
                "name": "Mining",
                "options": {
                    "general": {
                        "enable": true,
                        "resultOutputMode": "group",
                        "debugInfo": false,
                        "maxResults": 32,
                        "showAdvanced": true,
                        "popupDisplayMode": "default",
                        "popupWidth": 512,
                        "popupHeight": 312,
                        "popupHorizontalOffset": 0,
                        "popupVerticalOffset": 0,
                        "popupHorizontalOffset2": 0,
                        "popupVerticalOffset2": 0,
                        "popupHorizontalTextPosition": "below",
                        "popupVerticalTextPosition": "before",
                        "showGuide": false,
                        "compactTags": true,
                        "mainDictionary": "JMdict",
                        "customPopupCss": ":root {\n    --background-color: #DEE4E7;\n    --text-color: #000000;\n    --tag-frequency-background-color: #8181C1;\n    --tag-part-of-speech-background-color: #8181C1;\n    --tag-text-color: #FFFFFF;\n    --reason-text-color: #808080;\n    --notification-text-color: #000000;\n    --notification-background-color: #E5E9F0;\n    --sidebar-background-color: #CFD9DC;\n    --sidebar-button-background-color-hover: #9283C1;\n    --sidebar-button-danger-background-color-hover: #BF616A;\n    --sidebar-button-icon-color: #A89BD0;\n    --accent-color: #8181C1;\n    --dict-color: #9057AD;\n    --dict-text-color: #FFFFFF;\n}\n\n:root[data-theme=\"dark\"] {\n    --background-color: #2E303E;\n    --text-color: #FFFFFF;\n    --tag-frequency-background-color: #67679A;\n    --tag-part-of-speech-background-color: #67679A;\n    --reason-text-color: #808080;\n    --notification-text-color: #FFFFFF;\n    --notification-background-color: #3B4252;\n    --sidebar-background-color: #262733;\n    --sidebar-button-background-color-hover: #644EA7;\n    --sidebar-button-danger-background-color-hover: #BF616A;\n    --sidebar-button-icon-color: #A89BD0;\n    --accent-color: #67679A;\n    --dict-color: #9057AD;\n    --dict-text-color: #FFFFFF;\n}\n\nspan.headword-term {\n    font-family: notosans;\n}\n\nspan.query-parser-term {\n    font-family: notosans;\n}\n\n.gloss-content {\n    font-family: notosans;\n    line-height: 1.5;\n    font-size: 16px;\n}\n\n.definition-tag-list {\n    float: left;\n    line-height: 1;\n    height: 1em;\n}\n \n.definition-list {\n    padding: 0;\n}\n\n.definition-item { \n    display: inline-block;\n    margin-bottom: 10px;\n    border-bottom: 1px solid;\n    margin: 0 calc(0px - var(--entry-horizontal-padding));\n    width: 100%;\n    padding: 10px calc(var(--entry-horizontal-padding)) 10px calc(var(--entry-horizontal-padding));\n}\n\n.tag-label-content {\n    font-family: notosans;\n    font-size: 11px;\n}\n\n.tag {\n    --tag-height: 0;\n}\n\n.tag[data-details=\"アクセント辞典\"] {\n    --tag-color: var(--accent-color);\n    --tag-text-color: var(--dict-text-color);\n}\n\n.tag[data-details=\"JMdict (English)\"] {\n    --tag-color: var(--dict-color);\n    --tag-text-color: var(--dict-text-color);\n}\n \n.tag[data-details=\"旺文社国語辞典 第十一版\"] {\n    --tag-color: var(--dict-color);\n    --tag-text-color: var(--dict-text-color);\n}\n \n.tag[data-details=\"明鏡国語辞典\"] { \n    --tag-color: var(--dict-color);\n    --tag-text-color: var(--dict-text-color);\n}\n \n.tag[data-details=\"ハイブリッド新辞林\"] {\n    --tag-color: var(--dict-color);\n    --tag-text-color: var(--dict-text-color);\n}\n \n.tag[data-details=\"実用日本語表現辞典\"] {\n    --tag-color: var(--dict-color);\n    --tag-text-color: var(--dict-text-color);\n}\n \n.tag[data-details=\"新明解国語辞典 第五版\"] {\n    --tag-color: var(--dict-color);\n    --tag-text-color: var(--dict-text-color);\n}\n \n.tag[data-details=\"デジタル大辞泉\"] {\n    --tag-color: var(--dict-color);\n    --tag-text-color: var(--dict-text-color);\n}\n \n.tag[data-details=\"研究社　新和英大辞典　第５版\"] {\n    --tag-color: var(--dict-color);\n    --tag-text-color: var(--dict-text-color);\n}\n\n::-webkit-scrollbar {\n    display: none;\n}\n\n.top-progress-bar-container {\n    display: none;\n}\n\n.kanji-glyph-data > tbody > tr:nth-child(n + 3) {\n  display: none;\n}\n\ndiv.entry[data-type='kanji']:nth-child(n + 2) .kanji-glyph-container,\ndiv.entry[data-type='kanji']:nth-child(n + 2) [data-section-type='frequencies'],\ndiv.entry[data-type='kanji']:nth-child(n + 2) table.kanji-glyph-data > tbody > tr:first-child {\n  display: none;\n}\n\n.kanji-info-table-item-value-empty {\n  display: none;\n}\n\n.kanji-glyph-data,\ndiv.entry[data-type='kanji'],\ndiv.entry[data-type='kanji']:nth-child(n + 2) .kanji-glyph-data > tbody > tr > *,\n.kanji-glyph-data dl.kanji-readings-japanese,\ndiv.entry[data-type='kanji']:nth-child(n + 2)\n  .kanji-glyph-data\n  dl.kanji-readings-chinese[data-count='0'] {\n  padding-top: 0 !important;\n  padding-bottom: 0 !important;\n  margin-bottom: 0em;\n  margin-top: 0 !important;\n}\n\n.entry + .entry[data-type='kanji'],\ndiv#dictionary-entries > div.entry:nth-child(n + 2) .kanji-glyph-data > tbody > tr > * {\n  border-top: none !important;\n}\n\n.kanji-gloss-list {\n  list-style-type: circle;\n}",
                        "popupTheme": "dark",
                        "popupOuterTheme": "site",
                        "customPopupOuterCss": "",
                        "enableWanakana": true,
                        "popupScalingFactor": 1.1,
                        "popupScaleRelativeToPageZoom": false,
                        "popupScaleRelativeToVisualViewport": true,
                        "showPitchAccentDownstepNotation": true,
                        "showPitchAccentPositionNotation": true,
                        "showPitchAccentGraph": true,
                        "showIframePopupsInRootFrame": false,
                        "useSecurePopupFrameUrl": true,
                        "usePopupShadowDom": true,
                        "usePopupWindow": false,
                        "glossaryLayoutMode": "compact",
                        "popupCurrentIndicatorMode": "triangle",
                        "popupActionBarVisibility": "auto",
                        "popupActionBarLocation": "top",
                        "frequencyDisplayMode": "split-tags-grouped",
                        "termDisplayMode": "ruby",
                        "sortFrequencyDictionary": "CC100",
                        "sortFrequencyDictionaryOrder": "ascending",
                        "language": "ja",
                        "enableContextMenuScanSelected": true,
                        "stickySearchHeader": false,
                        "fontFamily": "",
                        "fontSize": 14,
                        "lineHeight": "1.5",
                        "showDebug": false
                    },
                    "audio": {
                        "enabled": true,
                        "sources": [
                            {
                                "type": "jpod101",
                                "url": "",
                                "voice": ""
                            },
                            {
                                "type": "language-pod-101",
                                "url": "",
                                "voice": ""
                            },
                            {
                                "type": "custom-json",
                                "url": "http://localhost:8770/?term={term}&reading={reading}",
                                "voice": ""
                            }
                        ],
                        "volume": 25,
                        "autoPlay": false
                    },
                    "scanning": {
                        "touchInputEnabled": true,
                        "selectText": true,
                        "alphanumeric": false,
                        "autoHideResults": true,
                        "delay": 0,
                        "length": 10,
                        "deepDomScan": false,
                        "popupNestingMaxDepth": 4,
                        "enablePopupSearch": false,
                        "enableOnPopupExpressions": true,
                        "enableOnSearchPage": true,
                        "enableSearchTags": false,
                        "layoutAwareScan": false,
                        "hideDelay": 100,
                        "pointerEventsEnabled": false,
                        "preventMiddleMouse": {
                            "onWebPages": false,
                            "onPopupPages": false,
                            "onSearchPages": false,
                            "onSearchQuery": false
                        },
                        "inputs": [
                            {
                                "include": "shift",
                                "exclude": "mouse0",
                                "types": {
                                    "mouse": true,
                                    "touch": false,
                                    "pen": false
                                },
                                "options": {
                                    "showAdvanced": false,
                                    "searchTerms": true,
                                    "searchKanji": true,
                                    "scanOnTouchMove": true,
                                    "scanOnPenHover": true,
                                    "scanOnPenPress": true,
                                    "scanOnPenRelease": false,
                                    "preventTouchScrolling": true,
                                    "scanOnPenMove": true,
                                    "scanOnPenReleaseHover": false,
                                    "scanOnTouchPress": false,
                                    "scanOnTouchRelease": false,
                                    "preventPenScrolling": true,
                                    "scanOnTouchTap": true
                                }
                            },
                            {
                                "include": "mouse2",
                                "exclude": "",
                                "types": {
                                    "mouse": true,
                                    "touch": false,
                                    "pen": false
                                },
                                "options": {
                                    "showAdvanced": false,
                                    "searchTerms": true,
                                    "searchKanji": true,
                                    "scanOnTouchMove": true,
                                    "scanOnPenHover": true,
                                    "scanOnPenPress": true,
                                    "scanOnPenRelease": false,
                                    "preventTouchScrolling": true,
                                    "scanOnPenMove": true,
                                    "scanOnPenReleaseHover": false,
                                    "scanOnTouchPress": false,
                                    "scanOnTouchRelease": false,
                                    "preventPenScrolling": true,
                                    "scanOnTouchTap": true
                                }
                            },
                            {
                                "include": "",
                                "exclude": "",
                                "types": {
                                    "mouse": false,
                                    "touch": true,
                                    "pen": true
                                },
                                "options": {
                                    "showAdvanced": false,
                                    "searchTerms": true,
                                    "searchKanji": true,
                                    "scanOnTouchMove": false,
                                    "scanOnPenHover": false,
                                    "scanOnPenPress": true,
                                    "scanOnPenRelease": false,
                                    "preventTouchScrolling": false,
                                    "scanOnPenMove": true,
                                    "scanOnPenReleaseHover": false,
                                    "scanOnTouchPress": false,
                                    "scanOnTouchRelease": false,
                                    "preventPenScrolling": false,
                                    "scanOnTouchTap": true
                                }
                            }
                        ],
                        "modifier": null,
                        "matchTypePrefix": false,
                        "hidePopupOnCursorExit": false,
                        "hidePopupOnCursorExitDelay": 100,
                        "normalizeCssZoom": true,
                        "scanWithoutMousemove": true,
                        "scanResolution": "character"
                    },
                    "dictionaries": [
                        {
                            "name": "Jitendex.org [2024-08-11]",
                            "alias": "Jitendex.org [2024-08-11]",
                            "priority": 15,
                            "enabled": true,
                            "allowSecondarySearches": false,
                            "definitionsCollapsible": "not-collapsible",
                            "partsOfSpeechFilter": true,
                            "useDeinflections": true,
                            "styles": ""
                        },
                        {
                            "name": "日本語文法辞典(全集)",
                            "priority": 1,
                            "enabled": true,
                            "allowSecondarySearches": false,
                            "definitionsCollapsible": "not-collapsible",
                            "partsOfSpeechFilter": true,
                            "useDeinflections": true,
                            "alias": "日本語文法辞典(全集)"
                        },
                        {
                            "name": "三省堂国語辞典　第八版",
                            "priority": 13,
                            "enabled": true,
                            "allowSecondarySearches": false,
                            "definitionsCollapsible": "not-collapsible",
                            "partsOfSpeechFilter": true,
                            "useDeinflections": true,
                            "alias": "三省堂国語辞典　第八版"
                        },
                        {
                            "name": "大辞林　第四版",
                            "priority": 11,
                            "enabled": true,
                            "allowSecondarySearches": false,
                            "definitionsCollapsible": "not-collapsible",
                            "partsOfSpeechFilter": true,
                            "useDeinflections": true,
                            "alias": "大辞林　第四版"
                        },
                        {
                            "name": "デジタル大辞泉",
                            "priority": 9,
                            "enabled": true,
                            "allowSecondarySearches": false,
                            "definitionsCollapsible": "not-collapsible",
                            "partsOfSpeechFilter": true,
                            "useDeinflections": true,
                            "alias": "デジタル大辞泉"
                        },
                        {
                            "name": "実用日本語表現辞典",
                            "priority": 6,
                            "enabled": true,
                            "allowSecondarySearches": false,
                            "definitionsCollapsible": "not-collapsible",
                            "partsOfSpeechFilter": true,
                            "useDeinflections": true,
                            "alias": "実用日本語表現辞典"
                        },
                        {
                            "name": "漢字ペディア同訓異義",
                            "priority": 3,
                            "enabled": true,
                            "allowSecondarySearches": false,
                            "definitionsCollapsible": "not-collapsible",
                            "partsOfSpeechFilter": true,
                            "useDeinflections": true,
                            "alias": "漢字ペディア同訓異義"
                        },
                        {
                            "name": "漢字辞典オンライン",
                            "priority": 0,
                            "enabled": true,
                            "allowSecondarySearches": false,
                            "definitionsCollapsible": "not-collapsible",
                            "partsOfSpeechFilter": true,
                            "useDeinflections": true,
                            "alias": "漢字辞典オンライン"
                        },
                        {
                            "name": "NHK",
                            "priority": 0,
                            "enabled": true,
                            "allowSecondarySearches": false,
                            "definitionsCollapsible": "not-collapsible",
                            "partsOfSpeechFilter": true,
                            "useDeinflections": true,
                            "alias": "NHK"
                        },
                        {
                            "name": "JPDB",
                            "priority": 0,
                            "enabled": true,
                            "allowSecondarySearches": false,
                            "definitionsCollapsible": "not-collapsible",
                            "partsOfSpeechFilter": true,
                            "useDeinflections": true,
                            "alias": "JPDB"
                        },
                        {
                            "name": "JMdict",
                            "alias": "JMdict",
                            "priority": 0,
                            "enabled": false,
                            "allowSecondarySearches": false,
                            "definitionsCollapsible": "not-collapsible",
                            "partsOfSpeechFilter": true,
                            "useDeinflections": true,
                            "styles": ""
                        },
                        {
                            "name": "PixivLight [2023-11-24]",
                            "alias": "PixivLight [2023-11-24]",
                            "priority": 0,
                            "enabled": true,
                            "allowSecondarySearches": false,
                            "definitionsCollapsible": "not-collapsible",
                            "partsOfSpeechFilter": true,
                            "useDeinflections": true,
                            "styles": ""
                        }
                    ],
                    "anki": {
                        "enable": true,
                        "server": "http://127.0.0.1:8765",
                        "tags": [
                            "yomichan"
                        ],
                        "screenshot": {
                            "format": "png",
                            "quality": 92
                        },
                        "terms": {
                            "deck": "日本語::Mining",
                            "model": "JP Mining Note",
                            "fields": {
                                "Key": "{expression}",
                                "Word": "{expression}",
                                "WordReading": "{furigana-plain}",
                                "PAOverride": "",
                                "PAOverrideText": "",
                                "AJTWordPitch": "",
                                "PrimaryDefinition": "{jpmn-primary-definition}",
                                "PrimaryDefinitionPicture": "",
                                "Sentence": "{cloze-prefix}<b>{cloze-body}</b>{cloze-suffix}",
                                "SentenceReading": "",
                                "AltDisplay": "",
                                "AltDisplayPASentenceCard": "",
                                "AdditionalNotes": "",
                                "IsSentenceCard": "",
                                "IsClickCard": "x",
                                "IsHoverCard": "",
                                "IsTargetedSentenceCard": "",
                                "PAShowInfo": "",
                                "PATestOnlyWord": "",
                                "PADoNotTest": "",
                                "PASeparateWordCard": "",
                                "PASeparateSentenceCard": "",
                                "SeparateClozeDeletionCard": "",
                                "Hint": "",
                                "HintNotHidden": "",
                                "Picture": "",
                                "WordAudio": "{audio}",
                                "SentenceAudio": "",
                                "PAGraphs": "{jpmn-pitch-accent-graphs}",
                                "PAPositions": "{jpmn-pitch-accent-positions}",
                                "PASilence": "[sound:_silence.wav]",
                                "WordReadingHiragana": "{jpmn-word-reading-hiragana}",
                                "FrequenciesStylized": "{jpmn-frequencies}",
                                "FrequencySort": "{jpmn-frequency-sort}",
                                "SecondaryDefinition": "{jpmn-secondary-definition}",
                                "ExtraDefinitions": "{jpmn-extra-definitions}",
                                "UtilityDictionaries": "{jpmn-utility-dictionaries}",
                                "Comment": ""
                            }
                        },
                        "kanji": {
                            "deck": "Default",
                            "model": "Basic",
                            "fields": {
                                "Front": "{character}",
                                "Back": ""
                            }
                        },
                        "fieldTemplates": "{{~!                                                                      ~}}\n{{~! ==================== jp-mining-note handlebars ===================== ~}}\n{{~!                               v1.0.12                                ~}}\n{{~!                                                                      ~}}\n{{~!              https://arbyste.github.io/jp-mining-note/               ~}}\n{{~!       -------------------------------------------------------        ~}}\n\n\n{{~! ================ Dictionary Categorization Options ================= ~}}\n\n{{~! valid values: \"bilingual\", \"monolingual\" ~}}\n{{~set \"opt-first-definition-type\" \"bilingual\" ~}}\n\n{{~!\n    A bunch of JP and CN bilingual dictionaries covered by default,\n    including: JMdict, 新和英, CEDICT, etc\n~}}\n{{~#set \"bilingual-dict-regex\"~}} ^(([Jj][Mm][Dd]ict)(.*)|(.*)新和英(.*)|日本語文法辞典\\(全集\\)|KireiCake|NEW斎藤和英大辞典|CEDICT|CC-CEDICT|CantoDict|Canto CEDICT|Words\\.hk C-E FS|CE Wiktionary|CC-Canto|Jitendex(.*)|ADD_BILINGUAL_DICTIONARIES_HERE)$ {{~/set~}}\n{{~#set \"utility-dict-regex\"~}} ^(NHK日本語発音アクセント新辞典|シン・漢字遣い参考|[Jj][Mm][Dd]ict( Surface)? Forms|JMedict)$ {{~/set~}}\n{{~#set \"ignored-dict-regex\"~}} ^(ADD_IGNORED_DICTIONARIES_HERE)$ {{~/set~}}\n\n\n\n{{~! ====================== Selected Text Options ======================= ~}}\n\n{{set \"opt-selection-text-enabled\"               true}}\n{{set \"opt-selection-text-dictionary\"            true}}\n{{set \"opt-selection-text-glossary\"              true}}\n{{set \"opt-selection-text-glossary-attempt-bold\" true}}\n\n\n\n{{~! ==================== Frequency Sorting Options ===================== ~}}\n{{~! See here for the official documentation on how these options work:\n    https://github.com/MarvNC/JP-Resources#freq-settings ~}}\n\n{{~#set \"opt-ignored-freq-dict-regex\"~}} ^(JLPT.*)|(HSK.*)$ {{~/set~}}\n{{~#set \"opt-ignored-freq-value-regex\"~}} ❌ {{~/set~}}\n{{~#set \"opt-keep-freqs-past-first-regex\"~}} ^()$ {{~/set~}}\n{{~set \"opt-no-freq-default-value\" 9999999 ~}}\n{{~set \"opt-freq-sorting-method\" \"harmonic\" ~}} {{~! \"min\", \"first\", \"avg\", \"harmonic\" ~}}\n\n{{~set \"opt-grammar-override\" true ~}}\n{{~set \"opt-grammar-override-value\" 0 ~}}\n{{~#set \"opt-grammar-override-dict-regex\"~}} ^(日本語文法辞典\\(全集\\)|毎日のんびり日本語教師|JLPT文法解説まとめ|どんなときどう使う 日本語表現文型辞典|絵でわかる日本語)$ {{~/set~}}\n\n\n\n{{~! ============== Dictionary First Line Removal Options =============== ~}}\n{{~set \"opt-wrap-first-line-spans\" true ~}}\n\n{{~! valid values: \"except\", \"only\" ~}}\n{{~set \"opt-first-line-regex-mode\" \"except\"~}}\n\n{{~!\n    JMdict and jitenbot dictionaries from stephenmk are ignored\n    (the latter because the handlebars cannot properly detect the first line.)\n    In particular, removing the first line from jitenbot dictionaries with handlebars alone\n    is not trivial, so that feature will not be supported.\n~}}\n{{~#set \"opt-first-line-dicts-regex\"~}} ^(JMdict.*|Nico/Pixiv|故事・ことわざ・慣用句オンライン|四字熟語辞典オンライン|国語辞典オンライン|大辞林　第四版|新明解国語辞典　第八版)$ {{~/set~}}\n\n\n\n{{~! ========================== Other Options =========================== ~}}\n{{~set \"opt-primary-def-one-dict-entry-only\" false ~}}\n{{~set \"opt-jmdict-list-format\" true ~}}\n\n\n\n\n\n\n\n\n{{~! ======================== Plaintext Options ========================= ~}}\n\n{{~!\n    WARNING: I recommend not changing these options if you are using the\n    jp-mining-note template. These options will change the general layout\n    of the HTML, which will prevent certain features or stylizations\n    from properly working. (If you aren't using jp-mining-note, please feel\n    free to change these options!)\n\n    Instead of using these options, see here:\n\n        https://aquafina-water-bottle.github.io/jp-mining-note/definitions/\n\n    These hide specific elements using CSS instead of modifying the raw HTML\n    structure behind it.\n~}}\n\n{{~set \"opt__plaintext__enabled\"                     false ~}}\n{{~set \"opt__plaintext__one-dict-entry-only-no-list\" false ~}}\n{{~set \"opt__plaintext__remove-dictionary-tag\"       false ~}}\n{{~set \"opt__plaintext__remove-first-line-enabled\"   false ~}}\n\n\n\n{{~! ============== ORIGINAL YOMITAN TEMPLATE CODE BELOW ============== ~}}\n\n\n{{#*inline \"glossary-single\"}}\n    {{~#unless brief~}}\n        {{~#scope~}}\n            {{~set \"any\" false~}}\n            {{~#each definitionTags~}}\n                {{~#if (op \"||\" (op \"!\" @root.compactTags) (op \"!\" redundant))~}}\n                    {{~#if (get \"any\")}}, {{else}}<i>({{/if~}}\n                    {{name}}\n                    {{~set \"any\" true~}}\n                {{~/if~}}\n            {{~/each~}}\n            {{~#unless noDictionaryTag~}}\n                {{~#if (op \"||\" (op \"!\" @root.compactTags) (op \"!==\" dictionary (get \"previousDictionary\")))~}}\n                    {{~#if (get \"any\")}}, {{else}}<i>({{/if~}}\n                    {{dictionaryAlias}}\n                    {{~set \"any\" true~}}\n                {{~/if~}}\n            {{~/unless~}}\n            {{~#if (get \"any\")}})</i> {{/if~}}\n        {{~/scope~}}\n        {{~#if only~}}({{#each only}}{{.}}{{#unless @last}}, {{/unless}}{{/each}} only) {{/if~}}\n    {{~/unless~}}\n    {{~#if (op \"<=\" glossary.length 1)~}}\n        {{#each glossary}}{{formatGlossary ../dictionary .}}{{/each}}\n    {{~else if @root.compactGlossaries~}}\n        {{#each glossary}}{{formatGlossary ../dictionary .}}{{#unless @last}} | {{/unless}}{{/each}}\n    {{~else~}}\n        <ul>{{#each glossary}}<li>{{formatGlossary ../dictionary .}}</li>{{/each}}</ul>\n    {{~/if~}}\n    {{~set \"previousDictionary\" dictionary~}}\n{{/inline}}\n\n{{#*inline \"audio\"}}\n    {{~#if (hasMedia \"audio\")~}}\n        [sound:{{getMedia \"audio\"}}]\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"character\"}}\n    {{~definition.character~}}\n{{/inline}}\n\n{{#*inline \"dictionary\"}}\n    {{~definition.dictionary~}}\n{{/inline}}\n\n{{#*inline \"dictionary-alias\"}}\n    {{~definition.dictionaryAlias~}}\n{{/inline}}\n\n{{#*inline \"expression\"}}\n    {{~#if merge~}}\n        {{~#if modeTermKana~}}\n            {{~#each definition.reading~}}\n                {{{.}}}\n                {{~#unless @last}}、{{/unless~}}\n            {{~else~}}\n                {{~#each definition.expression~}}\n                    {{{.}}}\n                    {{~#unless @last}}、{{/unless~}}\n                {{~/each~}}\n            {{~/each~}}\n        {{~else~}}\n            {{~#each definition.expression~}}\n                {{{.}}}\n                {{~#unless @last}}、{{/unless~}}\n            {{~/each~}}\n        {{~/if~}}\n    {{~else~}}\n        {{~#if modeTermKana~}}\n            {{~#if definition.reading~}}\n                {{definition.reading}}\n            {{~else~}}\n                {{definition.expression}}\n            {{~/if~}}\n        {{~else~}}\n            {{definition.expression}}\n        {{~/if~}}\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"furigana\"}}\n    {{~#if merge~}}\n        {{~#each definition.expressions~}}\n            <span class=\"expression-{{termFrequency}}\">{{~furigana .~}}</span>\n            {{~#unless @last}}、{{/unless~}}\n        {{~/each~}}\n    {{~else~}}\n        {{furigana definition}}\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"furigana-plain\"}}\n    {{~#if merge~}}\n        {{~#each definition.expressions~}}\n            <span class=\"expression-{{termFrequency}}\">{{~furiganaPlain .~}}</span>\n            {{~#unless @last}}、{{/unless~}}\n        {{~/each~}}\n    {{~else~}}\n        {{furiganaPlain definition}}\n    {{~/if~}}\n{{/inline}}\n\n{{~#*inline \"glossary\"~}}\n    <div style=\"text-align: left;\" class=\"yomitan-glossary\">\n    {{~#scope~}}\n        {{~#if (op \"===\" definition.type \"term\")~}}\n            {{~#unless (op \"&&\" selectedDictionary (op \"!=\" selectedDictionary definition.dictionary))~}}\n                {{~> glossary-single definition brief=brief noDictionaryTag=noDictionaryTag ~}}\n                {{~#if definition.glossaryScopedStyles~}}\n                    <style>{{{definition.glossaryScopedStyles}}}</style>\n                {{~/if~}}\n            {{~/unless~}}\n        {{~else if (op \"||\" (op \"===\" definition.type \"termGrouped\") (op \"===\" definition.type \"termMerged\"))~}}\n            {{~#if (op \">\" definition.definitions.length 1)~}}\n                <ol>\n                    {{~#each definition.definitions~}}\n                        {{~#unless (op \"&&\" ../selectedDictionary (op \"!=\" ../selectedDictionary dictionary))~}}\n                            <li data-dictionary=\"{{dictionary}}\">\n                                {{~> glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n                            </li>\n                            {{~#if dictScopedStyles~}}\n                                <style>{{{dictScopedStyles}}}</style>\n                            {{~/if~}}\n                        {{~/unless~}}\n                    {{~/each~}}\n                </ol>\n            {{~else~}}\n                {{~#each definition.definitions~}}\n                    {{~#unless (op \"&&\" ../selectedDictionary (op \"!=\" ../selectedDictionary dictionary))~}}\n                        {{~> glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n                        {{~#if glossaryScopedStyles~}}\n                            <style>{{{glossaryScopedStyles}}}</style>\n                        {{~/if~}}\n                    {{~/unless~}}\n                {{~/each~}}\n            {{~/if~}}\n        {{~else if (op \"===\" definition.type \"kanji\")~}}\n            {{~#if (op \">\" definition.glossary.length 1)~}}\n                <ol>{{#each definition.glossary}}<li>{{.}}</li>{{/each}}</ol>\n            {{~else~}}\n                {{~#each definition.glossary~}}{{.}}{{~/each~}}\n            {{~/if~}}\n        {{~/if~}}\n    {{~/scope~}}\n    </div>\n{{~/inline~}}\n\n{{#*inline \"glossary-no-dictionary\"}}\n    {{~> glossary noDictionaryTag=true ~}}\n{{/inline}}\n\n{{#*inline \"glossary-brief\"}}\n    {{~> glossary brief=true ~}}\n{{/inline}}\n\n{{~#*inline \"glossary-first\"~}}\n    <div style=\"text-align: left;\" class=\"yomitan-glossary\">\n    {{~#scope~}}\n        {{~#if (op \"===\" definition.type \"term\")~}}\n            {{~> glossary-single definition brief=brief noDictionaryTag=noDictionaryTag ~}}\n            {{~#if definition.glossaryScopedStyles~}}\n                <style>{{{definition.glossaryScopedStyles}}}</style>\n            {{~/if~}}\n        {{~else if (op \"||\" (op \"===\" definition.type \"termGrouped\") (op \"===\" definition.type \"termMerged\"))~}}\n            {{~#if (op \">\" definition.definitions.length 1)~}}\n                {{~#with definition.definitions.[0]~}}\n                    {{~> glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n                    {{~#if glossaryScopedStyles~}}\n                        <style>{{{glossaryScopedStyles}}}</style>\n                    {{~/if~}}\n                {{~/with~}}\n            {{~else~}}\n                {{~#with definition.definitions.[0]~}}\n                    {{~> glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n                    {{~#if glossaryScopedStyles~}}\n                        <style>{{{glossaryScopedStyles}}}</style>\n                    {{~/if~}}\n                {{~/with~}}\n            {{~/if~}}\n        {{~/if~}}\n    {{~/scope~}}\n    </div>\n{{~/inline~}}\n\n{{#*inline \"glossary-first-no-dictionary\"}}\n    {{~> glossary-first noDictionaryTag=true ~}}\n{{/inline}}\n\n{{#*inline \"glossary-first-brief\"}}\n    {{~> glossary-first brief=true ~}}\n{{/inline}}\n\n{{#*inline \"kunyomi\"}}\n    {{~#each definition.kunyomi}}{{.}}{{#unless @last}}, {{/unless}}{{/each~}}\n{{/inline}}\n\n{{#*inline \"onyomi\"}}\n    {{~#each definition.onyomi}}{{.}}{{#unless @last}}, {{/unless}}{{/each~}}\n{{/inline}}\n\n{{#*inline \"reading\"}}\n    {{~#unless modeTermKana~}}\n        {{~#if merge~}}\n            {{~#each definition.reading~}}\n                {{{.}}}\n                {{~#unless @last}}、{{/unless~}}\n            {{~/each~}}\n        {{~else~}}\n            {{~definition.reading~}}\n        {{~/if~}}\n    {{~/unless~}}\n{{/inline}}\n\n{{#*inline \"sentence\"}}\n    {{~#if definition.cloze}}{{{definition.cloze.sentence}}}{{/if~}}\n{{/inline}}\n\n{{#*inline \"cloze-prefix\"}}\n    {{~#if definition.cloze}}{{{definition.cloze.prefix}}}{{/if~}}\n{{/inline}}\n\n{{#*inline \"cloze-body\"}}\n    {{~#if definition.cloze}}{{{definition.cloze.body}}}{{/if~}}\n{{/inline}}\n\n{{#*inline \"cloze-suffix\"}}\n    {{~#if definition.cloze}}{{{definition.cloze.suffix}}}{{/if~}}\n{{/inline}}\n\n{{#*inline \"tags\"}}\n    {{~#mergeTags definition group merge}}{{this}}{{/mergeTags~}}\n{{/inline}}\n\n{{~#*inline \"url\"~}}\n    <a href=\"{{definition.url}}\">{{definition.url}}</a>\n{{~/inline~}}\n\n{{#*inline \"screenshot\"}}\n    {{~#if (hasMedia \"screenshot\")~}}\n        <img src=\"{{getMedia \"screenshot\"}}\" />\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"document-title\"}}\n    {{~context.document.title~}}\n{{/inline}}\n\n{{! Pitch Accents }}\n{{#*inline \"pitch-accent-item\"}}\n    {{~pronunciation format=format reading=reading downstepPosition=position nasalPositions=nasalPositions devoicePositions=devoicePositions~}}\n{{/inline}}\n\n{{#*inline \"pitch-accent-item-disambiguation\"}}\n    {{~#scope~}}\n        {{~set \"exclusive\" (spread exclusiveExpressions exclusiveReadings)~}}\n        {{~#if (op \">\" (property (get \"exclusive\") \"length\") 0)~}}\n            {{~set \"separator\" \"\"~}}\n            <em>({{#each (get \"exclusive\")~}}\n                {{~get \"separator\"~}}{{{.}}}\n            {{~/each}} only) </em>\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n\n{{#*inline \"pitch-accent-list\"}}\n    {{~#if (op \">\" pitchCount 0)~}}\n        {{~#if (op \">\" pitchCount 1)~}}<ol>{{~/if~}}\n        {{~#each pitches~}}\n            {{~#each pitches~}}\n                {{~#if (op \">\" ../../pitchCount 1)~}}<li>{{~/if~}}\n                    {{~> pitch-accent-item-disambiguation~}}\n                    {{~> pitch-accent-item format=../../format~}}\n                {{~#if (op \">\" ../../pitchCount 1)~}}</li>{{~/if~}}\n            {{~/each~}}\n        {{~/each~}}\n        {{~#if (op \">\" pitchCount 1)~}}</ol>{{~/if~}}\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"pitch-accents\"}}\n    {{~> pitch-accent-list format='text'~}}\n{{/inline}}\n\n{{#*inline \"pitch-accent-graphs\"}}\n    {{~> pitch-accent-list format='graph'~}}\n{{/inline}}\n\n{{#*inline \"pitch-accent-graphs-jj\"}}\n    {{~> pitch-accent-list format='graph-jj'~}}\n{{/inline}}\n\n{{#*inline \"pitch-accent-positions\"}}\n    {{~> pitch-accent-list format='position'~}}\n{{/inline}}\n{{! End Pitch Accents }}\n\n{{#*inline \"phonetic-transcriptions\"}}\n    {{~#if (op \">\" definition.phoneticTranscriptions.length 0)~}}\n        <ul>\n            {{~#each definition.phoneticTranscriptions~}}\n                {{~#each phoneticTranscriptions~}}\n                    <li>\n                        {{~set \"any\" false~}}   \n                        {{~#each tags~}}\n                            {{~#if (get \"any\")}}, {{else}}<i>({{/if~}}\n                            {{name}}\n                            {{~set \"any\" true~}}\n                        {{~/each~}}\n                        {{~#if (get \"any\")}})</i> {{/if~}}\n                        {{ipa~}}\n                    </li>\n                {{~/each~}}\n            {{~/each~}}\n        </ul>\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"clipboard-image\"}}\n    {{~#if (hasMedia \"clipboardImage\")~}}\n        <img src=\"{{getMedia \"clipboardImage\"}}\" />\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"clipboard-text\"}}\n    {{~#if (hasMedia \"clipboardText\")}}{{{getMedia \"clipboardText\"}}}{{/if~}}\n{{/inline}}\n\n{{#*inline \"conjugation\"}}\n    {{~#if (op \">\" definition.inflectionRuleChainCandidates.length 0)~}}\n        {{~set \"multiple\" false~}}\n        {{~#if (op \">\" definition.inflectionRuleChainCandidates.length 1)~}}\n            {{~set \"multiple\" true~}}\n        {{~/if~}}\n        {{~#if (get \"multiple\")~}}<ul>{{/if~}}\n            {{~#each definition.inflectionRuleChainCandidates~}}\n                {{~#if (op \">\" inflectionRules.length 0)~}}\n                    {{~#if (get \"multiple\")~}}<li>{{/if~}}\n                    {{~#each inflectionRules~}}\n                        {{~#if (op \">\" @index 0)}} « {{/if~}}\n                        {{name}}\n                    {{~/each~}}\n                    {{~#if (get \"multiple\")~}}</li>{{/if~}}\n                {{~/if~}}\n            {{~/each~}}\n        {{~#if (get \"multiple\")~}}</ul>{{/if~}}\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"frequencies\"}}\n    {{~#if (op \">\" definition.frequencies.length 0)~}}\n        <ul style=\"text-align: left;\">\n        {{~#each definition.frequencies~}}\n            <li>\n            {{~#if (op \"!==\" ../definition.type \"kanji\")~}}\n                {{~#if (op \"||\" (op \">\" ../uniqueExpressions.length 1) (op \">\" ../uniqueReadings.length 1))~}}(\n                    {{~furigana expression reading~}}\n                ) {{/if~}}\n            {{~/if~}}\n            {{~dictionaryAlias}}: {{frequency~}}\n            </li>\n        {{~/each~}}\n        </ul>\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"stroke-count\"}}\n    {{~#scope~}}\n        {{~set \"found\" false~}}\n        {{~#each definition.stats.misc~}}\n            {{~#if (op \"===\" name \"strokes\")~}}\n                {{~set \"found\" true~}}\n                Stroke count: {{value}}\n            {{~/if~}}\n        {{~/each~}}\n        {{~#if (op \"!\" (get \"found\"))~}}\n            Stroke count: Unknown\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n\n{{#*inline \"part-of-speech-pretty\"}}\n    {{~#if (op \"===\" . \"v1\")~}}Ichidan verb\n    {{~else if (op \"===\" . \"v5\")~}}Godan verb\n    {{~else if (op \"===\" . \"vk\")~}}Kuru verb\n    {{~else if (op \"===\" . \"vs\")~}}Suru verb\n    {{~else if (op \"===\" . \"vz\")~}}Zuru verb\n    {{~else if (op \"===\" . \"adj-i\")~}}I-adjective\n    {{~else if (op \"===\" . \"n\")~}}Noun\n    {{~else~}}{{.}}\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"part-of-speech\"}}\n    {{~#scope~}}\n        {{~#if (op \"!==\" definition.type \"kanji\")~}}\n            {{~set \"first\" true~}}\n            {{~#each definition.expressions~}}\n                {{~#each wordClasses~}}\n                    {{~#unless (get (concat \"used_\" .))~}}\n                        {{~> part-of-speech-pretty . ~}}\n                        {{~#unless (get \"first\")}}, {{/unless~}}\n                        {{~set (concat \"used_\" .) true~}}\n                        {{~set \"first\" false~}}\n                    {{~/unless~}}\n                {{~/each~}}\n            {{~/each~}}\n            {{~#if (get \"first\")~}}Unknown{{~/if~}}\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n\n{{#*inline \"search-query\"}}\n    {{~#multiLine}}{{context.fullQuery}}{{/multiLine~}}\n{{/inline}}\n\n{{#*inline \"popup-selection-text\"}}\n    {{~#if (hasMedia \"popupSelectionText\")}}{{{getMedia \"popupSelectionText\"}}}{{/if~}}\n{{/inline}}\n\n{{#*inline \"sentence-furigana\"}}\n    {{~#if definition.cloze~}}\n        {{~#if (hasMedia \"textFurigana\" definition.cloze.sentence)~}}\n            {{{getMedia \"textFurigana\" definition.cloze.sentence escape=false}}}\n        {{~else~}}\n            {{{definition.cloze.sentence}}}\n        {{~/if~}}\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"cloze-body-kana\"}}\n    {{~#if definition.cloze}}{{{definition.cloze.bodyKana}}}{{/if~}}\n{{/inline}}\n\n{{#*inline \"phonetic-transcriptions\"}}\n    {{~#if (op \">\" definition.phoneticTranscriptions.length 0)~}}\n        <ul>\n            {{~#each definition.phoneticTranscriptions~}}\n                {{~#each phoneticTranscriptions~}}\n                    <li>\n                        {{~set \"any\" false~}}\n                        {{~#each tags~}}\n                            {{~#if (get \"any\")}}, {{else}}<i>({{/if~}}\n                            {{name}}\n                            {{~set \"any\" true~}}\n                        {{~/each~}}\n                        {{~#if (get \"any\")}})</i> {{/if~}}\n                        {{ipa~}}\n                    </li>\n                {{~/each~}}\n            {{~/each~}}\n        </ul>\n    {{~/if~}}\n{{/inline}}\n{{#*inline \"frequency-harmonic-rank\"}}\n    {{~#if (op \"===\" definition.frequencyHarmonic -1) ~}}\n        9999999\n    {{~else ~}}\n        {{definition.frequencyHarmonic}}\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"frequency-harmonic-occurrence\"}}\n    {{~#if (op \"===\" definition.frequencyHarmonic -1) ~}}\n        0\n    {{~else ~}}\n        {{definition.frequencyHarmonic}}\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"frequency-average-rank\"}}\n    {{~#if (op \"===\" definition.frequencyAverage -1) ~}}\n        9999999\n    {{~else ~}}\n        {{definition.frequencyAverage}}\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"frequency-average-occurrence\"}}\n    {{~#if (op \"===\" definition.frequencyAverage -1) ~}}\n        0\n    {{~else ~}}\n        {{definition.frequencyAverage}}\n    {{~/if~}}\n{{/inline}}\n\n{{~#*inline \"pitch-accent-categories\"~}}\n    {{~#each (pitchCategories @root)~}}{{~.~}}{{~#unless @last~}},{{~/unless~}}{{~/each~}}\n{{~/inline~}}\n{{#*inline \"onyomi-hiragana\"}}\n    {{~#each definition.onyomi}}{{hiragana .}}{{#unless @last}}, {{/unless}}{{/each~}}\n{{/inline}}\n{{~> (lookup . \"marker\") ~}}\n\n{{~! ============== ORIGINAL YOMITAN TEMPLATE CODE ABOVE =============== ~}}\n{{~!                               v1.0.12                                ~}}\n\n{{~!\n    ==================\n     helper functions\n    ==================\n~}}\n\n{{#*inline \"s\"}}{{/inline}}\n\n{{~! categorizes into 4 types: \"ignored\", \"bilingual\", \"utility\", or \"monolingual\" ~}}\n{{~#*inline \"jpmn-get-dict-type\"~}}\n\n    {{~#scope~}}\n        {{~#set \"rx-match-ignored\" ~}}\n            {{~#regexMatch (get \"ignored-dict-regex\") \"gu\"~}}{{dictionaryName}}{{~/regexMatch~}}\n        {{/set~}}\n        {{~#set \"rx-match-utility\" ~}}\n            {{~#regexMatch (get \"utility-dict-regex\") \"gu\"~}}{{dictionaryName}}{{~/regexMatch~}}\n        {{/set~}}\n        {{~#set \"rx-match-bilingual\" ~}}\n            {{~#regexMatch (get \"bilingual-dict-regex\") \"gu\"~}}{{dictionaryName}}{{~/regexMatch~}}\n        {{/set~}}\n\n\n        {{~#if (op \"!==\" (get \"rx-match-ignored\") \"\")~}}\n            ignored\n        {{~else if (op \"!==\" (get \"rx-match-utility\") \"\")~}}\n            utility\n        {{~else if (op \"!==\" (get \"rx-match-bilingual\") \"\")~}}\n            bilingual\n        {{~else~}}\n            {{~! assumed that anything else is a monolingual dictionary ~}}\n            monolingual\n        {{~/if~}}\n\n    {{~/scope~}}\n\n{{~/inline~}}\n\n\n\n{{~! returns \"\" if selection text is disabled, or if none existed in the first place ~}}\n{{~#*inline \"_jpmn-selection-text\"~}}\n    {{~! text-mode != \"\" and text-mode > 0 ~}}\n    {{~#if (op \"===\" (get \"opt-selection-text-enabled\") true)~}}\n        {{~! removes leading and trailing whitespace ~}}\n        {{~#regexReplace \"^\\s+|\\s+$\" \"\" \"g\"~}}\n            {{~#getMedia \"selectionText\"}}{{/getMedia~}}\n        {{~/regexReplace~}}\n    {{~/if~}}\n{{~/inline~}}\n\n{{~! checks that the selection text is indeed a dictionary (returns the text if true, nothing if false) ~}}\n{{~#*inline \"_jpmn-check-dictionary\"~}}\n    {{~#scope~}}\n        {{~#set \"selection-is-dictionary\" false}}{{/set~}}\n\n        {{~#each definition.definitions~}}\n            {{~#if (op \"===\" (get \"selection\") dictionary)~}}\n                {{~#set \"selection-is-dictionary\" true ~}}{{~/set~}}\n            {{~/if~}}\n        {{~/each~}}\n\n        {{~#if (op \"===\" (get \"selection-is-dictionary\") true)~}}\n            {{~get \"selection\"~}}\n        {{~else~}}\n            {{~! null ~}}\n        {{~/if~}}\n    {{~/scope~}}\n{{~/inline~}}\n\n\n\n{{~!\n    Gives the raw glossary as the search string\n    (for searching to see if the selected text is a part of a dictionary)\n\n    Remember: we should NOT use _jpmn-glossary-single because it preprocesses the text!\n    If the selected text was on the first line and the first line is removed,\n    then using _jpmn-glossary-single will fail to find the selected text!\n~}}\n{{#*inline \"_jpmn-glossary-single-search\"}}\n\n    {{~#scope~}}\n        {{~#each glossary}}{{formatGlossary ../dictionary .}}{{#unless @last}} | {{/unless}}{{/each~}}\n    {{~/scope~}}\n\n{{/inline}}\n\n\n\n{{~! escape a regex string: https://stackoverflow.com/a/6969486~}}\n{{~! /[.*+?^${}()|[\\]\\\\]/g, '\\\\$&' ~}}\n{{~! escapes the `regexString` regex to allow it to be used like a normal search in a string ~}}\n{{#*inline \"_jpmn-escape-regex\"}}\n    {{~#regexReplace \"[.*+?^${}()|[\\]\\\\]\" \"\\$&\" \"g\"~}}{{~regexString~}}{{~/regexReplace~}}\n{{/inline}}\n\n\n{{~#*inline \"_jpmn-get-dict-if-glossary-selected\"~}}\n    {{~#scope~}}\n        {{~#set \"result-dictionary\" null}}{{/set~}}\n        {{~#set \"search-selection\"}}{{~#regexReplace \"[.*+?^${}()|[\\]\\\\]\" \"\\$&\" \"g\"~}}{{~> _jpmn-selection-text ~}}{{~/regexReplace~}}{{/set~}}\n\n        {{~#each definition.definitions~}}\n            {{~#set \"search-def\"}}{{~> _jpmn-glossary-single-search . brief=../brief noDictionaryTag=../noDictionaryTag ~}}{{/set~}}\n\n            {{~#set \"search-regex-match\"}}\n                {{~#regexMatch (get \"search-selection\") \"gu\"}}{{~get \"search-def\"~}}{{/regexMatch~}}\n            {{/set~}}\n            {{~#if (op \"&&\"\n                (op \"===\" (get \"result-dictionary\") null)\n                (op \"!==\" (get \"search-regex-match\") \"\")\n            )~}}\n                {{~#set \"result-dictionary\" dictionary}}{{/set~}}\n            {{~/if~}}\n\n        {{~/each~}}\n        {{~get \"result-dictionary\" ~}}\n    {{~/scope~}}\n{{~/inline~}}\n\n\n\n\n{{~!\n    searches dictionary, determined by `opt-first-definition-type`\n    - (opt-first-definition-type === bilingual) -> bilingual dictionaries are searched first\n    - (opt-first-definition-type === monolingual) -> monolingual dictionaries are searched first\n~}}\n{{~#*inline \"_jpmn-search-primary-definition-dict\"~}}\n    {{~#scope~}}\n        {{~#if (op \"===\" (get \"opt-first-definition-type\") \"bilingual\")~}}\n            {{~#set \"first-definition-search-type-1\" \"bilingual\"}}{{/set~}}\n            {{~#set \"first-definition-search-type-2\" \"monolingual\"}}{{/set~}}\n        {{~else~}}\n            {{~#set \"first-definition-search-type-1\" \"monolingual\"}}{{/set~}}\n            {{~#set \"first-definition-search-type-2\" \"bilingual\"}}{{/set~}}\n        {{~/if~}}\n\n\n        {{~! first-dictionary === null <=> no valid dictionary was found ~}}\n        {{~#set \"first-dictionary\" null}}{{/set~}}\n\n        {{~#each definition.definitions~}}\n\n            {{~#set \"test-dict-name\"}}{{~> jpmn-get-dict-type . dictionaryName=dictionary ~}}{{/set~}}\n            {{~#if (op \"===\" (get \"test-dict-name\") (get \"first-definition-search-type-1\"))~}}\n                {{~#if (op \"===\" null (get \"first-dictionary\"))~}}\n                    {{~#set \"first-dictionary\" dictionary~}}{{~/set~}}\n                {{~/if~}}\n            {{~/if~}}\n\n        {{~/each~}}\n\n\n        {{~! uses other dictionary type, last resort ~}}\n        {{~#if (op \"===\" (get \"first-dictionary\") null)~}}\n\n            {{~#each definition.definitions~}}\n\n                {{~#set \"test-dict-name\"}}{{~> jpmn-get-dict-type . dictionaryName=dictionary ~}}{{/set~}}\n                {{~#if (op \"===\" (get \"test-dict-name\") (get \"first-definition-search-type-2\"))~}}\n                    {{~#if (op \"===\" null (get \"first-dictionary\"))~}}\n                        {{~#set \"first-dictionary\" dictionary~}}{{~/set~}}\n                    {{~/if~}}\n                {{~/if~}}\n\n            {{~/each~}}\n\n        {{~/if~}}\n\n        {{~#get \"first-dictionary\"~}}{{~/get~}}\n    {{~/scope~}}\n{{~/inline~}}\n\n\n{{~!\n    if (selection-text exists):\n        if (selection-text is exactly a dictionary):\n            return dictionary\n        if (able to detect dictionary of which the selection-text is highlighting):\n            return dictionary\n        return null\n~}}\n{{~#*inline \"_jpmn-check-dictionary-and-glossary\"~}}\n    {{~#scope~}}\n\n        {{~#set \"result\" \"\"}}{{/set~}}\n\n        {{~! checks if the selected text matches a dictionary ~}}\n        {{~#if (op \"===\" (get \"opt-selection-text-dictionary\") true)~}}\n            {{~#set \"result\"}}{{~> _jpmn-check-dictionary . ~}}{{/set~}}\n        {{~/if~}}\n\n        {{~! checks if the selected text matches a definition in a dictionary ~}}\n        {{~#if\n            (op \"&&\" (op \"===\" (get \"result\") \"\")\n                (op \"&&\"\n                    (op \"===\" (get \"opt-selection-text-glossary\") true)\n                    (op \"===\" (get \"opt-selection-text-glossary-attempt-bold\") true)\n                )\n            )\n        ~}}\n            {{~#set \"result\"}}{{~> _jpmn-get-dict-if-glossary-selected . ~}}{{/set~}}\n        {{~/if~}}\n\n        {{~get \"result\" ~}}\n\n    {{~/scope~}}\n{{~/inline~}}\n\n\n{{~!\n    if (selection-text exists):\n        if (selection-text is exactly a dictionary):\n            return null\n        if (able to detect dictionary of which the selection-text is highlighting):\n            return \"uses-glossary\"\n        return null\n~}}\n{{~#*inline \"_jpmn-selection-uses-glossary\"~}}\n    {{~#scope~}}\n\n        {{~#set \"result\" \"\"}}{{/set~}}\n\n        {{~! checks if the selected text matches a dictionary ~}}\n        {{~#if (op \"===\" (get \"opt-selection-text-dictionary\") true)~}}\n            {{~#set \"result\"}}{{~> _jpmn-check-dictionary . ~}}{{/set~}}\n        {{~/if~}}\n\n        {{~! checks if the selected text matches a definition in a dictionary ~}}\n        {{~#if (op \"!==\" (get \"result\") \"\") ~}}\n            {{~! selection-text is a dictionary -> null ~}}\n        {{~else if\n            (op \"&&\"\n                (op \"===\" (get \"opt-selection-text-glossary\") true)\n                (op \"===\" (get \"opt-selection-text-glossary-attempt-bold\") true)\n            )\n        ~}}\n            {{~#set \"result\"}}{{~> _jpmn-get-dict-if-glossary-selected . ~}}{{/set~}}\n            {{~#if (op \"!==\" (get \"result\") \"\") ~}}\n                {{~! selection-text dict found -> \"uses-glossary\" ~}}\n                uses-glossary\n            {{~/if~}}\n        {{~/if~}}\n\n    {{~/scope~}}\n{{~/inline~}}\n\n\n\n\n{{~!\n    if (selection-text exists):\n        if (selection-text is exactly a dictionary):\n            return dictionary\n        if (able to detect dictionary of which the selection-text is highlighting):\n            return dictionary\n        if (selection-text-glossary is not enabled):\n            return first-dictionary (determined by `opt-first-definition-type`)\n        return null\n\n    else:\n        return first-dictionary (determined by `opt-first-definition-type`)\n~}}\n{{~#*inline \"_jpmn-get-primary-definition-dict\"~}}\n    {{~#scope~}}\n\n        {{~! first checks selection text ~}}\n        {{~#set \"selection\"}}{{~> _jpmn-selection-text ~}}{{/set~}}\n        {{~#if (op \"!==\" (get \"selection\") \"\")~}}\n\n            {{~#set \"result\"}}{{~> _jpmn-check-dictionary-and-glossary . ~}}{{/set~}}\n\n            {{~! doesn't return a dictionary if opt-selection-text-glossary is false b/c ~}}\n            {{~#if\n                (op \"&&\"\n                    (op \"===\" (get \"result\") \"\")\n                    (op \"===\" (get \"opt-selection-text-glossary\") false)\n                )\n            ~}}\n                {{~#set \"result\"}}{{~> _jpmn-search-primary-definition-dict . ~}}{{/set~}}\n            {{~/if~}}\n\n            {{~get \"result\" ~}}\n\n        {{~! no selection text ~}}\n        {{~else~}}\n            {{~> _jpmn-search-primary-definition-dict . ~}}\n        {{~/if~}}\n\n    {{~/scope~}}\n\n{{~/inline~}}\n\n\n\n\n{{~!\n    get number of primary dictionary entries\n~}}\n{{~#*inline \"_jpmn-primary-dict-entry-count\"~}}\n    {{~#scope~}}\n\n        {{~#set \"primary-dictionary\"}}{{~> _jpmn-get-primary-definition-dict . ~}}{{/set~}}\n\n        {{~set \"dict-entry-count\" 0 ~}}\n\n        {{~#each definition.definitions~}}\n            {{~#if (op \"===\" dictionary (get \"primary-dictionary\")) ~}}\n                {{~! dict-entry-count += 1 ~}}\n                {{~set \"dict-entry-count\" (op \"+\"\n                    (get \"dict-entry-count\") 1\n                )\n                ~}}\n            {{~/if~}}\n        {{~/each~}}\n\n        {{~get \"dict-entry-count\" ~}}\n\n    {{~/scope~}}\n\n{{~/inline~}}\n\n\n\n\n\n\n\n{{~!\n    returns \"true\" if valid dict, \"\" (null) otherwise\n~}}\n{{~#*inline \"_jpmn-non-primary-is-valid-dict\"~}}\n    {{~!\n        PARAMETERS:\n            validDictType: \"monolingual\" or \"bilingual\" or \"utility\"\n            dictionaryName: dictionary id\n            entryCount: primary dictionary entry count\n    ~}}\n    {{~#scope~}}\n\n        {{~set \"use-primary-dictionary\" (op \"&&\"\n            (get \"opt-primary-def-one-dict-entry-only\")\n            (op \"&&\" (op \"!==\" (op \"+\" entryCount) 0) (op \"!==\" (op \"+\" entryCount) 1))\n        )\n        ~}}\n\n        {{~set \"valid-dict\" null ~}}\n        {{~#set \"test-dict-type\"}}{{~> jpmn-get-dict-type . dictionaryName=dictionaryName ~}}{{/set~}}\n        {{~#if (op \"&&\"\n            (op \"===\" (get \"test-dict-type\") validDictType)\n            (op \"||\"\n                (op \"!==\" (get \"primary-dictionary\") dictionaryName)\n                (op \"===\" (get \"use-primary-dictionary\") true)\n            )\n        ) ~}}\n            {{~set \"valid-dict\" \"true\" ~}}\n        {{~/if~}}\n        {{~get \"valid-dict\" ~}}\n\n    {{~/scope~}}\n{{~/inline~}}\n\n\n{{~!\n    returns \"true\" if valid dict, \"\" (null) otherwise\n~}}\n{{~#*inline \"_jpmn-non-primary-has-valid-dict\"~}}\n    {{~!\n        PARAMETERS:\n            validDictType: \"monolingual\" or \"bilingual\" or \"utility\"\n            entryCount: primary dictionary entry count\n    ~}}\n    {{~#scope~}}\n\n        {{~set \"use-primary-dictionary\" (op \"&&\"\n            (get \"opt-primary-def-one-dict-entry-only\")\n            (op \"&&\" (op \"!==\" (op \"+\" entryCount) 0) (op \"!==\" (op \"+\" entryCount) 1))\n        )\n        ~}}\n\n        {{~!\n            without this set statement, the parameters\n            magically disappears within the bottom 'each' loop...\n        ~}}\n        {{~ set \"valid-dict-type\" validDictType ~}}\n        {{~ set \"entry-count\" entryCount ~}}\n\n        {{~set \"has-valid-dict\" null ~}}\n        {{~#each definition.definitions~}}\n            {{~#set \"is-valid-dict\"}}{{~> _jpmn-non-primary-is-valid-dict . validDictType=(get \"valid-dict-type\") entryCount=(get \"entry-count\") dictionaryName=dictionary ~}}{{/set~}}\n\n            {{~#if (op \"===\" (get \"is-valid-dict\") \"true\") ~}}\n                {{~set \"has-valid-dict\" \"true\" ~}}\n            {{~/if~}}\n\n        {{~/each~}}\n        {{~get \"has-valid-dict\" ~}}\n\n    {{~/scope~}}\n{{~/inline~}}\n\n\n\n\n\n\n{{~#*inline \"_jpmn-get-primary-definition-value\"~}}\n    {{~!\n        ASSUMPTION: \"primary-dictionary\" and \"search-selection\" is available to us from previous functions\n    ~}}\n    {{~#scope~}}\n\n        {{~#if\n            (op \"&&\"\n                (op \"!==\" (get \"search-selection\") \"\")\n                (get \"opt-primary-def-one-dict-entry-only\")\n            )\n        ~}}\n            {{~! text was highlighted -> use primary dictionary entry with highlighted text ~}}\n\n            {{~set \"found-dict-entry\" false ~}}\n\n            {{~#if (op \"!\" (get \"opt__plaintext__one-dict-entry-only-no-list\")) ~}}\n            <ol>\n            {{~/if~}}\n\n            {{~#each definition.definitions~}}\n\n                {{~#set \"rx-match-dict-entry\" ~}}\n                    {{~#regexMatch (get \"search-selection\") \"gu\"~}}{{~> _jpmn-glossary-single-search . brief=../brief noDictionaryTag=../noDictionaryTag ~}}{{~/regexMatch~}}\n                {{/set~}}\n\n                {{~#if\n                    (op \"&&\"\n                        (op \"===\" (get \"found-dict-entry\") false)\n                        (op \"&&\"\n                            (op \"!==\" (get \"rx-match-dict-entry\") \"\")\n                            (op \"===\" dictionary (get \"primary-dictionary\"))\n                        )\n                    )\n                ~}}\n\n                    {{~#if (op \"!\" (get \"opt__plaintext__one-dict-entry-only-no-list\")) ~}}\n                    <li data-details=\"{{~dictionary~}}\">\n                    {{~/if~}}\n\n                    {{~> _jpmn-glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n\n                    {{~#if (op \"!\" (get \"opt__plaintext__one-dict-entry-only-no-list\")) ~}}\n                    </li>\n                    {{~/if~}}\n\n                    {{~set \"found-dict-entry\" true ~}}\n                {{~/if~}}\n            {{~/each~}}\n\n            {{~#if (op \"!\" (get \"opt__plaintext__one-dict-entry-only-no-list\")) ~}}\n            </ol>\n            {{~/if~}}\n\n        {{~else if (get \"opt-primary-def-one-dict-entry-only\") ~}}\n            {{~! use first primary dictionary entry ~}}\n\n            {{~set \"found-dict-entry\" false ~}}\n\n            {{~#if (op \"!\" (get \"opt__plaintext__one-dict-entry-only-no-list\")) ~}}\n            <ol>\n            {{~/if~}}\n\n            {{~#each definition.definitions~}}\n                {{~#if\n                    (op \"&&\"\n                        (op \"===\" (get \"found-dict-entry\") false)\n                        (op \"===\" dictionary (get \"primary-dictionary\"))\n                    )\n                ~}}\n\n                    {{~#if (op \"!\" (get \"opt__plaintext__one-dict-entry-only-no-list\")) ~}}\n                    <li data-details=\"{{~dictionary~}}\">\n                    {{~/if~}}\n\n                    {{~> _jpmn-glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n\n                    {{~#if (op \"!\" (get \"opt__plaintext__one-dict-entry-only-no-list\")) ~}}\n                    </li>\n                    {{~/if~}}\n\n                    {{~set \"found-dict-entry\" true ~}}\n                {{~/if~}}\n            {{~/each~}}\n\n            {{~#if (op \"!\" (get \"opt__plaintext__one-dict-entry-only-no-list\")) ~}}\n            </ol>\n            {{~/if~}}\n\n        {{~else~}}\n            {{~! use all primary dictionary entries ~}}\n\n            {{~#if (get \"opt__plaintext__one-dict-entry-only-no-list\") ~}}\n                {{~! must manually calculate number of primary-dictionary entries... ~}}\n\n                {{~set \"t\" 0 ~}}\n                {{~#each definition.definitions~}}\n                    {{~#if (op \"===\" dictionary (get \"primary-dictionary\"))~}}\n                        {{~set \"t\" (op \"+\" (get \"t\") 1) ~}}\n                    {{~/if~}}\n                {{~/each~}}\n\n                {{~#if (op \">=\" (get \"t\") 2)~}} <ol> {{~/if~}}\n\n                {{~#each definition.definitions~}}\n                    {{~#if (op \"===\" dictionary (get \"primary-dictionary\"))~}}\n                        {{~#if (op \">=\" (get \"t\") 2)~}} <li data-details=\"{{~dictionary~}}\"> {{~/if~}}\n                            {{~> _jpmn-glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n                        {{~#if (op \">=\" (get \"t\") 2)~}} </li> {{~/if~}}\n                    {{~/if~}}\n                {{~/each~}}\n\n                {{~#if (op \">=\" (get \"t\") 2)~}} </ol> {{~/if~}}\n\n            {{~else~}}\n\n                <ol> {{~s~}}\n\n                {{~#each definition.definitions~}}\n                    {{~#if (op \"===\" dictionary (get \"primary-dictionary\"))~}}\n                        <li data-details=\"{{~dictionary~}}\">\n                            {{~> _jpmn-glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n                        </li>\n                    {{~/if~}}\n                {{~/each~}}\n\n                </ol> {{~s~}}\n\n            {{~/if~}}\n\n        {{~/if~}}\n\n    {{~/scope~}}\n\n{{~/inline~}}\n\n\n{{~!\n    if (mode === \"except\" and (regex doesn't match) or mode === \"only\" and (regex matches)):\n        return true\n    return null\n~}}\n\n{{#*inline \"_jpmn-check-first-line-dict\"}}\n    {{~#scope~}}\n\n        {{~#set \"rx-match-first-line-dict\" ~}}\n            {{~#regexMatch (get \"opt-first-line-dicts-regex\") \"u\"~}}{{dictionary}}{{~/regexMatch~}}\n        {{/set~}}\n\n        {{~#if (op \"||\"\n            (op \"&&\"\n                (op \"===\" (get \"opt-first-line-regex-mode\") \"except\")\n                (op \"===\" (get \"rx-match-first-line-dict\") \"\")\n            )\n            (op \"&&\"\n                (op \"===\" (get \"opt-first-line-regex-mode\") \"only\")\n                (op \"!==\" (get \"rx-match-first-line-dict\") \"\")\n            )\n        )\n        ~}}\n            true\n        {{~/if~}}\n    {{~/scope~}}\n{{~/inline~}}\n\n{{~! custom glossary-single function for additional regex parsing per dictionary ~}}\n{{~! OVERRIDES brief and noDictionaryTag ~}}\n{{#*inline \"_jpmn-glossary-single\"}}\n    {{~#scope~}}\n\n        {{~#if (op \"===\" dictionary \"NHK日本語発音アクセント新辞典\")~}}\n            {{~#regexReplace \"<br></span> ・\" \"<br></span>\" \"g\"~}}\n                {{~#regexReplace \"<br> ・\" \"<br>\" \"g\"~}}\n                    {{~> _jpmn-glossary-single2 . ~}}\n                {{~/regexReplace~}}\n            {{~/regexReplace~}}\n        {{~else~}}\n            {{~> _jpmn-glossary-single2 . ~}}\n        {{~/if~}}\n\n    {{~/scope~}}\n{{/inline}}\n\n\n\n{{~! custom glossary-single function to add custom html around the dictionary and tags ~}}\n{{#*inline \"_jpmn-glossary-single2\"}}\n\n    {{~#scope~}}\n\n        {{~#if (op \"!\" (get \"opt__plaintext__enabled\")) ~}}\n\n            <span class=\"dict-group__tag-list\"> {{~s~}}\n\n                {{~#each definitionTags~}}\n\n                    <span class=\"dict-group__tag dict-group__tag--name\"> {{~s~}}\n                        <span class=\"dict-group__tag-inner\"> {{~s~}}\n                            {{~name~}}\n                        </span> {{~s~}}\n                    </span> {{~s~}}\n\n                {{~/each~}}\n\n                <span class=\"dict-group__tag dict-group__tag--dict\"> {{~s~}}\n                    <span class=\"dict-group__tag-inner\"> {{~s~}}\n                        {{~dictionary~}}\n                    </span> {{~s~}}\n                </span> {{~s~}}\n\n            </span> {{~s~}}\n\n        {{~else~}}\n\n            {{~#scope~}}\n                {{~#set \"any\" false}}{{/set~}}\n                {{~#each definitionTags~}}\n                    {{~#if (get \"any\")}}, {{else}}({{/if~}}\n                    {{name}}\n                    {{~#set \"any\" true}}{{/set~}}\n                {{~/each~}}\n                {{~#if (op \"!\" (get \"opt__plaintext__remove-dictionary-tag\"))~}}\n                    {{~#if (get \"any\")}}, {{else}}({{/if~}}\n                    {{dictionary}}\n                    {{~#set \"any\" true}}{{/set~}}\n                {{~/if~}}\n                {{~#if (get \"any\")}}) {{/if~}}\n            {{~/scope~}}\n            {{~#if only~}}({{#each only}}{{.}}{{#unless @last}}, {{/unless}}{{/each}} only) {{/if~}}\n\n        {{~/if~}}\n\n        {{~#if (op \"!\" (get \"opt__plaintext__enabled\")) ~}}\n        <span class=\"dict-group__glossary\"> {{~s~}}\n        {{~/if~}}\n\n        {{~!\n            option to not wrap with spans because it may break dictionaries\n            (this is the hell that is parsing html with regex)\n        ~}}\n        {{~#if (op \"&&\"\n            (get \"opt-wrap-first-line-spans\")\n            (op \"!\" (get \"opt__plaintext__enabled\"))\n        )\n        }}\n\n            {{~#set \"modify-first-line\" ~}}{{> _jpmn-check-first-line-dict dictionary=dictionary }}{{~/set~}}\n\n            {{~#if (get \"modify-first-line\") ~}}\n                {{~#regexReplace\n                        \"^(<span lang=\\\"ja\\\">)?(.*?)<br>\"\n                        \"$1<span class=\\\"dict-group__glossary--first-line\\\">$2</span><span class=\\\"dict-group__glossary--first-line-break\\\"><br></span>\"\n                ~}}\n                    {{~> _jpmn-glossary-single3 . ~}}\n                {{~/regexReplace~}}\n            {{~else~}}\n                {{~> _jpmn-glossary-single3 . ~}}\n            {{~/if~}}\n\n        {{~else if (get \"opt__plaintext__remove-first-line-enabled\")~}}\n\n            {{~#set \"modify-first-line\" ~}}{{> _jpmn-check-first-line-dict dictionary=dictionary }}{{~/set~}}\n\n            {{~#if (get \"modify-first-line\") ~}}\n                {{~! none match means the dictionary is not an exception, i.e. replace newline ~}}\n                {{~#regexReplace\n                        \"^(<span lang=\\\"ja\\\">)?(.*?)<br>\"\n                        \"$1\"\n                ~}}\n                    {{~> _jpmn-glossary-single3 . ~}}\n                {{~/regexReplace~}}\n            {{~else~}}\n                {{~> _jpmn-glossary-single3 . ~}}\n            {{~/if~}}\n\n        {{~else~}}\n            {{~> _jpmn-glossary-single3 . ~}}\n        {{~/if~}}\n\n        {{~#if (op \"!\" (get \"opt__plaintext__enabled\")) ~}}\n        </span> {{~s~}}\n        {{~/if~}}\n\n    {{~/scope~}}\n\n    {{~#if only~}}({{#each only}}{{.}}{{#unless @last}}, {{/unless}}{{/each}} only) {{/if~}}\n{{/inline}}\n\n\n\n\n{{#*inline \"_jpmn-glossary-single3\"}}\n\n    {{~#scope~}}\n\n        {{~#if (op \"&&\"\n            (op \"===\" (get \"opt-jmdict-list-format\") true)\n            (op \"||\"\n                (op \"===\" dictionary \"JMdict (English)\")\n                (op \"||\"\n                    (op \"===\" dictionary \"JMdict Extra\")\n                    (op \"===\" dictionary \"JMdict\")\n                )\n            )\n        )\n        ~}}\n            {{~#if (op \"<=\" glossary.length 1)~}}\n                {{#each glossary}}{{formatGlossary ../dictionary .}}{{/each}}\n            {{~else~}}\n                <ul>{{#each glossary}}<li>{{formatGlossary ../dictionary .}}</li>{{/each}}</ul>\n            {{~/if~}}\n        {{~else~}}\n            {{~#each glossary}}{{formatGlossary ../dictionary .}}{{#unless @last}} | {{/unless}}{{/each~}}\n        {{~/if~}}\n\n    {{~/scope~}}\n\n{{/inline}}\n\n\n\n\n\n{{~!\n    =============\n     frequencies\n    =============\n~}}\n\n{{#*inline \"jpmn-frequencies\"}}\n    {{~#if (op \">\" definition.frequencies.length 0)~}}\n        {{~#each definition.frequencies~}}\n            <div class=\"frequencies__group\" data-details=\"{{~dictionary~}}\"> {{~s~}}\n                <div class=\"frequencies__number\"> {{~s~}}\n                    <span class=\"frequencies__number-inner\"> {{~s~}}\n                        {{~! removes the \"X\" in JPDB's frequency and replaces it with a less assuming character\n                            (it interferes with the color of the card, since you see red\n                            at the top corner which is somewhat distracting) ~}}\n                        {{~#regexReplace \"❌\" \"✖\" \"g\"~}}\n                            {{~frequency~}}\n                        {{~/regexReplace~}}\n                    </span> {{~s~}}\n                </div> {{~s~}}\n                <div class=\"frequencies__dictionary\"> {{~s~}}\n                    <span class=\"frequencies__dictionary-inner\"> {{~s~}}\n                        {{~dictionary~}}\n                    </span> {{~s~}}\n                </div> {{~s~}}\n            </div>\n        {{~/each~}}\n    {{~/if~}}\n{{/inline}}\n\n{{~! base code taken from: https://github.com/MarvNC/JP-Resources#sorting-mined-anki-cards-by-frequency ~}}\n{{~! NOTE: THIS IS ONLY KEPT FOR LEGACY PURPOSES, and is now deprecated. Please use {jpmn-frequency-sort} instead. ~}}\n{{~#*inline \"jpmn-min-freq\"~}}\n    {{~#scope~}}\n        {{~#set \"min-freq\" 0~}}{{~/set~}}\n            {{~#each definition.frequencies~}}\n\n                {{~#set \"rx-match-ignored-freq\" ~}}\n                    {{~#regexMatch (get \"ignored-freq-dict-regex\") \"gu\"~}}{{this.dictionary}}{{~/regexMatch~}}\n                {{/set~}}\n\n                {{~#if\n                    (op \"&&\"\n                        (op \"||\"\n                            (op \"===\" (get \"min-freq\") 0)\n                            (op \">\" (op \"+\" (get \"min-freq\")) (op \"+\" (regexMatch \"\\d\" \"g\" this.frequency)))\n                        )\n                        (op \"===\" (get \"rx-match-ignored-freq\") \"\")\n                    )\n                ~}}\n                    {{~#set \"min-freq\" (op \"+\" (regexMatch \"\\d\" \"g\" this.frequency))}}{{/set~}}\n                {{~/if~}}\n            {{~/each~}}\n        {{~get \"min-freq\"~}}\n    {{~/scope~}}\n{{/inline}}\n\n\n{{#*inline \"jpmn-frequency-sort\"}}\n    {{~! Frequency sort handlebars: v24.01.06.1 ~}}\n    {{~! The latest version can be found at https://github.com/MarvNC/JP-Resources#freq-handlebar ~}}\n    {{~#scope~}}\n\n        {{~! Do not change the code below unless you know what you are doing. ~}}\n        {{~set \"result-freq\" -1 ~}} {{~! -1 is chosen because no frequency dictionaries should have an entry as -1 ~}}\n        {{~set \"prev-freq-dict\" \"\" ~}}\n        {{~set \"t\" 1 ~}}\n        {{~set \"found-grammar-dict\" false ~}}\n\n        {{~! search for grammar dictionary ~}}\n        {{~#each definition.definitions~}}\n            {{~#set \"rx-match-grammar-dicts\" ~}}\n                {{~#regexMatch (get \"opt-grammar-override-dict-regex\") \"u\"~}}{{this.dictionary}}{{~/regexMatch~}}\n            {{/set~}}\n            {{~! rx-match-grammar-dicts is not empty if a grammar dictionary was found ~}}\n            {{~#if (op \"!==\" (get \"rx-match-grammar-dicts\") \"\") ~}}\n                {{~set \"found-grammar-dict\" true ~}}\n            {{/if~}}\n        {{~/each~}}\n\n        {{~! Additional case when \"Result grouping mode\" is set to \"No Grouping\"~}}\n        {{~#set \"rx-match-grammar-dicts\" ~}}\n            {{~#regexMatch (get \"opt-grammar-override-dict-regex\") \"u\"~}}{{this.definition.dictionary}}{{~/regexMatch~}}\n        {{/set~}}\n        {{~! rx-match-grammar-dicts is not empty if a grammar dictionary was found ~}}\n        {{~#if (op \"!==\" (get \"rx-match-grammar-dicts\") \"\") ~}}\n            {{~set \"found-grammar-dict\" true ~}}\n        {{/if~}}\n\n        {{~#each definition.frequencies~}}\n\n            {{~! rx-match-ignored-freq is not empty if ignored <=> rx-match-ignored-freq is empty if not ignored ~}}\n            {{~#set \"rx-match-ignored-freq\" ~}}\n                {{~#regexMatch (get \"opt-ignored-freq-dict-regex\") \"u\"~}}{{this.dictionary}}{{~/regexMatch~}}\n            {{/set~}}\n\n            {{~#set \"rx-match-ignored-value\" ~}}\n                {{~#regexMatch (get \"opt-ignored-freq-value-regex\") \"u\"~}}{{this.frequency}}{{~/regexMatch~}}\n            {{/set~}}\n            {{~#if (op \"&&\" (op \"===\" (get \"rx-match-ignored-freq\") \"\") (op \"===\" (get \"rx-match-ignored-value\") \"\"))~}}\n\n                {{~!\n                    only uses the 1st frequency of any dictionary.\n                    For example, if JPDB lists 440 and 26189㋕, only the first 440 will be used.\n                ~}}\n                {{~set \"read-freq\" false ~}}\n                {{~#if (op \"!==\" (get \"prev-freq-dict\") this.dictionary ) ~}}\n                    {{~set \"read-freq\" true ~}}\n                    {{~set \"prev-freq-dict\" this.dictionary ~}}\n                {{/if~}}\n\n                {{~#if (op \"!\" (get \"read-freq\") ) ~}}\n                    {{~#set \"rx-match-keep-freqs\" ~}}\n                        {{~#regexMatch (get \"opt-keep-freqs-past-first-regex\") \"u\"~}}{{this.dictionary}}{{~/regexMatch~}}\n                    {{/set~}}\n\n                    {{~! rx-match-keep-freqs is not empty if keep freqs ~}}\n                    {{~#if (op \"!==\" (get \"rx-match-keep-freqs\") \"\") ~}}\n                        {{~set \"read-freq\" true ~}}\n                    {{/if~}}\n                {{/if~}}\n\n                {{~#if (get \"read-freq\") ~}}\n                    {{~#set \"numericFrequencyMatch\"}}{{~#regexMatch \"\\d+\" \"\"}}{{~this.frequency~}}{{/regexMatch~}}{{/set~}}\n                    {{~set \"f\" (op \"+\" (get \"numericFrequencyMatch\")) ~}}\n\n                    {{~#if (op \"===\" (get \"opt-freq-sorting-method\") \"min\") ~}}\n                        {{~#if\n                            (op \"||\"\n                                (op \"===\" (get \"result-freq\") -1)\n                                (op \">\" (get \"result-freq\") (get \"f\"))\n                            )\n                        ~}}\n                            {{~set \"result-freq\" (op \"+\" (get \"f\")) ~}}\n                        {{~/if~}}\n\n                    {{~else if (op \"===\" (get \"opt-freq-sorting-method\") \"first\") ~}}\n                        {{~#if (op \"===\" (get \"result-freq\") -1) ~}}\n                            {{~set \"result-freq\" (get \"f\") ~}}\n                        {{~/if~}}\n\n                    {{~else if (op \"===\" (get \"opt-freq-sorting-method\") \"avg\") ~}}\n\n                        {{~#if (op \"===\" (get \"result-freq\") -1) ~}}\n                            {{~set \"result-freq\" (get \"f\") ~}}\n                        {{~else~}}\n                            {{~!\n                                iterative mean formula (to prevent floating point overflow):\n                                    $S_{(t+1)} = S_t + \\frac{1}{t+1} (x - S_t)$\n                                - example java implementation: https://stackoverflow.com/a/1934266\n                                - proof: https://www.heikohoffmann.de/htmlthesis/node134.html\n                            ~}}\n                            {{~set \"result-freq\"\n                                (op \"+\"\n                                    (get \"result-freq\")\n                                    (op \"/\"\n                                        (op \"-\"\n                                            (get \"f\")\n                                            (get \"result-freq\")\n                                        )\n                                        (get \"t\")\n                                    )\n                                )\n                            }}\n                        {{~/if~}}\n                        {{~set \"t\" (op \"+\" (get \"t\") 1) ~}}\n\n                    {{~else if (op \"===\" (get \"opt-freq-sorting-method\") \"harmonic\") ~}}\n                        {{~#if (op \">\" (get \"f\") 0) ~}} {{~! ensures only positive numbers are used ~}}\n                            {{~#if (op \"===\" (get \"result-freq\") -1) ~}}\n                                {{~set \"result-freq\" (op \"/\" 1 (get \"f\")) ~}}\n                            {{~else ~}}\n                                {{~set \"result-freq\"\n                                    (op \"+\"\n                                        (get \"result-freq\")\n                                        (op \"/\" 1 (get \"f\"))\n                                    )\n                                }}\n                                {{~set \"t\" (op \"+\" (get \"t\") 1) ~}}\n                            {{~/if~}}\n                        {{~/if~}}\n\n                    {{~else if (op \"===\" (get \"opt-freq-sorting-method\") \"debug\") ~}}\n\n                        {{ this.dictionary }}: {{ this.frequency }} -> {{ get \"f\" }} <br>\n\n                    {{~else~}}\n                        (INVALID opt-freq-sorting-method value)\n                    {{~/if~}}\n\n                {{~/if~}}\n\n            {{~/if~}}\n\n        {{~/each~}}\n\n        {{~! (x) >> 0 apparently floors x: https://stackoverflow.com/a/4228528 ~}}\n        {{~#if (op \"===\" (get \"result-freq\") -1) ~}}\n            {{~set \"result-freq\" (get \"opt-no-freq-default-value\") ~}}\n        {{~ else if (op \"===\" (get \"opt-freq-sorting-method\") \"avg\") ~}}\n            {{~set \"result-freq\"\n                (op \">>\" (get \"result-freq\") 0 )\n            ~}}\n        {{~ else if (op \"===\" (get \"opt-freq-sorting-method\") \"harmonic\") ~}}\n            {{~set \"result-freq\"\n                (op \">>\"\n                    (op \"*\"\n                        (op \"/\" 1 (get \"result-freq\"))\n                        (get \"t\")\n                    )\n                    0\n                )\n            ~}}\n        {{~/if~}}\n\n        {{~! override final result if grammar dictionary ~}}\n        {{~#if (\n            op \"&&\"\n                (op \"===\" (get \"found-grammar-dict\") true)\n                (op \"===\" (get \"opt-grammar-override\") true)\n            )\n        ~}}\n            {{~set \"result-freq\" (get \"opt-grammar-override-value\") ~}}\n        {{/if}}\n\n        {{~get \"result-freq\"~}}\n    {{~/scope~}}\n{{/inline}}\n\n\n\n\n{{~!\n    ==============\n     pitch accent\n    ==============\n~}}\n\n{{#*inline \"jpmn-pitch-accent-graphs\"}}\n    {{~#if (op \">\" pitchCount 0)~}}\n        {{~#each pitches~}}\n            <div class=\"pa-graphs__group\" data-details=\"{{dictionary}}\"> {{~s~}}\n                <div class=\"pa-graphs__dictionary\"> {{~s~}}\n                    <div class=\"pa-graphs__dictionary-inner\"> {{~s~}}\n                        {{~dictionary~}}\n                    </div> {{~s~}}\n                </div> {{~s~}}\n                <ol> {{~s~}}\n                    {{~#each pitches~}}\n                        <li>\n                            {{~> pitch-accent-item-disambiguation~}}\n\n                            {{~#scope~}}\n                                {{~#set \"any\" false}}{{/set~}}\n                                {{~#each tags~}}\n                                    {{~#if (get \"any\")}}, {{else}}({{/if~}}\n                                    {{name}}\n                                    {{~#set \"any\" true}}{{/set~}}\n                                {{~/each~}}\n                                {{~#if (get \"any\")}}) {{/if~}}\n                            {{~/scope~}}\n\n                            {{~> pitch-accent-item format=\"graph\"~}}\n                        </li>\n                    {{~/each~}}\n                </ol> {{~s~}}\n            </div>\n        {{~/each~}}\n    {{~/if~}}\n{{/inline}}\n\n\n{{#*inline \"jpmn-pitch-accent-positions\"}}\n    {{~#if (op \">\" pitchCount 0)~}}\n        {{~#each pitches~}}\n            <div class=\"pa-positions__group\" data-details=\"{{dictionary}}\"> {{~s~}}\n                <div class=\"pa-positions__dictionary\"> {{~s~}}\n                    <div class=\"pa-positions__dictionary-inner\"> {{~s~}}\n                        {{~dictionary~}}\n                    </div> {{~s~}}\n                </div> {{~s~}}\n                <ol> {{~s~}}\n                    {{~#each pitches~}}\n                        <li>\n                            {{~> pitch-accent-item-disambiguation~}}\n\n                            {{~#scope~}}\n                                {{~#set \"any\" false}}{{/set~}}\n                                {{~#each tags~}}\n                                    {{~#if (get \"any\")}}, {{else}}({{/if~}}\n                                    {{name}}\n                                    {{~#set \"any\" true}}{{/set~}}\n                                {{~/each~}}\n                                {{~#if (get \"any\")}}) {{/if~}}\n                            {{~/scope~}}\n\n                            {{~> pitch-accent-item format=\"position\"~}}\n                        </li>\n                    {{~/each~}}\n                </ol> {{~s~}}\n            </div>\n        {{~/each~}}\n    {{~/if~}}\n{{/inline}}\n\n\n{{~!\n    ==============\n     dictionaries\n    ==============\n~}}\n\n\n{{~! primary def: first monolingual (or first bilingual if no monolingual dicts found) ~}}\n{{~! does the reverse if opt-first-definition-type is \"bilingual\" ~}}\n{{~#*inline \"jpmn-primary-definition\"~}}\n\n    {{~#scope~}}\n\n        {{~! output warning if no dictionaries are found ~}}\n        {{~#if (op \"===\" definition.definitions.length undefined)~}}\nWARNING: JPMN Handlebars cannot find any definitions to export.\nThis is usually because your Yomichan settings has \"Result grouping mode\"\nset to \"No grouping\". Please set this to \"Group term-reading pairs\".\n        {{~/if~}}\n\n        {{~#set \"primary-dictionary\"}}{{~> _jpmn-get-primary-definition-dict . ~}}{{/set~}}\n\n        {{~#if (op \"===\" (get \"primary-dictionary\") \"\")~}}\n            {{~> _jpmn-selection-text ~}}\n        {{~else~}}\n            {{~#set \"selection\"}}{{~> _jpmn-selection-text ~}}{{/set~}}\n            {{~#set \"selection-uses-glossary\"~}}\n                {{~> _jpmn-selection-uses-glossary . ~}}\n            {{~/set~}}\n\n            {{~! not \"\" <=> is a filled string, i.e. selection uses glossary ~}}\n            {{~#if (op \"!==\" (get \"selection-uses-glossary\") \"\")~}}\n\n                {{~! escape regex ~}}\n                {{~#set \"search-selection\"}}{{~#regexReplace \"[.*+?^${}()|[\\]\\\\]\" \"\\$&\" \"g\"~}}{{~> _jpmn-selection-text ~}}{{~/regexReplace~}}{{/set~}}\n                {{~#set \"search-selection-bold\"}}<b>{{~> _jpmn-selection-text ~}}</b>{{/set~}}\n\n                {{~#regexReplace (get \"search-selection\") (get \"search-selection-bold\") \"g\"~}}\n                    {{~> _jpmn-get-primary-definition-value . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n                {{~/regexReplace~}}\n\n            {{~else~}}\n                {{~#set \"search-selection\"}}{{/set~}}\n                {{~> _jpmn-get-primary-definition-value . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n            {{~/if~}}\n\n        {{~/if~}}\n\n    {{~/scope~}}\n\n{{~/inline~}}\n\n\n{{~! extra def: bilingual defs (excluding primary def) ~}}\n{{~#*inline \"jpmn-secondary-definition\"~}}\n\n    {{~#scope~}}\n\n        {{~#set \"primary-dictionary\"}}{{~> _jpmn-get-primary-definition-dict . ~}}{{/set~}}\n\n        {{~! looks to see if another dictionary exists ~}}\n        {{~! entry count must be gotten here in order to properly iterate through definition.definitions ~}}\n        {{~#set \"entry-count\"}}{{~> _jpmn-primary-dict-entry-count . ~}}{{/set~}}\n        {{~#set \"has-valid-dict\"}}{{~> _jpmn-non-primary-has-valid-dict . validDictType=\"bilingual\" entryCount=(get \"entry-count\")~}}{{/set~}}\n\n        {{~#if (op \"===\" (get \"has-valid-dict\") \"true\") ~}}\n            <ol>\n            {{~#each definition.definitions~}}\n                {{~#set \"is-valid-dict\"}}{{~> _jpmn-non-primary-is-valid-dict . validDictType=\"bilingual\" entryCount=(get \"entry-count\") dictionaryName=dictionary ~}}{{/set~}}\n                {{~#if (op \"===\" (get \"is-valid-dict\") \"true\") ~}}\n\n                    <li data-details=\"{{~dictionary~}}\">\n                        {{~> _jpmn-glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n                    </li>\n\n                {{~/if~}}\n            {{~/each~}}\n            </ol>\n        {{~/if~}}\n\n    {{~/scope~}}\n\n{{~/inline~}}\n\n\n{{~! extra def: monolingual defs (excluding primary def) ~}}\n{{~#*inline \"jpmn-extra-definitions\"~}}\n\n    {{~#scope~}}\n\n        {{~#set \"primary-dictionary\"}}{{~> _jpmn-get-primary-definition-dict . ~}}{{/set~}}\n\n        {{~! looks to see if another dictionary exists ~}}\n        {{~! entry count must be gotten here in order to properly iterate through definition.definitions ~}}\n        {{~#set \"entry-count\"}}{{~> _jpmn-primary-dict-entry-count . ~}}{{/set~}}\n        {{~#set \"has-valid-dict\"}}{{~> _jpmn-non-primary-has-valid-dict . validDictType=\"monolingual\" entryCount=(get \"entry-count\")~}}{{/set~}}\n\n        {{~#if (op \"===\" (get \"has-valid-dict\") \"true\") ~}}\n            <ol>\n            {{~#each definition.definitions~}}\n                {{~#set \"is-valid-dict\"}}{{~> _jpmn-non-primary-is-valid-dict . validDictType=\"monolingual\" entryCount=(get \"entry-count\") dictionaryName=dictionary ~}}{{/set~}}\n                {{~#if (op \"===\" (get \"is-valid-dict\") \"true\") ~}}\n                    <li data-details=\"{{~dictionary~}}\">\n                        {{~> _jpmn-glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n                    </li>\n                {{~/if~}}\n            {{~/each~}}\n            </ol>\n        {{~/if~}}\n\n    {{~/scope~}}\n\n{{~/inline~}}\n\n\n\n{{~! pitch accent info: all pitch accent info dictionaries ~}}\n\n{{~#*inline \"jpmn-utility-dictionaries\"~}}\n\n    {{~#scope~}}\n\n        {{~! looks to see if another dictionary exists ~}}\n        {{~! this if-statement is much more simple than the ones above, since utility dictionaries usually aren't the primary definition (if it is, then it'll just be repeated again here) ~}}\n        {{~#set \"has-valid-dict\"}}{{~> _jpmn-non-primary-has-valid-dict . validDictType=\"utility\"~}}{{/set~}}\n\n        {{~#if (op \"===\" (get \"has-valid-dict\") \"true\") ~}}\n            <ol>\n            {{~#each definition.definitions~}}\n                {{~#set \"test-dict-name\"}}{{~> jpmn-get-dict-type . dictionaryName=dictionary ~}}{{/set~}}\n                {{~#if (op \"===\" (get \"test-dict-name\") \"utility\")~}}\n                    <li data-details=\"{{~dictionary~}}\">\n                        {{~> _jpmn-glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n                    </li>\n                {{~/if~}}\n            {{~/each~}}\n            </ol>\n        {{~/if~}}\n\n    {{~/scope~}}\n\n{{~/inline~}}\n\n\n\n{{~!\n    =======\n     other\n    =======\n~}}\n\n{{~#*inline \"jpmn-word-reading-hiragana\"~}}\n    {{~#set \"word-reading\" ~}}{{> reading}}{{/set~}}\n\n    {{~#if (op \"\" (get \"word-reading\")) ~}}\n        {{~#set \"word-reading\" ~}}{{> expression}}{{/set~}}\n    {{~/if~}}\n\n    {{#hiragana (get \"word-reading\") keepProlongedSoundMarks=false}}{{/hiragana}}\n{{~/inline~}}\n\n\n\n{{~!\nthanks to:\n- https://github.com/FooSoft/yomichan/issues/1952#issuecomment-922671489 for the base code\n- DaNautics#8833 for finding the above + removing the span classes\n~}}\n{{#*inline \"jpmn-sentence-bolded-furigana-plain\"}}\n    {{~#if definition.cloze~}}\n\n        {{~#regexReplace \"(<span class=\\\"term\\\">)|(</span>)\" \"\" \"g\"~}}\n        {{~#regexReplace \"<ruby>(.+?)<rt>(.+?)</rt></ruby>\" \" $1[$2]\" \"g\"~}}\n\n            {{~#if (hasMedia \"textFurigana\" definition.cloze.prefix)~}}\n                {{~#getMedia \"textFurigana\" definition.cloze.prefix escape=false}}{{/getMedia~}}\n            {{~else~}}\n                {{~definition.cloze.prefix~}}\n            {{~/if~}}\n\n            <b>\n            {{~#if (hasMedia \"textFurigana\" definition.cloze.body)~}}\n                {{~#getMedia \"textFurigana\" definition.cloze.body escape=false}}{{/getMedia~}}\n            {{~else~}}\n                {{~definition.cloze.body~}}\n            {{~/if~}}\n            </b>\n\n            {{~#if (hasMedia \"textFurigana\" definition.cloze.suffix)~}}\n                {{~#getMedia \"textFurigana\" definition.cloze.suffix escape=false}}{{/getMedia~}}\n            {{~else~}}\n                {{~definition.cloze.suffix~}}\n            {{~/if~}}\n\n        {{~/regexReplace~}}\n        {{~/regexReplace~}}\n\n    {{~/if~}}\n{{/inline}}\n\n\n\n{{#*inline \"jpmn-filled-if-word-is-hiragana\"}}\n    {{~#scope~}}\n        {{~#set \"expression\" ~}}{{> expression}}{{/set~}}\n        {{~#set \"reading\" ~}}{{> reading}}{{/set~}}\n        {{~#set \"expression-hiragana\" ~}}{{> jpmn-word-reading-hiragana}}{{/set~}}\n\n        {{~#if (op \"&&\" (op \"===\" (get \"expression\") (get \"reading\")) (op \"===\" (get \"expression\") (get \"expression-hiragana\")))~}}\n            1\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n\n{{#*inline \"jpmn-filled-if-word-is-not-hiragana\"}}\n    {{~#scope~}}\n        {{~#set \"filled\" ~}}{{> jpmn-filled-if-word-is-hiragana}}{{/set~}}\n        {{~#if (op \"===\" (get \"filled\") \"\")~}}\n            1\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n\n\n\n{{#*inline \"jpmn-filled-if-grammar-point\"}}\n    {{~#scope~}}\n        {{~set \"found-grammar-dict\" false ~}}\n\n        {{~! search for grammar dictionary ~}}\n        {{~#each definition.definitions~}}\n            {{~#set \"rx-match-grammar-dicts\" ~}}\n                {{~#regexMatch (get \"opt-grammar-override-dict-regex\") \"gu\"~}}{{this.dictionary}}{{~/regexMatch~}}\n            {{/set~}}\n            {{~! rx-match-grammar-dicts is not empty if a grammar dictionary was found ~}}\n            {{~#if (op \"!==\" (get \"rx-match-grammar-dicts\") \"\") ~}}\n                {{~set \"found-grammar-dict\" true ~}}\n            {{/if~}}\n        {{~/each~}}\n\n        {{~! Additional case when \"Result grouping mode\" is set to \"No Grouping\"~}}\n        {{~#set \"rx-match-grammar-dicts\" ~}}\n            {{~#regexMatch (get \"opt-grammar-override-dict-regex\") \"gu\"~}}{{this.definition.dictionary}}{{~/regexMatch~}}\n        {{/set~}}\n        {{~! rx-match-grammar-dicts is not empty if a grammar dictionary was found ~}}\n        {{~#if (op \"!==\" (get \"rx-match-grammar-dicts\") \"\") ~}}\n            {{~set \"found-grammar-dict\" true ~}}\n        {{/if~}}\n\n        {{~#if (get \"found-grammar-dict\") ~}}\n            1\n        {{~/if~}}\n\n    {{~/scope~}}\n{{/inline}}\n\n{{#*inline \"jpmn-filled-if-not-grammar-point\"}}\n    {{~#scope~}}\n        {{~#set \"filled\" ~}}{{> jpmn-filled-if-grammar-point}}{{/set~}}\n        {{~#if (op \"===\" (get \"filled\") \"\")~}}\n            1\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n\n\n\n\n{{#*inline \"jpmn-filled-if-on-mim\"}}\n    {{~#scope~}}\n        {{~#set \"rx-match-on-mim\" ~}}\n            {{~#regexMatch \"(, |^)on-mim(, |$)\" \"gu\"~}}{{> tags }}{{~/regexMatch~}}\n        {{/set~}}\n\n        {{~#if (op \"!==\" (get \"rx-match-on-mim\") \"\") ~}}\n            1\n        {{/if~}}\n    {{~/scope~}}\n{{/inline}}\n\n{{#*inline \"jpmn-filled-if-not-on-mim\"}}\n    {{~#scope~}}\n        {{~#set \"filled\" ~}}{{> jpmn-filled-if-not-on-mim}}{{/set~}}\n        {{~#if (op \"===\" (get \"filled\") \"\")~}}\n            1\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n\n\n\n\n{{~! my personal settings:\n- sentence card if grammar point\n- otherwise, if it's on-mim, then hint card\n- otherwise, default\n~}}\n\n{{#*inline \"jpmn-is-sentence-card\"}}\n    {{~> jpmn-filled-if-grammar-point ~}}\n{{/inline}}\n\n{{#*inline \"jpmn-is-hint-card\"}}\n    {{~#scope~}}\n        {{~#set \"filled\" ~}}{{> jpmn-is-sentence-card}}{{/set~}}\n        {{~#if (op \"===\" (get \"filled\") \"\")~}}\n            {{~> jpmn-filled-if-on-mim ~}}\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n\n{{#*inline \"jpmn-is-click-card\"}}\n    {{~#scope~}}\n        {{~#set \"filled1\" ~}}{{> jpmn-is-hint-card}}{{/set~}}\n        {{~#set \"filled2\" ~}}{{> jpmn-is-sentence-card}}{{/set~}}\n        {{~#if (op \"&&\"\n            (op \"===\" (get \"filled1\") \"\")\n            (op \"===\" (get \"filled2\") \"\")\n        )~}}\n            1\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n\n\n\n\n{{~! a test to check if your dictionaries are correctly classified. ~}}\n{{~! Only meant to be used for debugging purposes, not Anki. ~}}\n{{~#*inline \"jpmn-test-dict-type\"~}}\n{{~#scope~}}\n{{~#each definition.definitions~}}\n「{{dictionary}}」: {{> jpmn-get-dict-type . dictionaryName=dictionary}}\n{{/each~}}\n{{~/scope~}}\n{{~/inline~}}\n",
                        "duplicateScope": "collection",
                        "checkForDuplicates": true,
                        "suspendNewCards": false,
                        "duplicateScopeCheckAllModels": false,
                        "noteGuiMode": "browse",
                        "apiKey": "",
                        "downloadTimeout": 0,
                        "duplicateBehavior": "new",
                        "displayTagsAndFlags": "never"
                    },
                    "parsing": {
                        "enableScanningParser": true,
                        "enableMecabParser": false,
                        "selectedParser": "scan",
                        "readingMode": "none",
                        "termSpacing": false
                    },
                    "translation": {
                        "textReplacements": {
                            "searchOriginal": true,
                            "groups": [
                                [
                                    {
                                        "pattern": "1|１",
                                        "ignoreCase": false,
                                        "replacement": "一"
                                    },
                                    {
                                        "pattern": "2|２",
                                        "ignoreCase": false,
                                        "replacement": "二"
                                    },
                                    {
                                        "pattern": "3|３",
                                        "ignoreCase": false,
                                        "replacement": "三"
                                    },
                                    {
                                        "pattern": "4|４",
                                        "ignoreCase": false,
                                        "replacement": "四"
                                    },
                                    {
                                        "pattern": "5|５",
                                        "ignoreCase": false,
                                        "replacement": "五"
                                    },
                                    {
                                        "pattern": "6|６",
                                        "ignoreCase": false,
                                        "replacement": "六"
                                    },
                                    {
                                        "pattern": "7|７",
                                        "ignoreCase": false,
                                        "replacement": "七"
                                    },
                                    {
                                        "pattern": "8|８",
                                        "ignoreCase": false,
                                        "replacement": "八"
                                    },
                                    {
                                        "pattern": "9|９",
                                        "ignoreCase": false,
                                        "replacement": "九"
                                    },
                                    {
                                        "pattern": "(.)々",
                                        "ignoreCase": false,
                                        "replacement": "$1$1"
                                    },
                                    {
                                        "pattern": "ッ",
                                        "ignoreCase": false,
                                        "replacement": "っ"
                                    },
                                    {
                                        "pattern": "・|、|\\-|\\.|\\s",
                                        "ignoreCase": false,
                                        "replacement": ""
                                    }
                                ]
                            ]
                        },
                        "searchResolution": "letter"
                    },
                    "sentenceParsing": {
                        "scanExtent": 200,
                        "terminationCharacters": [
                            {
                                "enabled": true,
                                "character1": "「",
                                "character2": "」",
                                "includeCharacterAtStart": true,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "『",
                                "character2": "』",
                                "includeCharacterAtStart": true,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "\"",
                                "character2": "\"",
                                "includeCharacterAtStart": true,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "'",
                                "character2": "'",
                                "includeCharacterAtStart": false,
                                "includeCharacterAtEnd": false
                            },
                            {
                                "enabled": true,
                                "character1": ".",
                                "character2": null,
                                "includeCharacterAtStart": false,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "!",
                                "character2": null,
                                "includeCharacterAtStart": false,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "?",
                                "character2": null,
                                "includeCharacterAtStart": false,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "．",
                                "character2": null,
                                "includeCharacterAtStart": false,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "。",
                                "character2": null,
                                "includeCharacterAtStart": false,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "！",
                                "character2": null,
                                "includeCharacterAtStart": false,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "？",
                                "character2": null,
                                "includeCharacterAtStart": false,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "…",
                                "character2": null,
                                "includeCharacterAtStart": false,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "︒",
                                "character2": null,
                                "includeCharacterAtStart": false,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "︕",
                                "character2": null,
                                "includeCharacterAtStart": false,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "︖",
                                "character2": null,
                                "includeCharacterAtStart": false,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "︙",
                                "character2": null,
                                "includeCharacterAtStart": false,
                                "includeCharacterAtEnd": true
                            }
                        ],
                        "terminationCharacterMode": "custom"
                    },
                    "inputs": {
                        "hotkeys": [
                            {
                                "action": "close",
                                "key": "Escape",
                                "modifiers": [],
                                "scopes": [
                                    "popup"
                                ],
                                "enabled": true,
                                "argument": ""
                            },
                            {
                                "action": "focusSearchBox",
                                "key": "Escape",
                                "modifiers": [],
                                "scopes": [
                                    "search"
                                ],
                                "enabled": true,
                                "argument": ""
                            },
                            {
                                "action": "previousEntry",
                                "key": "PageUp",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search"
                                ],
                                "enabled": true,
                                "argument": "3"
                            },
                            {
                                "action": "nextEntry",
                                "key": "PageDown",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search"
                                ],
                                "enabled": true,
                                "argument": "3"
                            },
                            {
                                "action": "lastEntry",
                                "key": "End",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search"
                                ],
                                "enabled": true,
                                "argument": ""
                            },
                            {
                                "action": "firstEntry",
                                "key": "Home",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search"
                                ],
                                "enabled": true,
                                "argument": ""
                            },
                            {
                                "action": "previousEntry",
                                "key": "ArrowUp",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search"
                                ],
                                "enabled": true,
                                "argument": "1"
                            },
                            {
                                "action": "nextEntry",
                                "key": "ArrowDown",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search"
                                ],
                                "enabled": true,
                                "argument": "1"
                            },
                            {
                                "action": "historyBackward",
                                "key": "KeyB",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search"
                                ],
                                "enabled": true,
                                "argument": ""
                            },
                            {
                                "action": "historyForward",
                                "key": "KeyF",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search"
                                ],
                                "enabled": true,
                                "argument": ""
                            },
                            {
                                "action": "addNoteKanji",
                                "key": "KeyK",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search"
                                ],
                                "enabled": true,
                                "argument": ""
                            },
                            {
                                "action": "addNoteTermKanji",
                                "key": "KeyE",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search"
                                ],
                                "enabled": true,
                                "argument": ""
                            },
                            {
                                "action": "addNoteTermKana",
                                "key": "KeyR",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search"
                                ],
                                "enabled": true,
                                "argument": ""
                            },
                            {
                                "action": "playAudio",
                                "key": "KeyP",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search"
                                ],
                                "enabled": true,
                                "argument": ""
                            },
                            {
                                "action": "viewNotes",
                                "key": "KeyV",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search"
                                ],
                                "enabled": true,
                                "argument": ""
                            },
                            {
                                "action": "copyHostSelection",
                                "key": "KeyC",
                                "modifiers": [
                                    "ctrl"
                                ],
                                "scopes": [
                                    "popup"
                                ],
                                "enabled": true,
                                "argument": ""
                            },
                            {
                                "action": "profilePrevious",
                                "key": "Minus",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search",
                                    "web"
                                ],
                                "enabled": true,
                                "argument": ""
                            },
                            {
                                "action": "profileNext",
                                "key": "Equal",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search",
                                    "web"
                                ],
                                "enabled": true,
                                "argument": ""
                            }
                        ]
                    },
                    "popupWindow": {
                        "width": 400,
                        "height": 250,
                        "left": 0,
                        "top": 0,
                        "useLeft": false,
                        "useTop": false,
                        "windowType": "popup",
                        "windowState": "normal"
                    },
                    "clipboard": {
                        "enableBackgroundMonitor": false,
                        "enableSearchPageMonitor": true,
                        "autoSearchContent": true,
                        "maximumSearchLength": 1000
                    },
                    "accessibility": {
                        "forceGoogleDocsHtmlRendering": false
                    }
                },
                "conditionGroups": [
                    {
                        "conditions": [
                            {
                                "type": "modifierKeys",
                                "operator": "are",
                                "value": "alt"
                            }
                        ]
                    }
                ],
                "id": "profile-0"
            },
            {
                "name": "Mining LNs",
                "options": {
                    "general": {
                        "enable": true,
                        "resultOutputMode": "group",
                        "debugInfo": false,
                        "maxResults": 32,
                        "showAdvanced": true,
                        "popupDisplayMode": "default",
                        "popupWidth": 512,
                        "popupHeight": 312,
                        "popupHorizontalOffset": 0,
                        "popupVerticalOffset": 0,
                        "popupHorizontalOffset2": 0,
                        "popupVerticalOffset2": 0,
                        "popupHorizontalTextPosition": "below",
                        "popupVerticalTextPosition": "before",
                        "showGuide": false,
                        "compactTags": true,
                        "mainDictionary": "JMdict",
                        "customPopupCss": ":root {\n    --background-color: #DEE4E7;\n    --text-color: #000000;\n    --tag-frequency-background-color: #8181C1;\n    --tag-part-of-speech-background-color: #8181C1;\n    --tag-text-color: #FFFFFF;\n    --reason-text-color: #808080;\n    --notification-text-color: #000000;\n    --notification-background-color: #E5E9F0;\n    --sidebar-background-color: #CFD9DC;\n    --sidebar-button-background-color-hover: #9283C1;\n    --sidebar-button-danger-background-color-hover: #BF616A;\n    --sidebar-button-icon-color: #A89BD0;\n    --accent-color: #8181C1;\n    --dict-color: #9057AD;\n    --dict-text-color: #FFFFFF;\n}\n\n:root[data-theme=\"dark\"] {\n    --background-color: #2E303E;\n    --text-color: #FFFFFF;\n    --tag-frequency-background-color: #67679A;\n    --tag-part-of-speech-background-color: #67679A;\n    --reason-text-color: #808080;\n    --notification-text-color: #FFFFFF;\n    --notification-background-color: #3B4252;\n    --sidebar-background-color: #262733;\n    --sidebar-button-background-color-hover: #644EA7;\n    --sidebar-button-danger-background-color-hover: #BF616A;\n    --sidebar-button-icon-color: #A89BD0;\n    --accent-color: #67679A;\n    --dict-color: #9057AD;\n    --dict-text-color: #FFFFFF;\n}\n\nspan.headword-term {\n    font-family: notosans;\n}\n\nspan.query-parser-term {\n    font-family: notosans;\n}\n\n.gloss-content {\n    font-family: notosans;\n    line-height: 1;\n    font-size: 16px;\n}\n\n.definition-tag-list {\n    float: left;\n    line-height: 1;\n    height: 1em;\n}\n \n.definition-list {\n    padding: 0;\n}\n\n.definition-item { \n    display: inline-block;\n    margin-bottom: 10px;\n    border-bottom: 1px solid;\n    margin: 0 calc(0px - var(--entry-horizontal-padding));\n    width: 100%;\n    padding: 10px calc(var(--entry-horizontal-padding)) 10px calc(var(--entry-horizontal-padding));\n}\n\n.tag-label-content {\n    font-family: notosans;\n    font-size: 11px;\n}\n\n.tag {\n    --tag-height: 0;\n}\n\n.tag[data-details=\"アクセント辞典\"] {\n    --tag-color: var(--accent-color);\n    --tag-text-color: var(--dict-text-color);\n}\n\n.tag[data-details=\"JMdict (English)\"] {\n    --tag-color: var(--dict-color);\n    --tag-text-color: var(--dict-text-color);\n}\n \n.tag[data-details=\"旺文社国語辞典 第十一版\"] {\n    --tag-color: var(--dict-color);\n    --tag-text-color: var(--dict-text-color);\n}\n \n.tag[data-details=\"明鏡国語辞典\"] { \n    --tag-color: var(--dict-color);\n    --tag-text-color: var(--dict-text-color);\n}\n \n.tag[data-details=\"ハイブリッド新辞林\"] {\n    --tag-color: var(--dict-color);\n    --tag-text-color: var(--dict-text-color);\n}\n \n.tag[data-details=\"実用日本語表現辞典\"] {\n    --tag-color: var(--dict-color);\n    --tag-text-color: var(--dict-text-color);\n}\n \n.tag[data-details=\"新明解国語辞典 第五版\"] {\n    --tag-color: var(--dict-color);\n    --tag-text-color: var(--dict-text-color);\n}\n \n.tag[data-details=\"デジタル大辞泉\"] {\n    --tag-color: var(--dict-color);\n    --tag-text-color: var(--dict-text-color);\n}\n \n.tag[data-details=\"研究社　新和英大辞典　第５版\"] {\n    --tag-color: var(--dict-color);\n    --tag-text-color: var(--dict-text-color);\n}\n\n::-webkit-scrollbar {\n    display: none;\n}\n\n.top-progress-bar-container {\n    display: none;\n}\n\n.kanji-glyph-data > tbody > tr:nth-child(n + 3) {\n  display: none;\n}\n\ndiv.entry[data-type='kanji']:nth-child(n + 2) .kanji-glyph-container,\ndiv.entry[data-type='kanji']:nth-child(n + 2) [data-section-type='frequencies'],\ndiv.entry[data-type='kanji']:nth-child(n + 2) table.kanji-glyph-data > tbody > tr:first-child {\n  display: none;\n}\n\n.kanji-info-table-item-value-empty {\n  display: none;\n}\n\n.kanji-glyph-data,\ndiv.entry[data-type='kanji'],\ndiv.entry[data-type='kanji']:nth-child(n + 2) .kanji-glyph-data > tbody > tr > *,\n.kanji-glyph-data dl.kanji-readings-japanese,\ndiv.entry[data-type='kanji']:nth-child(n + 2)\n  .kanji-glyph-data\n  dl.kanji-readings-chinese[data-count='0'] {\n  padding-top: 0 !important;\n  padding-bottom: 0 !important;\n  margin-bottom: 0em;\n  margin-top: 0 !important;\n}\n\n.entry + .entry[data-type='kanji'],\ndiv#dictionary-entries > div.entry:nth-child(n + 2) .kanji-glyph-data > tbody > tr > * {\n  border-top: none !important;\n}\n\n.kanji-gloss-list {\n  list-style-type: circle;\n}",
                        "popupTheme": "dark",
                        "popupOuterTheme": "site",
                        "customPopupOuterCss": "",
                        "enableWanakana": true,
                        "popupScalingFactor": 1.1,
                        "popupScaleRelativeToPageZoom": false,
                        "popupScaleRelativeToVisualViewport": true,
                        "showPitchAccentDownstepNotation": true,
                        "showPitchAccentPositionNotation": true,
                        "showPitchAccentGraph": true,
                        "showIframePopupsInRootFrame": false,
                        "useSecurePopupFrameUrl": true,
                        "usePopupShadowDom": true,
                        "usePopupWindow": false,
                        "glossaryLayoutMode": "compact",
                        "popupCurrentIndicatorMode": "triangle",
                        "popupActionBarVisibility": "auto",
                        "popupActionBarLocation": "top",
                        "frequencyDisplayMode": "split-tags-grouped",
                        "termDisplayMode": "ruby",
                        "sortFrequencyDictionary": "CC100",
                        "sortFrequencyDictionaryOrder": "ascending",
                        "language": "ja",
                        "enableContextMenuScanSelected": true,
                        "stickySearchHeader": false,
                        "fontFamily": "",
                        "fontSize": 14,
                        "lineHeight": "1.5",
                        "showDebug": false
                    },
                    "audio": {
                        "enabled": true,
                        "sources": [
                            {
                                "type": "jpod101",
                                "url": "",
                                "voice": ""
                            },
                            {
                                "type": "language-pod-101",
                                "url": "",
                                "voice": ""
                            },
                            {
                                "type": "custom-json",
                                "url": "http://localhost:8770/?term={term}&reading={reading}",
                                "voice": ""
                            }
                        ],
                        "volume": 25,
                        "autoPlay": false
                    },
                    "scanning": {
                        "touchInputEnabled": true,
                        "selectText": true,
                        "alphanumeric": false,
                        "autoHideResults": true,
                        "delay": 0,
                        "length": 10,
                        "deepDomScan": false,
                        "popupNestingMaxDepth": 0,
                        "enablePopupSearch": false,
                        "enableOnPopupExpressions": true,
                        "enableOnSearchPage": true,
                        "enableSearchTags": false,
                        "layoutAwareScan": false,
                        "hideDelay": 100,
                        "pointerEventsEnabled": false,
                        "preventMiddleMouse": {
                            "onWebPages": false,
                            "onPopupPages": false,
                            "onSearchPages": false,
                            "onSearchQuery": false
                        },
                        "inputs": [
                            {
                                "include": "shift",
                                "exclude": "mouse0",
                                "types": {
                                    "mouse": true,
                                    "touch": false,
                                    "pen": false
                                },
                                "options": {
                                    "showAdvanced": false,
                                    "searchTerms": true,
                                    "searchKanji": true,
                                    "scanOnTouchMove": true,
                                    "scanOnPenHover": true,
                                    "scanOnPenPress": true,
                                    "scanOnPenRelease": false,
                                    "preventTouchScrolling": true,
                                    "scanOnPenMove": true,
                                    "scanOnPenReleaseHover": false,
                                    "scanOnTouchPress": false,
                                    "scanOnTouchRelease": false,
                                    "preventPenScrolling": true,
                                    "scanOnTouchTap": true
                                }
                            },
                            {
                                "include": "mouse2",
                                "exclude": "",
                                "types": {
                                    "mouse": true,
                                    "touch": false,
                                    "pen": false
                                },
                                "options": {
                                    "showAdvanced": false,
                                    "searchTerms": true,
                                    "searchKanji": true,
                                    "scanOnTouchMove": true,
                                    "scanOnPenHover": true,
                                    "scanOnPenPress": true,
                                    "scanOnPenRelease": false,
                                    "preventTouchScrolling": true,
                                    "scanOnPenMove": true,
                                    "scanOnPenReleaseHover": false,
                                    "scanOnTouchPress": false,
                                    "scanOnTouchRelease": false,
                                    "preventPenScrolling": true,
                                    "scanOnTouchTap": true
                                }
                            },
                            {
                                "include": "",
                                "exclude": "",
                                "types": {
                                    "mouse": false,
                                    "touch": true,
                                    "pen": true
                                },
                                "options": {
                                    "showAdvanced": false,
                                    "searchTerms": true,
                                    "searchKanji": true,
                                    "scanOnTouchMove": false,
                                    "scanOnPenHover": false,
                                    "scanOnPenPress": true,
                                    "scanOnPenRelease": false,
                                    "preventTouchScrolling": false,
                                    "scanOnPenMove": true,
                                    "scanOnPenReleaseHover": false,
                                    "scanOnTouchPress": false,
                                    "scanOnTouchRelease": false,
                                    "preventPenScrolling": false,
                                    "scanOnTouchTap": true
                                }
                            }
                        ],
                        "modifier": null,
                        "matchTypePrefix": false,
                        "hidePopupOnCursorExit": false,
                        "hidePopupOnCursorExitDelay": 100,
                        "normalizeCssZoom": true,
                        "scanWithoutMousemove": true,
                        "scanResolution": "character"
                    },
                    "dictionaries": [
                        {
                            "name": "Jitendex.org [2024-08-11]",
                            "alias": "Jitendex.org [2024-08-11]",
                            "priority": 0,
                            "enabled": true,
                            "allowSecondarySearches": false,
                            "definitionsCollapsible": "not-collapsible",
                            "partsOfSpeechFilter": true,
                            "useDeinflections": true,
                            "styles": ""
                        },
                        {
                            "name": "日本語文法辞典(全集)",
                            "priority": 0,
                            "enabled": false,
                            "allowSecondarySearches": false,
                            "definitionsCollapsible": "not-collapsible",
                            "partsOfSpeechFilter": true,
                            "useDeinflections": true,
                            "alias": "日本語文法辞典(全集)"
                        },
                        {
                            "name": "三省堂国語辞典　第八版",
                            "priority": 0,
                            "enabled": false,
                            "allowSecondarySearches": false,
                            "definitionsCollapsible": "not-collapsible",
                            "partsOfSpeechFilter": true,
                            "useDeinflections": true,
                            "alias": "三省堂国語辞典　第八版"
                        },
                        {
                            "name": "大辞林　第四版",
                            "priority": 0,
                            "enabled": false,
                            "allowSecondarySearches": false,
                            "definitionsCollapsible": "not-collapsible",
                            "partsOfSpeechFilter": true,
                            "useDeinflections": true,
                            "alias": "大辞林　第四版"
                        },
                        {
                            "name": "デジタル大辞泉",
                            "priority": 0,
                            "enabled": false,
                            "allowSecondarySearches": false,
                            "definitionsCollapsible": "not-collapsible",
                            "partsOfSpeechFilter": true,
                            "useDeinflections": true,
                            "alias": "デジタル大辞泉"
                        },
                        {
                            "name": "実用日本語表現辞典",
                            "priority": 0,
                            "enabled": false,
                            "allowSecondarySearches": false,
                            "definitionsCollapsible": "not-collapsible",
                            "partsOfSpeechFilter": true,
                            "useDeinflections": true,
                            "alias": "実用日本語表現辞典"
                        },
                        {
                            "name": "漢字ペディア同訓異義",
                            "priority": 0,
                            "enabled": false,
                            "allowSecondarySearches": false,
                            "definitionsCollapsible": "not-collapsible",
                            "partsOfSpeechFilter": true,
                            "useDeinflections": true,
                            "alias": "漢字ペディア同訓異義"
                        },
                        {
                            "name": "漢字辞典オンライン",
                            "priority": 0,
                            "enabled": false,
                            "allowSecondarySearches": false,
                            "definitionsCollapsible": "not-collapsible",
                            "partsOfSpeechFilter": true,
                            "useDeinflections": true,
                            "alias": "漢字辞典オンライン"
                        },
                        {
                            "name": "NHK",
                            "priority": 0,
                            "enabled": false,
                            "allowSecondarySearches": false,
                            "definitionsCollapsible": "not-collapsible",
                            "partsOfSpeechFilter": true,
                            "useDeinflections": true,
                            "alias": "NHK"
                        },
                        {
                            "name": "JPDB",
                            "priority": 0,
                            "enabled": true,
                            "allowSecondarySearches": false,
                            "definitionsCollapsible": "not-collapsible",
                            "partsOfSpeechFilter": true,
                            "useDeinflections": true,
                            "alias": "JPDB"
                        },
                        {
                            "name": "JMdict",
                            "alias": "JMdict",
                            "priority": 0,
                            "enabled": false,
                            "allowSecondarySearches": false,
                            "definitionsCollapsible": "not-collapsible",
                            "partsOfSpeechFilter": true,
                            "useDeinflections": true,
                            "styles": ""
                        },
                        {
                            "name": "PixivLight [2023-11-24]",
                            "alias": "PixivLight [2023-11-24]",
                            "priority": 0,
                            "enabled": false,
                            "allowSecondarySearches": false,
                            "definitionsCollapsible": "not-collapsible",
                            "partsOfSpeechFilter": true,
                            "useDeinflections": true,
                            "styles": ""
                        }
                    ],
                    "anki": {
                        "enable": true,
                        "server": "http://127.0.0.1:8765",
                        "tags": [
                            "yomichan"
                        ],
                        "screenshot": {
                            "format": "png",
                            "quality": 92
                        },
                        "terms": {
                            "deck": "MiningLN",
                            "model": "JP Mining Note",
                            "fields": {
                                "Key": "{expression}",
                                "Word": "{expression}",
                                "WordReading": "{furigana-plain}",
                                "PAOverride": "",
                                "PAOverrideText": "",
                                "AJTWordPitch": "",
                                "PrimaryDefinition": "{jpmn-primary-definition}",
                                "PrimaryDefinitionPicture": "",
                                "Sentence": "{cloze-prefix}<b>{cloze-body}</b>{cloze-suffix}",
                                "SentenceReading": "",
                                "AltDisplay": "",
                                "AltDisplayPASentenceCard": "",
                                "AdditionalNotes": "",
                                "IsSentenceCard": "",
                                "IsClickCard": "x",
                                "IsHoverCard": "",
                                "IsTargetedSentenceCard": "",
                                "PAShowInfo": "",
                                "PATestOnlyWord": "",
                                "PADoNotTest": "",
                                "PASeparateWordCard": "",
                                "PASeparateSentenceCard": "",
                                "SeparateClozeDeletionCard": "",
                                "Hint": "",
                                "HintNotHidden": "",
                                "Picture": "",
                                "WordAudio": "{audio}",
                                "SentenceAudio": "",
                                "PAGraphs": "{jpmn-pitch-accent-graphs}",
                                "PAPositions": "{jpmn-pitch-accent-positions}",
                                "PASilence": "[sound:_silence.wav]",
                                "WordReadingHiragana": "{jpmn-word-reading-hiragana}",
                                "FrequenciesStylized": "{jpmn-frequencies}",
                                "FrequencySort": "{jpmn-frequency-sort}",
                                "SecondaryDefinition": "{jpmn-secondary-definition}",
                                "ExtraDefinitions": "{jpmn-extra-definitions}",
                                "UtilityDictionaries": "{jpmn-utility-dictionaries}",
                                "Comment": ""
                            }
                        },
                        "kanji": {
                            "deck": "Default",
                            "model": "Basic",
                            "fields": {
                                "Front": "{character}",
                                "Back": ""
                            }
                        },
                        "fieldTemplates": "{{~!                                                                      ~}}\n{{~! ==================== jp-mining-note handlebars ===================== ~}}\n{{~!                               v1.0.1                                 ~}}\n{{~!                                                                      ~}}\n{{~!       https://aquafina-water-bottle.github.io/jp-mining-note/        ~}}\n{{~!       -------------------------------------------------------        ~}}\n\n\n{{~! ================ Dictionary Categorization Options ================= ~}}\n\n{{~! valid values: \"bilingual\", \"monolingual\" ~}}\n{{~set \"opt-first-definition-type\" \"bilingual\" ~}}\n\n{{~! matches most JMdict dictionaries, 新和英 and 日本語文法辞典(全集)~}}\n{{~#set \"bilingual-dict-regex\"~}} ^(([Jj][Mm][Dd]ict)(?! Surface Forms)(.*)|新和英|日本語文法辞典\\(全集\\)|ADD_BILINGUAL_DICTIONARIES_HERE)$ {{~/set~}}\n{{~#set \"utility-dict-regex\"~}} ^(NHK日本語発音アクセント新辞典|シン・漢字遣い参考|[Jj][Mm][Dd]ict( Surface)? Forms|JMedict)$ {{~/set~}}\n{{~#set \"ignored-dict-regex\"~}} ^(ADD_IGNORED_DICTIONARIES_HERE)$ {{~/set~}}\n\n\n\n{{~! ====================== Selected Text Options ======================= ~}}\n\n{{set \"opt-selection-text-enabled\"               false}}\n{{set \"opt-selection-text-dictionary\"            true}}\n{{set \"opt-selection-text-glossary\"              true}}\n{{set \"opt-selection-text-glossary-attempt-bold\" true}}\n\n\n\n{{~! ==================== Frequency Sorting Options ===================== ~}}\n{{~! See here for the official documentation on how these options work:\n    https://github.com/MarvNC/JP-Resources#freq-settings ~}}\n\n{{~#set \"opt-ignored-freq-dict-regex\"~}} ^(JLPT_Level)$ {{~/set~}}\n{{~#set \"opt-ignored-freq-value-regex\"~}} ❌ {{~/set~}}\n{{~#set \"opt-keep-freqs-past-first-regex\"~}} ^()$ {{~/set~}}\n{{~set \"opt-no-freq-default-value\" 9999999 ~}}\n{{~set \"opt-freq-sorting-method\" \"harmonic\" ~}} {{~! \"min\", \"first\", \"avg\", \"harmonic\" ~}}\n\n{{~set \"opt-grammar-override\" true ~}}\n{{~set \"opt-grammar-override-value\" 0 ~}}\n{{~#set \"opt-grammar-override-dict-regex\"~}} ^(日本語文法辞典\\(全集\\)|毎日のんびり日本語教師|JLPT文法解説まとめ|どんなときどう使う 日本語表現文型辞典|絵でわかる日本語)$ {{~/set~}}\n\n\n\n{{~! ============== Dictionary First Line Removal Options =============== ~}}\n{{~set \"opt-wrap-first-line-spans\" true ~}}\n\n{{~! valid values: \"except\", \"only\" ~}}\n{{~set \"opt-first-line-regex-mode\" \"except\"~}}\n{{~#set \"opt-first-line-dicts-regex\"~}} ^(JMdict.*|Nico/Pixiv)$ {{~/set~}}\n\n\n\n{{~! ========================== Other Options =========================== ~}}\n{{~set \"opt-primary-def-one-dict-entry-only\" false ~}}\n{{~set \"opt-jmdict-list-format\" false ~}}\n\n\n\n\n\n\n\n\n{{~! ======================== Plaintext Options ========================= ~}}\n\n{{~!\n    WARNING: I recommend not changing these options if you are using the\n    jp-mining-note template. These options will change the general layout\n    of the HTML, which will prevent certain features or stylizations\n    from properly working. (If you aren't using jp-mining-note, please feel\n    free to change these options!)\n\n    Instead of using these options, see here:\n\n        https://aquafina-water-bottle.github.io/jp-mining-note/definitions/\n\n    These hide specific elements using CSS instead of modifying the raw HTML\n    structure behind it.\n~}}\n\n{{~set \"opt__plaintext__enabled\"                     false ~}}\n{{~set \"opt__plaintext__one-dict-entry-only-no-list\" false ~}}\n{{~set \"opt__plaintext__remove-dictionary-tag\"       false ~}}\n{{~set \"opt__plaintext__remove-first-line-enabled\"   false ~}}\n\n\n\n{{~! ============== ORIGINAL YOMICHAN TEMPLATE CODE BELOW ============== ~}}\n\n{{#*inline \"glossary-single\"}}\n    {{~#unless brief~}}\n        {{~#scope~}}\n            {{~set \"any\" false~}}\n            {{~#each definitionTags~}}\n                {{~#if (op \"||\" (op \"!\" @root.compactTags) (op \"!\" redundant))~}}\n                    {{~#if (get \"any\")}}, {{else}}<i>({{/if~}}\n                    {{name}}\n                    {{~set \"any\" true~}}\n                {{~/if~}}\n            {{~/each~}}\n            {{~#unless noDictionaryTag~}}\n                {{~#if (op \"||\" (op \"!\" @root.compactTags) (op \"!==\" dictionary (get \"previousDictionary\")))~}}\n                    {{~#if (get \"any\")}}, {{else}}<i>({{/if~}}\n                    {{dictionaryAlias}}\n                    {{~set \"any\" true~}}\n                {{~/if~}}\n            {{~/unless~}}\n            {{~#if (get \"any\")}})</i> {{/if~}}\n        {{~/scope~}}\n        {{~#if only~}}({{#each only}}{{.}}{{#unless @last}}, {{/unless}}{{/each}} only) {{/if~}}\n    {{~/unless~}}\n    {{~#if (op \"<=\" glossary.length 1)~}}\n        {{#each glossary}}{{formatGlossary ../dictionary .}}{{/each}}\n    {{~else if @root.compactGlossaries~}}\n        {{#each glossary}}{{formatGlossary ../dictionary .}}{{#unless @last}} | {{/unless}}{{/each}}\n    {{~else~}}\n        <ul>{{#each glossary}}<li>{{formatGlossary ../dictionary .}}</li>{{/each}}</ul>\n    {{~/if~}}\n    {{~set \"previousDictionary\" dictionary~}}\n{{/inline}}\n\n{{#*inline \"audio\"}}\n    {{~#if (hasMedia \"audio\")~}}\n        [sound:{{getMedia \"audio\"}}]\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"character\"}}\n    {{~definition.character~}}\n{{/inline}}\n\n{{#*inline \"dictionary\"}}\n    {{~definition.dictionary~}}\n{{/inline}}\n\n{{#*inline \"dictionary-alias\"}}\n    {{~definition.dictionaryAlias~}}\n{{/inline}}\n\n{{#*inline \"expression\"}}\n    {{~#if merge~}}\n        {{~#if modeTermKana~}}\n            {{~#each definition.reading~}}\n                {{{.}}}\n                {{~#unless @last}}、{{/unless~}}\n            {{~else~}}\n                {{~#each definition.expression~}}\n                    {{{.}}}\n                    {{~#unless @last}}、{{/unless~}}\n                {{~/each~}}\n            {{~/each~}}\n        {{~else~}}\n            {{~#each definition.expression~}}\n                {{{.}}}\n                {{~#unless @last}}、{{/unless~}}\n            {{~/each~}}\n        {{~/if~}}\n    {{~else~}}\n        {{~#if modeTermKana~}}\n            {{~#if definition.reading~}}\n                {{definition.reading}}\n            {{~else~}}\n                {{definition.expression}}\n            {{~/if~}}\n        {{~else~}}\n            {{definition.expression}}\n        {{~/if~}}\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"furigana\"}}\n    {{~#if merge~}}\n        {{~#each definition.expressions~}}\n            <span class=\"expression-{{termFrequency}}\">{{~furigana .~}}</span>\n            {{~#unless @last}}、{{/unless~}}\n        {{~/each~}}\n    {{~else~}}\n        {{furigana definition}}\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"furigana-plain\"}}\n    {{~#if merge~}}\n        {{~#each definition.expressions~}}\n            <span class=\"expression-{{termFrequency}}\">{{~furiganaPlain .~}}</span>\n            {{~#unless @last}}、{{/unless~}}\n        {{~/each~}}\n    {{~else~}}\n        {{furiganaPlain definition}}\n    {{~/if~}}\n{{/inline}}\n\n{{~#*inline \"glossary\"~}}\n    <div style=\"text-align: left;\" class=\"yomitan-glossary\">\n    {{~#scope~}}\n        {{~#if (op \"===\" definition.type \"term\")~}}\n            {{~#unless (op \"&&\" selectedDictionary (op \"!=\" selectedDictionary definition.dictionary))~}}\n                {{~> glossary-single definition brief=brief noDictionaryTag=noDictionaryTag ~}}\n                {{~#if definition.glossaryScopedStyles~}}\n                    <style>{{{definition.glossaryScopedStyles}}}</style>\n                {{~/if~}}\n            {{~/unless~}}\n        {{~else if (op \"||\" (op \"===\" definition.type \"termGrouped\") (op \"===\" definition.type \"termMerged\"))~}}\n            {{~#if (op \">\" definition.definitions.length 1)~}}\n                <ol>\n                    {{~#each definition.definitions~}}\n                        {{~#unless (op \"&&\" ../selectedDictionary (op \"!=\" ../selectedDictionary dictionary))~}}\n                            <li data-dictionary=\"{{dictionary}}\">\n                                {{~> glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n                            </li>\n                            {{~#if dictScopedStyles~}}\n                                <style>{{{dictScopedStyles}}}</style>\n                            {{~/if~}}\n                        {{~/unless~}}\n                    {{~/each~}}\n                </ol>\n            {{~else~}}\n                {{~#each definition.definitions~}}\n                    {{~#unless (op \"&&\" ../selectedDictionary (op \"!=\" ../selectedDictionary dictionary))~}}\n                        {{~> glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n                        {{~#if glossaryScopedStyles~}}\n                            <style>{{{glossaryScopedStyles}}}</style>\n                        {{~/if~}}\n                    {{~/unless~}}\n                {{~/each~}}\n            {{~/if~}}\n        {{~else if (op \"===\" definition.type \"kanji\")~}}\n            {{~#if (op \">\" definition.glossary.length 1)~}}\n                <ol>{{#each definition.glossary}}<li>{{.}}</li>{{/each}}</ol>\n            {{~else~}}\n                {{~#each definition.glossary~}}{{.}}{{~/each~}}\n            {{~/if~}}\n        {{~/if~}}\n    {{~/scope~}}\n    </div>\n{{~/inline~}}\n\n{{#*inline \"glossary-no-dictionary\"}}\n    {{~> glossary noDictionaryTag=true ~}}\n{{/inline}}\n\n{{#*inline \"glossary-brief\"}}\n    {{~> glossary brief=true ~}}\n{{/inline}}\n\n{{~#*inline \"glossary-first\"~}}\n    <div style=\"text-align: left;\" class=\"yomitan-glossary\">\n    {{~#scope~}}\n        {{~#if (op \"===\" definition.type \"term\")~}}\n            {{~> glossary-single definition brief=brief noDictionaryTag=noDictionaryTag ~}}\n            {{~#if definition.glossaryScopedStyles~}}\n                <style>{{{definition.glossaryScopedStyles}}}</style>\n            {{~/if~}}\n        {{~else if (op \"||\" (op \"===\" definition.type \"termGrouped\") (op \"===\" definition.type \"termMerged\"))~}}\n            {{~#if (op \">\" definition.definitions.length 1)~}}\n                {{~#with definition.definitions.[0]~}}\n                    {{~> glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n                    {{~#if glossaryScopedStyles~}}\n                        <style>{{{glossaryScopedStyles}}}</style>\n                    {{~/if~}}\n                {{~/with~}}\n            {{~else~}}\n                {{~#with definition.definitions.[0]~}}\n                    {{~> glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n                    {{~#if glossaryScopedStyles~}}\n                        <style>{{{glossaryScopedStyles}}}</style>\n                    {{~/if~}}\n                {{~/with~}}\n            {{~/if~}}\n        {{~/if~}}\n    {{~/scope~}}\n    </div>\n{{~/inline~}}\n\n{{#*inline \"glossary-first-no-dictionary\"}}\n    {{~> glossary-first noDictionaryTag=true ~}}\n{{/inline}}\n\n{{#*inline \"glossary-first-brief\"}}\n    {{~> glossary-first brief=true ~}}\n{{/inline}}\n\n{{#*inline \"kunyomi\"}}\n    {{~#each definition.kunyomi}}{{.}}{{#unless @last}}, {{/unless}}{{/each~}}\n{{/inline}}\n\n{{#*inline \"onyomi\"}}\n    {{~#each definition.onyomi}}{{.}}{{#unless @last}}, {{/unless}}{{/each~}}\n{{/inline}}\n\n{{#*inline \"reading\"}}\n    {{~#unless modeTermKana~}}\n        {{~#if merge~}}\n            {{~#each definition.reading~}}\n                {{{.}}}\n                {{~#unless @last}}、{{/unless~}}\n            {{~/each~}}\n        {{~else~}}\n            {{~definition.reading~}}\n        {{~/if~}}\n    {{~/unless~}}\n{{/inline}}\n\n{{#*inline \"sentence\"}}\n    {{~#if definition.cloze}}{{{definition.cloze.sentence}}}{{/if~}}\n{{/inline}}\n\n{{#*inline \"cloze-prefix\"}}\n    {{~#if definition.cloze}}{{{definition.cloze.prefix}}}{{/if~}}\n{{/inline}}\n\n{{#*inline \"cloze-body\"}}\n    {{~#if definition.cloze}}{{{definition.cloze.body}}}{{/if~}}\n{{/inline}}\n\n{{#*inline \"cloze-suffix\"}}\n    {{~#if definition.cloze}}{{{definition.cloze.suffix}}}{{/if~}}\n{{/inline}}\n\n{{#*inline \"tags\"}}\n    {{~#mergeTags definition group merge}}{{this}}{{/mergeTags~}}\n{{/inline}}\n\n{{~#*inline \"url\"~}}\n    <a href=\"{{definition.url}}\">{{definition.url}}</a>\n{{~/inline~}}\n\n{{#*inline \"screenshot\"}}\n    {{~#if (hasMedia \"screenshot\")~}}\n        <img src=\"{{getMedia \"screenshot\"}}\" />\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"document-title\"}}\n    {{~context.document.title~}}\n{{/inline}}\n\n{{! Pitch Accents }}\n{{#*inline \"pitch-accent-item\"}}\n    {{~pronunciation format=format reading=reading downstepPosition=position nasalPositions=nasalPositions devoicePositions=devoicePositions~}}\n{{/inline}}\n\n{{#*inline \"pitch-accent-item-disambiguation\"}}\n    {{~#scope~}}\n        {{~set \"exclusive\" (spread exclusiveExpressions exclusiveReadings)~}}\n        {{~#if (op \">\" (property (get \"exclusive\") \"length\") 0)~}}\n            {{~set \"separator\" \"\"~}}\n            <em>({{#each (get \"exclusive\")~}}\n                {{~get \"separator\"~}}{{{.}}}\n            {{~/each}} only) </em>\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n\n{{#*inline \"pitch-accent-list\"}}\n    {{~#if (op \">\" pitchCount 0)~}}\n        {{~#if (op \">\" pitchCount 1)~}}<ol>{{~/if~}}\n        {{~#each pitches~}}\n            {{~#each pitches~}}\n                {{~#if (op \">\" ../../pitchCount 1)~}}<li>{{~/if~}}\n                    {{~> pitch-accent-item-disambiguation~}}\n                    {{~> pitch-accent-item format=../../format~}}\n                {{~#if (op \">\" ../../pitchCount 1)~}}</li>{{~/if~}}\n            {{~/each~}}\n        {{~/each~}}\n        {{~#if (op \">\" pitchCount 1)~}}</ol>{{~/if~}}\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"pitch-accents\"}}\n    {{~> pitch-accent-list format='text'~}}\n{{/inline}}\n\n{{#*inline \"pitch-accent-graphs\"}}\n    {{~> pitch-accent-list format='graph'~}}\n{{/inline}}\n\n{{#*inline \"pitch-accent-graphs-jj\"}}\n    {{~> pitch-accent-list format='graph-jj'~}}\n{{/inline}}\n\n{{#*inline \"pitch-accent-positions\"}}\n    {{~> pitch-accent-list format='position'~}}\n{{/inline}}\n{{! End Pitch Accents }}\n\n{{#*inline \"clipboard-image\"}}\n    {{~#if (hasMedia \"clipboardImage\")~}}\n        <img src=\"{{getMedia \"clipboardImage\"}}\" />\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"clipboard-text\"}}\n    {{~#if (hasMedia \"clipboardText\")}}{{{getMedia \"clipboardText\"}}}{{/if~}}\n{{/inline}}\n\n{{#*inline \"conjugation\"}}\n    {{~#if (op \">\" definition.inflectionRuleChainCandidates.length 0)~}}\n        {{~set \"multiple\" false~}}\n        {{~#if (op \">\" definition.inflectionRuleChainCandidates.length 1)~}}\n            {{~set \"multiple\" true~}}\n        {{~/if~}}\n        {{~#if (get \"multiple\")~}}<ul>{{/if~}}\n            {{~#each definition.inflectionRuleChainCandidates~}}\n                {{~#if (op \">\" inflectionRules.length 0)~}}\n                    {{~#if (get \"multiple\")~}}<li>{{/if~}}\n                    {{~#each inflectionRules~}}\n                        {{~#if (op \">\" @index 0)}} « {{/if~}}\n                        {{name}}\n                    {{~/each~}}\n                    {{~#if (get \"multiple\")~}}</li>{{/if~}}\n                {{~/if~}}\n            {{~/each~}}\n        {{~#if (get \"multiple\")~}}</ul>{{/if~}}\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"frequencies\"}}\n    {{~#if (op \">\" definition.frequencies.length 0)~}}\n        <ul style=\"text-align: left;\">\n        {{~#each definition.frequencies~}}\n            <li>\n            {{~#if (op \"!==\" ../definition.type \"kanji\")~}}\n                {{~#if (op \"||\" (op \">\" ../uniqueExpressions.length 1) (op \">\" ../uniqueReadings.length 1))~}}(\n                    {{~furigana expression reading~}}\n                ) {{/if~}}\n            {{~/if~}}\n            {{~dictionaryAlias}}: {{frequency~}}\n            </li>\n        {{~/each~}}\n        </ul>\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"stroke-count\"}}\n    {{~#scope~}}\n        {{~set \"found\" false~}}\n        {{~#each definition.stats.misc~}}\n            {{~#if (op \"===\" name \"strokes\")~}}\n                {{~set \"found\" true~}}\n                Stroke count: {{value}}\n            {{~/if~}}\n        {{~/each~}}\n        {{~#if (op \"!\" (get \"found\"))~}}\n            Stroke count: Unknown\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n\n{{#*inline \"part-of-speech-pretty\"}}\n    {{~#if (op \"===\" . \"v1\")~}}Ichidan verb\n    {{~else if (op \"===\" . \"v5\")~}}Godan verb\n    {{~else if (op \"===\" . \"vk\")~}}Kuru verb\n    {{~else if (op \"===\" . \"vs\")~}}Suru verb\n    {{~else if (op \"===\" . \"vz\")~}}Zuru verb\n    {{~else if (op \"===\" . \"adj-i\")~}}I-adjective\n    {{~else if (op \"===\" . \"n\")~}}Noun\n    {{~else~}}{{.}}\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"part-of-speech\"}}\n    {{~#scope~}}\n        {{~#if (op \"!==\" definition.type \"kanji\")~}}\n            {{~set \"first\" true~}}\n            {{~#each definition.expressions~}}\n                {{~#each wordClasses~}}\n                    {{~#unless (get (concat \"used_\" .))~}}\n                        {{~> part-of-speech-pretty . ~}}\n                        {{~#unless (get \"first\")}}, {{/unless~}}\n                        {{~set (concat \"used_\" .) true~}}\n                        {{~set \"first\" false~}}\n                    {{~/unless~}}\n                {{~/each~}}\n            {{~/each~}}\n            {{~#if (get \"first\")~}}Unknown{{~/if~}}\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n\n{{#*inline \"search-query\"}}\n    {{~#multiLine}}{{context.fullQuery}}{{/multiLine~}}\n{{/inline}}\n\n{{#*inline \"popup-selection-text\"}}\n    {{~#if (hasMedia \"popupSelectionText\")}}{{{getMedia \"popupSelectionText\"}}}{{/if~}}\n{{/inline}}\n\n{{#*inline \"sentence-furigana\"}}\n    {{~#if definition.cloze~}}\n        {{~#if (hasMedia \"textFurigana\" definition.cloze.sentence)~}}\n            {{{getMedia \"textFurigana\" definition.cloze.sentence escape=false}}}\n        {{~else~}}\n            {{{definition.cloze.sentence}}}\n        {{~/if~}}\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"cloze-body-kana\"}}\n    {{~#if definition.cloze}}{{{definition.cloze.bodyKana}}}{{/if~}}\n{{/inline}}\n\n{{#*inline \"phonetic-transcriptions\"}}\n    {{~#if (op \">\" definition.phoneticTranscriptions.length 0)~}}\n        <ul>\n            {{~#each definition.phoneticTranscriptions~}}\n                {{~#each phoneticTranscriptions~}}\n                    <li>\n                        {{~set \"any\" false~}}\n                        {{~#each tags~}}\n                            {{~#if (get \"any\")}}, {{else}}<i>({{/if~}}\n                            {{name}}\n                            {{~set \"any\" true~}}\n                        {{~/each~}}\n                        {{~#if (get \"any\")}})</i> {{/if~}}\n                        {{ipa~}}\n                    </li>\n                {{~/each~}}\n            {{~/each~}}\n        </ul>\n    {{~/if~}}\n{{/inline}}\n{{#*inline \"frequency-harmonic-rank\"}}\n    {{~#if (op \"===\" definition.frequencyHarmonic -1) ~}}\n        9999999\n    {{~else ~}}\n        {{definition.frequencyHarmonic}}\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"frequency-harmonic-occurrence\"}}\n    {{~#if (op \"===\" definition.frequencyHarmonic -1) ~}}\n        0\n    {{~else ~}}\n        {{definition.frequencyHarmonic}}\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"frequency-average-rank\"}}\n    {{~#if (op \"===\" definition.frequencyAverage -1) ~}}\n        9999999\n    {{~else ~}}\n        {{definition.frequencyAverage}}\n    {{~/if~}}\n{{/inline}}\n\n{{#*inline \"frequency-average-occurrence\"}}\n    {{~#if (op \"===\" definition.frequencyAverage -1) ~}}\n        0\n    {{~else ~}}\n        {{definition.frequencyAverage}}\n    {{~/if~}}\n{{/inline}}\n\n{{~#*inline \"pitch-accent-categories\"~}}\n    {{~#each (pitchCategories @root)~}}{{~.~}}{{~#unless @last~}},{{~/unless~}}{{~/each~}}\n{{~/inline~}}\n{{#*inline \"onyomi-hiragana\"}}\n    {{~#each definition.onyomi}}{{hiragana .}}{{#unless @last}}, {{/unless}}{{/each~}}\n{{/inline}}\n{{~> (lookup . \"marker\") ~}}\n\n{{~! ============== ORIGINAL YOMICHAN TEMPLATE CODE ABOVE =============== ~}}\n{{~!                               v1.0.1                                 ~}}\n\n{{~!\n    ==================\n     helper functions\n    ==================\n~}}\n\n{{#*inline \"s\"}}{{/inline}}\n\n{{~! categorizes into 4 types: \"ignored\", \"bilingual\", \"utility\", or \"monolingual\" ~}}\n{{~#*inline \"jpmn-get-dict-type\"~}}\n\n    {{~#scope~}}\n        {{~#set \"rx-match-ignored\" ~}}\n            {{~#regexMatch (get \"ignored-dict-regex\") \"gu\"~}}{{dictionaryName}}{{~/regexMatch~}}\n        {{/set~}}\n        {{~#set \"rx-match-bilingual\" ~}}\n            {{~#regexMatch (get \"bilingual-dict-regex\") \"gu\"~}}{{dictionaryName}}{{~/regexMatch~}}\n        {{/set~}}\n        {{~#set \"rx-match-utility\" ~}}\n            {{~#regexMatch (get \"utility-dict-regex\") \"gu\"~}}{{dictionaryName}}{{~/regexMatch~}}\n        {{/set~}}\n\n\n        {{~#if (op \"!==\" (get \"rx-match-ignored\") \"\")~}}\n            ignored\n        {{~else if (op \"!==\" (get \"rx-match-bilingual\") \"\")~}}\n            bilingual\n        {{~else if (op \"!==\" (get \"rx-match-utility\") \"\")~}}\n            utility\n        {{~else~}}\n            {{~! assumed that anything else is a monolingual dictionary ~}}\n            monolingual\n        {{~/if~}}\n\n    {{~/scope~}}\n\n{{~/inline~}}\n\n\n\n{{~! returns \"\" if selection text is disabled, or if none existed in the first place ~}}\n{{~#*inline \"_jpmn-selection-text\"~}}\n    {{~! text-mode != \"\" and text-mode > 0 ~}}\n    {{~#if (op \"===\" (get \"opt-selection-text-enabled\") true)~}}\n        {{~! removes leading and trailing whitespace ~}}\n        {{~#regexReplace \"^\\s+|\\s+$\" \"\" \"g\"~}}\n            {{~#getMedia \"selectionText\"}}{{/getMedia~}}\n        {{~/regexReplace~}}\n    {{~/if~}}\n{{~/inline~}}\n\n{{~! checks that the selection text is indeed a dictionary (returns the text if true, nothing if false) ~}}\n{{~#*inline \"_jpmn-check-dictionary\"~}}\n    {{~#scope~}}\n        {{~#set \"selection-is-dictionary\" false}}{{/set~}}\n\n        {{~#each definition.definitions~}}\n            {{~#if (op \"===\" (get \"selection\") dictionary)~}}\n                {{~#set \"selection-is-dictionary\" true ~}}{{~/set~}}\n            {{~/if~}}\n        {{~/each~}}\n\n        {{~#if (op \"===\" (get \"selection-is-dictionary\") true)~}}\n            {{~get \"selection\"~}}\n        {{~else~}}\n            {{~! null ~}}\n        {{~/if~}}\n    {{~/scope~}}\n{{~/inline~}}\n\n\n\n{{~! gives the raw glossary as the search string (for searching to see if the selected text\nis a part of a dictionary) ~}}\n{{#*inline \"_jpmn-glossary-single-search\"}}\n\n    {{~#scope~}}\n        {{~#each glossary}}{{formatGlossary ../dictionary .}}{{#unless @last}} | {{/unless}}{{/each~}}\n    {{~/scope~}}\n\n{{/inline}}\n\n\n\n{{~! escape a regex string: https://stackoverflow.com/a/6969486~}}\n{{~! /[.*+?^${}()|[\\]\\\\]/g, '\\\\$&' ~}}\n{{~! escapes the `regexString` regex to allow it to be used like a normal search in a string ~}}\n{{#*inline \"_jpmn-escape-regex\"}}\n    {{~#regexReplace \"[.*+?^${}()|[\\]\\\\]\" \"\\$&\" \"g\"~}}{{~regexString~}}{{~/regexReplace~}}\n{{/inline}}\n\n\n{{~#*inline \"_jpmn-get-dict-if-glossary-selected\"~}}\n    {{~#scope~}}\n        {{~#set \"result-dictionary\" null}}{{/set~}}\n        {{~#set \"search-selection\"}}{{~#regexReplace \"[.*+?^${}()|[\\]\\\\]\" \"\\$&\" \"g\"~}}{{~> _jpmn-selection-text ~}}{{~/regexReplace~}}{{/set~}}\n\n        {{~#each definition.definitions~}}\n            {{~#set \"search-def\"}}{{~> _jpmn-glossary-single-search . brief=../brief noDictionaryTag=../noDictionaryTag ~}}{{/set~}}\n\n            {{~set \"search-regex-match\" (regexMatch (get \"search-selection\") \"gu\" (get \"search-def\"))}}\n            {{~#if (op \"&&\"\n                (op \"===\" (get \"result-dictionary\") null)\n                (op \"!==\" (get \"search-regex-match\") \"\")\n            )~}}\n                {{~#set \"result-dictionary\" dictionary}}{{/set~}}\n            {{~/if~}}\n\n        {{~/each~}}\n        {{~get \"result-dictionary\" ~}}\n    {{~/scope~}}\n{{~/inline~}}\n\n\n\n\n{{~!\n    searches dictionary, determined by `opt-first-definition-type`\n    - (opt-first-definition-type === bilingual) -> bilingual dictionaries are searched first\n    - (opt-first-definition-type === monolingual) -> monolingual dictionaries are searched first\n~}}\n{{~#*inline \"_jpmn-search-primary-definition-dict\"~}}\n    {{~#scope~}}\n        {{~#if (op \"===\" (get \"opt-first-definition-type\") \"bilingual\")~}}\n            {{~#set \"first-definition-search-type-1\" \"bilingual\"}}{{/set~}}\n            {{~#set \"first-definition-search-type-2\" \"monolingual\"}}{{/set~}}\n        {{~else~}}\n            {{~#set \"first-definition-search-type-1\" \"monolingual\"}}{{/set~}}\n            {{~#set \"first-definition-search-type-2\" \"bilingual\"}}{{/set~}}\n        {{~/if~}}\n\n\n        {{~! first-dictionary === null <=> no valid dictionary was found ~}}\n        {{~#set \"first-dictionary\" null}}{{/set~}}\n\n        {{~#each definition.definitions~}}\n\n            {{~#set \"test-dict-name\"}}{{~> jpmn-get-dict-type . dictionaryName=dictionary ~}}{{/set~}}\n            {{~#if (op \"===\" (get \"test-dict-name\") (get \"first-definition-search-type-1\"))~}}\n                {{~#if (op \"===\" null (get \"first-dictionary\"))~}}\n                    {{~#set \"first-dictionary\" dictionary~}}{{~/set~}}\n                {{~/if~}}\n            {{~/if~}}\n\n        {{~/each~}}\n\n\n        {{~! uses other dictionary type, last resort ~}}\n        {{~#if (op \"===\" (get \"first-dictionary\") null)~}}\n\n            {{~#each definition.definitions~}}\n\n                {{~#set \"test-dict-name\"}}{{~> jpmn-get-dict-type . dictionaryName=dictionary ~}}{{/set~}}\n                {{~#if (op \"===\" (get \"test-dict-name\") (get \"first-definition-search-type-2\"))~}}\n                    {{~#if (op \"===\" null (get \"first-dictionary\"))~}}\n                        {{~#set \"first-dictionary\" dictionary~}}{{~/set~}}\n                    {{~/if~}}\n                {{~/if~}}\n\n            {{~/each~}}\n\n        {{~/if~}}\n\n        {{~#get \"first-dictionary\"~}}{{~/get~}}\n    {{~/scope~}}\n{{~/inline~}}\n\n\n{{~!\n    if (selection-text exists):\n        if (selection-text is exactly a dictionary):\n            return dictionary\n        if (able to detect dictionary of which the selection-text is highlighting):\n            return dictionary\n        return null\n~}}\n{{~#*inline \"_jpmn-check-dictionary-and-glossary\"~}}\n    {{~#scope~}}\n\n        {{~#set \"result\" \"\"}}{{/set~}}\n\n        {{~! checks if the selected text matches a dictionary ~}}\n        {{~#if (op \"===\" (get \"opt-selection-text-dictionary\") true)~}}\n            {{~#set \"result\"}}{{~> _jpmn-check-dictionary . ~}}{{/set~}}\n        {{~/if~}}\n\n        {{~! checks if the selected text matches a definition in a dictionary ~}}\n        {{~#if\n            (op \"&&\" (op \"===\" (get \"result\") \"\")\n                (op \"&&\"\n                    (op \"===\" (get \"opt-selection-text-glossary\") true)\n                    (op \"===\" (get \"opt-selection-text-glossary-attempt-bold\") true)\n                )\n            )\n        ~}}\n            {{~#set \"result\"}}{{~> _jpmn-get-dict-if-glossary-selected . ~}}{{/set~}}\n        {{~/if~}}\n\n        {{~get \"result\" ~}}\n\n    {{~/scope~}}\n{{~/inline~}}\n\n\n{{~!\n    if (selection-text exists):\n        if (selection-text is exactly a dictionary):\n            return null\n        if (able to detect dictionary of which the selection-text is highlighting):\n            return \"uses-glossary\"\n        return null\n~}}\n{{~#*inline \"_jpmn-selection-uses-glossary\"~}}\n    {{~#scope~}}\n\n        {{~#set \"result\" \"\"}}{{/set~}}\n\n        {{~! checks if the selected text matches a dictionary ~}}\n        {{~#if (op \"===\" (get \"opt-selection-text-dictionary\") true)~}}\n            {{~#set \"result\"}}{{~> _jpmn-check-dictionary . ~}}{{/set~}}\n        {{~/if~}}\n\n        {{~! checks if the selected text matches a definition in a dictionary ~}}\n        {{~#if (op \"!==\" (get \"result\") \"\") ~}}\n            {{~! selection-text is a dictionary -> null ~}}\n        {{~else if\n            (op \"&&\"\n                (op \"===\" (get \"opt-selection-text-glossary\") true)\n                (op \"===\" (get \"opt-selection-text-glossary-attempt-bold\") true)\n            )\n        ~}}\n            {{~#set \"result\"}}{{~> _jpmn-get-dict-if-glossary-selected . ~}}{{/set~}}\n            {{~#if (op \"!==\" (get \"result\") \"\") ~}}\n                {{~! selection-text dict found -> \"uses-glossary\" ~}}\n                uses-glossary\n            {{~/if~}}\n        {{~/if~}}\n\n    {{~/scope~}}\n{{~/inline~}}\n\n\n\n\n{{~!\n    if (selection-text exists):\n        if (selection-text is exactly a dictionary):\n            return dictionary\n        if (able to detect dictionary of which the selection-text is highlighting):\n            return dictionary\n        if (selection-text-glossary is not enabled):\n            return first-dictionary (determined by `opt-first-definition-type`)\n        return null\n\n    else:\n        return first-dictionary (determined by `opt-first-definition-type`)\n~}}\n{{~#*inline \"_jpmn-get-primary-definition-dict\"~}}\n    {{~#scope~}}\n\n        {{~! first checks selection text ~}}\n        {{~#set \"selection\"}}{{~> _jpmn-selection-text ~}}{{/set~}}\n        {{~#if (op \"!==\" (get \"selection\") \"\")~}}\n\n            {{~#set \"result\"}}{{~> _jpmn-check-dictionary-and-glossary . ~}}{{/set~}}\n\n            {{~! doesn't return a dictionary if opt-selection-text-glossary is false b/c ~}}\n            {{~#if\n                (op \"&&\"\n                    (op \"===\" (get \"result\") \"\")\n                    (op \"===\" (get \"opt-selection-text-glossary\") false)\n                )\n            ~}}\n                {{~#set \"result\"}}{{~> _jpmn-search-primary-definition-dict . ~}}{{/set~}}\n            {{~/if~}}\n\n            {{~get \"result\" ~}}\n\n        {{~! no selection text ~}}\n        {{~else~}}\n            {{~> _jpmn-search-primary-definition-dict . ~}}\n        {{~/if~}}\n\n    {{~/scope~}}\n\n{{~/inline~}}\n\n\n\n\n{{~!\n    get number of primary dictionary entries\n~}}\n{{~#*inline \"_jpmn-primary-dict-entry-count\"~}}\n    {{~#scope~}}\n\n        {{~#set \"primary-dictionary\"}}{{~> _jpmn-get-primary-definition-dict . ~}}{{/set~}}\n\n        {{~set \"dict-entry-count\" 0 ~}}\n\n        {{~#each definition.definitions~}}\n            {{~#if (op \"===\" dictionary (get \"primary-dictionary\")) ~}}\n                {{~! dict-entry-count += 1 ~}}\n                {{~set \"dict-entry-count\" (op \"+\"\n                    (get \"dict-entry-count\") 1\n                )\n                ~}}\n            {{~/if~}}\n        {{~/each~}}\n\n        {{~get \"dict-entry-count\" ~}}\n\n    {{~/scope~}}\n\n{{~/inline~}}\n\n\n\n\n\n\n\n{{~!\n    returns \"true\" if valid dict, \"\" (null) otherwise\n~}}\n{{~#*inline \"_jpmn-non-primary-is-valid-dict\"~}}\n    {{~!\n        PARAMETERS:\n            validDictType: \"monolingual\" or \"bilingual\" or \"utility\"\n            dictionaryName: dictionary id\n            entryCount: primary dictionary entry count\n    ~}}\n    {{~#scope~}}\n\n        {{~set \"use-primary-dictionary\" (op \"&&\"\n            (get \"opt-primary-def-one-dict-entry-only\")\n            (op \"&&\" (op \"!==\" (op \"+\" entryCount) 0) (op \"!==\" (op \"+\" entryCount) 1))\n        )\n        ~}}\n\n        {{~set \"valid-dict\" null ~}}\n        {{~#set \"test-dict-type\"}}{{~> jpmn-get-dict-type . dictionaryName=dictionaryName ~}}{{/set~}}\n        {{~#if (op \"&&\"\n            (op \"===\" (get \"test-dict-type\") validDictType)\n            (op \"||\"\n                (op \"!==\" (get \"primary-dictionary\") dictionaryName)\n                (op \"===\" (get \"use-primary-dictionary\") true)\n            )\n        ) ~}}\n            {{~set \"valid-dict\" \"true\" ~}}\n        {{~/if~}}\n        {{~get \"valid-dict\" ~}}\n\n    {{~/scope~}}\n{{~/inline~}}\n\n\n{{~!\n    returns \"true\" if valid dict, \"\" (null) otherwise\n~}}\n{{~#*inline \"_jpmn-non-primary-has-valid-dict\"~}}\n    {{~!\n        PARAMETERS:\n            validDictType: \"monolingual\" or \"bilingual\" or \"utility\"\n            entryCount: primary dictionary entry count\n    ~}}\n    {{~#scope~}}\n\n        {{~set \"use-primary-dictionary\" (op \"&&\"\n            (get \"opt-primary-def-one-dict-entry-only\")\n            (op \"&&\" (op \"!==\" (op \"+\" entryCount) 0) (op \"!==\" (op \"+\" entryCount) 1))\n        )\n        ~}}\n\n        {{~!\n            without this set statement, the parameters\n            magically disappears within the bottom 'each' loop...\n        ~}}\n        {{~ set \"valid-dict-type\" validDictType ~}}\n        {{~ set \"entry-count\" entryCount ~}}\n\n        {{~set \"has-valid-dict\" null ~}}\n        {{~#each definition.definitions~}}\n            {{~#set \"is-valid-dict\"}}{{~> _jpmn-non-primary-is-valid-dict . validDictType=(get \"valid-dict-type\") entryCount=(get \"entry-count\") dictionaryName=dictionary ~}}{{/set~}}\n\n            {{~#if (op \"===\" (get \"is-valid-dict\") \"true\") ~}}\n                {{~set \"has-valid-dict\" \"true\" ~}}\n            {{~/if~}}\n\n        {{~/each~}}\n        {{~get \"has-valid-dict\" ~}}\n\n    {{~/scope~}}\n{{~/inline~}}\n\n\n\n\n\n\n{{~#*inline \"_jpmn-get-primary-definition-value\"~}}\n    {{~!\n        ASSUMPTION: \"primary-dictionary\" and \"search-selection\" is available to us from previous functions\n    ~}}\n    {{~#scope~}}\n\n        {{~#if\n            (op \"&&\"\n                (op \"!==\" (get \"search-selection\") \"\")\n                (get \"opt-primary-def-one-dict-entry-only\")\n            )\n        ~}}\n            {{~! text was highlighted -> use primary dictionary entry with highlighted text ~}}\n\n            {{~set \"found-dict-entry\" false ~}}\n\n            {{~#if (op \"!\" (get \"opt__plaintext__one-dict-entry-only-no-list\")) ~}}\n            <ol>\n            {{~/if~}}\n\n            {{~#each definition.definitions~}}\n\n                {{~#set \"rx-match-dict-entry\" ~}}\n                    {{~#regexMatch (get \"search-selection\") \"gu\"~}}{{~> _jpmn-glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}{{~/regexMatch~}}\n                {{/set~}}\n\n                {{~#if\n                    (op \"&&\"\n                        (op \"===\" (get \"found-dict-entry\") false)\n                        (op \"&&\"\n                            (op \"!==\" (get \"rx-match-dict-entry\") \"\")\n                            (op \"===\" dictionary (get \"primary-dictionary\"))\n                        )\n                    )\n                ~}}\n\n                    {{~#if (op \"!\" (get \"opt__plaintext__one-dict-entry-only-no-list\")) ~}}\n                    <li data-details=\"{{~dictionary~}}\">\n                    {{~/if~}}\n\n                    {{~> _jpmn-glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n\n                    {{~#if (op \"!\" (get \"opt__plaintext__one-dict-entry-only-no-list\")) ~}}\n                    </li>\n                    {{~/if~}}\n\n                    {{~set \"found-dict-entry\" true ~}}\n                {{~/if~}}\n            {{~/each~}}\n\n            {{~#if (op \"!\" (get \"opt__plaintext__one-dict-entry-only-no-list\")) ~}}\n            </ol>\n            {{~/if~}}\n\n        {{~else if (get \"opt-primary-def-one-dict-entry-only\") ~}}\n            {{~! use first primary dictionary entry ~}}\n\n            {{~set \"found-dict-entry\" false ~}}\n\n            {{~#if (op \"!\" (get \"opt__plaintext__one-dict-entry-only-no-list\")) ~}}\n            <ol>\n            {{~/if~}}\n\n            {{~#each definition.definitions~}}\n                {{~#if\n                    (op \"&&\"\n                        (op \"===\" (get \"found-dict-entry\") false)\n                        (op \"===\" dictionary (get \"primary-dictionary\"))\n                    )\n                ~}}\n\n                    {{~#if (op \"!\" (get \"opt__plaintext__one-dict-entry-only-no-list\")) ~}}\n                    <li data-details=\"{{~dictionary~}}\">\n                    {{~/if~}}\n\n                    {{~> _jpmn-glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n\n                    {{~#if (op \"!\" (get \"opt__plaintext__one-dict-entry-only-no-list\")) ~}}\n                    </li>\n                    {{~/if~}}\n\n                    {{~set \"found-dict-entry\" true ~}}\n                {{~/if~}}\n            {{~/each~}}\n\n            {{~#if (op \"!\" (get \"opt__plaintext__one-dict-entry-only-no-list\")) ~}}\n            </ol>\n            {{~/if~}}\n\n        {{~else~}}\n            {{~! use all primary dictionary entries ~}}\n\n            {{~#if (get \"opt__plaintext__one-dict-entry-only-no-list\") ~}}\n                {{~! must manually calculate number of primary-dictionary entries... ~}}\n\n                {{~set \"t\" 0 ~}}\n                {{~#each definition.definitions~}}\n                    {{~#if (op \"===\" dictionary (get \"primary-dictionary\"))~}}\n                        {{~set \"t\" (op \"+\" (get \"t\") 1) ~}}\n                    {{~/if~}}\n                {{~/each~}}\n\n                {{~#if (op \">=\" (get \"t\") 2)~}} <ol> {{~/if~}}\n\n                {{~#each definition.definitions~}}\n                    {{~#if (op \"===\" dictionary (get \"primary-dictionary\"))~}}\n                        {{~#if (op \">=\" (get \"t\") 2)~}} <li data-details=\"{{~dictionary~}}\"> {{~/if~}}\n                            {{~> _jpmn-glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n                        {{~#if (op \">=\" (get \"t\") 2)~}} </li> {{~/if~}}\n                    {{~/if~}}\n                {{~/each~}}\n\n                {{~#if (op \">=\" (get \"t\") 2)~}} </ol> {{~/if~}}\n\n            {{~else~}}\n\n                <ol> {{~s~}}\n\n                {{~#each definition.definitions~}}\n                    {{~#if (op \"===\" dictionary (get \"primary-dictionary\"))~}}\n                        <li data-details=\"{{~dictionary~}}\">\n                            {{~> _jpmn-glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n                        </li>\n                    {{~/if~}}\n                {{~/each~}}\n\n                </ol> {{~s~}}\n\n            {{~/if~}}\n\n        {{~/if~}}\n\n    {{~/scope~}}\n\n{{~/inline~}}\n\n\n{{~!\n    if (mode === \"except\" and (regex doesn't match) or mode === \"only\" and (regex matches)):\n        return true\n    return null\n~}}\n\n{{#*inline \"_jpmn-check-first-line-dict\"}}\n    {{~#scope~}}\n\n        {{~#set \"rx-match-first-line-dict\" ~}}\n            {{~#regexMatch (get \"opt-first-line-dicts-regex\") \"u\"~}}{{dictionary}}{{~/regexMatch~}}\n        {{/set~}}\n\n        {{~#if (op \"||\"\n            (op \"&&\"\n                (op \"===\" (get \"opt-first-line-regex-mode\") \"except\")\n                (op \"===\" (get \"rx-match-first-line-dict\") \"\")\n            )\n            (op \"&&\"\n                (op \"===\" (get \"opt-first-line-regex-mode\") \"only\")\n                (op \"!==\" (get \"rx-match-first-line-dict\") \"\")\n            )\n        )\n        ~}}\n            true\n        {{~/if~}}\n    {{~/scope~}}\n{{~/inline~}}\n\n{{~! custom glossary-single function for additional regex parsing per dictionary ~}}\n{{~! OVERRIDES brief and noDictionaryTag ~}}\n{{#*inline \"_jpmn-glossary-single\"}}\n    {{~#scope~}}\n\n        {{~#if (op \"===\" dictionary \"NHK日本語発音アクセント新辞典\")~}}\n            {{~#regexReplace \"<br></span> ・\" \"<br></span>\" \"g\"~}}\n                {{~#regexReplace \"<br> ・\" \"<br>\" \"g\"~}}\n                    {{~> _jpmn-glossary-single2 . ~}}\n                {{~/regexReplace~}}\n            {{~/regexReplace~}}\n        {{~else~}}\n            {{~> _jpmn-glossary-single2 . ~}}\n        {{~/if~}}\n\n    {{~/scope~}}\n{{/inline}}\n\n\n\n{{~! custom glossary-single function to add custom html around the dictionary and tags ~}}\n{{#*inline \"_jpmn-glossary-single2\"}}\n\n    {{~#scope~}}\n\n        {{~#if (op \"!\" (get \"opt__plaintext__enabled\")) ~}}\n\n            <span class=\"dict-group__tag-list\"> {{~s~}}\n\n                {{~#each definitionTags~}}\n\n                    <span class=\"dict-group__tag dict-group__tag--name\"> {{~s~}}\n                        <span class=\"dict-group__tag-inner\"> {{~s~}}\n                            {{~name~}}\n                        </span> {{~s~}}\n                    </span> {{~s~}}\n\n                {{~/each~}}\n\n                <span class=\"dict-group__tag dict-group__tag--dict\"> {{~s~}}\n                    <span class=\"dict-group__tag-inner\"> {{~s~}}\n                        {{~dictionary~}}\n                    </span> {{~s~}}\n                </span> {{~s~}}\n\n            </span> {{~s~}}\n\n        {{~else~}}\n\n            {{~#scope~}}\n                {{~set \"any\" false~}}\n                {{~#each definitionTags~}}\n                    {{~#if (get \"any\")}}, {{else}}({{/if~}}\n                    {{name}}\n                    {{~set \"any\" true~}}\n                {{~/each~}}\n                {{~#if (op \"!\" (get \"opt__plaintext__remove-dictionary-tag\"))~}}\n                    {{~#if (get \"any\")}}, {{else}}({{/if~}}\n                    {{dictionary}}\n                    {{~set \"any\" true~}}\n                {{~/if~}}\n                {{~#if (get \"any\")}}) {{/if~}}\n            {{~/scope~}}\n            {{~#if only~}}({{#each only}}{{.}}{{#unless @last}}, {{/unless}}{{/each}} only) {{/if~}}\n\n        {{~/if~}}\n\n        {{~#if (op \"!\" (get \"opt__plaintext__enabled\")) ~}}\n        <span class=\"dict-group__glossary\"> {{~s~}}\n        {{~/if~}}\n\n        {{~!\n            option to not wrap with spans because it may break dictionaries\n            (this is the hell that is parsing html with regex)\n        ~}}\n        {{~#if (op \"&&\"\n            (get \"opt-wrap-first-line-spans\")\n            (op \"!\" (get \"opt__plaintext__enabled\"))\n        )\n        }}\n\n            {{~#set \"modify-first-line\" ~}}{{> _jpmn-check-first-line-dict dictionary=dictionary }}{{~/set~}}\n\n            {{~#if (get \"modify-first-line\") ~}}\n                {{~#regexReplace\n                        \"^(<span lang=\\\"ja\\\">)?(.*?)<br>\"\n                        \"$1<span class=\\\"dict-group__glossary--first-line\\\">$2</span><span class=\\\"dict-group__glossary--first-line-break\\\"><br></span>\"\n                ~}}\n                    {{~> _jpmn-glossary-single3 . ~}}\n                {{~/regexReplace~}}\n            {{~else~}}\n                {{~> _jpmn-glossary-single3 . ~}}\n            {{~/if~}}\n\n        {{~else if (get \"opt__plaintext__remove-first-line-enabled\")~}}\n\n            {{~#set \"modify-first-line\" ~}}{{> _jpmn-check-first-line-dict dictionary=dictionary }}{{~/set~}}\n\n            {{~#if (get \"modify-first-line\") ~}}\n                {{~! none match means the dictionary is not an exception, i.e. replace newline ~}}\n                {{~#regexReplace\n                        \"^(<span lang=\\\"ja\\\">)?(.*?)<br>\"\n                        \"$1\"\n                ~}}\n                    {{~> _jpmn-glossary-single3 . ~}}\n                {{~/regexReplace~}}\n            {{~else~}}\n                {{~> _jpmn-glossary-single3 . ~}}\n            {{~/if~}}\n\n        {{~else~}}\n            {{~> _jpmn-glossary-single3 . ~}}\n        {{~/if~}}\n\n        {{~#if (op \"!\" (get \"opt__plaintext__enabled\")) ~}}\n        </span> {{~s~}}\n        {{~/if~}}\n\n    {{~/scope~}}\n\n    {{~#if only~}}({{#each only}}{{.}}{{#unless @last}}, {{/unless}}{{/each}} only) {{/if~}}\n{{/inline}}\n\n\n\n\n{{#*inline \"_jpmn-glossary-single3\"}}\n\n    {{~#scope~}}\n\n        {{~#if (op \"&&\"\n            (op \"===\" (get \"opt-jmdict-list-format\") true)\n            (op \"||\"\n                (op \"===\" dictionary \"JMdict (English)\")\n                (op \"===\" dictionary \"JMdict\")\n            )\n        )\n        ~}}\n            {{~#if (op \"<=\" glossary.length 1)~}}\n                {{#each glossary}}{{formatGlossary ../dictionary .}}{{/each}}\n            {{~else~}}\n                <ul>{{#each glossary}}<li>{{formatGlossary ../dictionary .}}</li>{{/each}}</ul>\n            {{~/if~}}\n        {{~else~}}\n            {{~#each glossary}}{{formatGlossary ../dictionary .}}{{#unless @last}} | {{/unless}}{{/each~}}\n        {{~/if~}}\n\n    {{~/scope~}}\n\n{{/inline}}\n\n\n\n\n\n{{~!\n    =============\n     frequencies\n    =============\n~}}\n\n{{#*inline \"jpmn-frequencies\"}}\n    {{~#if (op \">\" definition.frequencies.length 0)~}}\n        {{~#each definition.frequencies~}}\n            <div class=\"frequencies__group\" data-details=\"{{~dictionary~}}\"> {{~s~}}\n                <div class=\"frequencies__number\"> {{~s~}}\n                    <span class=\"frequencies__number-inner\"> {{~s~}}\n                        {{~! removes the \"X\" in JPDB's frequency and replaces it with a less assuming character\n                            (it interferes with the color of the card, since you see red\n                            at the top corner which is somewhat distracting) ~}}\n                        {{~#regexReplace \"❌\" \"✖\" \"g\"~}}\n                            {{~frequency~}}\n                        {{~/regexReplace~}}\n                    </span> {{~s~}}\n                </div> {{~s~}}\n                <div class=\"frequencies__dictionary\"> {{~s~}}\n                    <span class=\"frequencies__dictionary-inner\"> {{~s~}}\n                        {{~dictionary~}}\n                    </span> {{~s~}}\n                </div> {{~s~}}\n            </div>\n        {{~/each~}}\n    {{~/if~}}\n{{/inline}}\n\n{{~! base code taken from: https://github.com/MarvNC/JP-Resources#sorting-mined-anki-cards-by-frequency ~}}\n{{~! NOTE: THIS IS ONLY KEPT FOR LEGACY PURPOSES, and is now deprecated. Please use {jpmn-frequency-sort} instead. ~}}\n{{~#*inline \"jpmn-min-freq\"~}}\n    {{~#scope~}}\n        {{~#set \"min-freq\" 0~}}{{~/set~}}\n            {{~#each definition.frequencies~}}\n\n                {{~#set \"rx-match-ignored-freq\" ~}}\n                    {{~#regexMatch (get \"ignored-freq-dict-regex\") \"gu\"~}}{{this.dictionary}}{{~/regexMatch~}}\n                {{/set~}}\n\n                {{~#if\n                    (op \"&&\"\n                        (op \"||\"\n                            (op \"===\" (get \"min-freq\") 0)\n                            (op \">\" (op \"+\" (get \"min-freq\")) (op \"+\" (regexMatch \"\\d\" \"g\" this.frequency)))\n                        )\n                        (op \"===\" (get \"rx-match-ignored-freq\") \"\")\n                    )\n                ~}}\n                    {{~#set \"min-freq\" (op \"+\" (regexMatch \"\\d\" \"g\" this.frequency))}}{{/set~}}\n                {{~/if~}}\n            {{~/each~}}\n        {{~get \"min-freq\"~}}\n    {{~/scope~}}\n{{/inline}}\n\n\n{{#*inline \"jpmn-frequency-sort\"}}\n    {{~! Frequency sort handlebars: v23.03.13.1 ~}}\n    {{~! The latest version can be found at https://github.com/MarvNC/JP-Resources#freq-handlebar ~}}\n    {{~#scope~}}\n\n        {{~! Do not change the code below unless you know what you are doing. ~}}\n        {{~set \"result-freq\" -1 ~}} {{~! -1 is chosen because no frequency dictionaries should have an entry as -1 ~}}\n        {{~set \"prev-freq-dict\" \"\" ~}}\n        {{~set \"t\" 1 ~}}\n        {{~set \"found-grammar-dict\" false ~}}\n\n        {{~! search for grammar dictionary ~}}\n        {{~#each definition.definitions~}}\n            {{~#set \"rx-match-grammar-dicts\" ~}}\n                {{~#regexMatch (get \"opt-grammar-override-dict-regex\") \"u\"~}}{{this.dictionary}}{{~/regexMatch~}}\n            {{/set~}}\n            {{~! rx-match-grammar-dicts is not empty if a grammar dictionary was found ~}}\n            {{~#if (op \"!==\" (get \"rx-match-grammar-dicts\") \"\") ~}}\n                {{~set \"found-grammar-dict\" true ~}}\n            {{/if~}}\n        {{~/each~}}\n\n        {{~! Additional case when \"Result grouping mode\" is set to \"No Grouping\"~}}\n        {{~#set \"rx-match-grammar-dicts\" ~}}\n            {{~#regexMatch (get \"opt-grammar-override-dict-regex\") \"u\"~}}{{this.definition.dictionary}}{{~/regexMatch~}}\n        {{/set~}}\n        {{~! rx-match-grammar-dicts is not empty if a grammar dictionary was found ~}}\n        {{~#if (op \"!==\" (get \"rx-match-grammar-dicts\") \"\") ~}}\n            {{~set \"found-grammar-dict\" true ~}}\n        {{/if~}}\n\n        {{~#each definition.frequencies~}}\n\n            {{~! rx-match-ignored-freq is not empty if ignored <=> rx-match-ignored-freq is empty if not ignored ~}}\n            {{~#set \"rx-match-ignored-freq\" ~}}\n                {{~#regexMatch (get \"opt-ignored-freq-dict-regex\") \"u\"~}}{{this.dictionary}}{{~/regexMatch~}}\n            {{/set~}}\n\n            {{~#set \"rx-match-ignored-value\" ~}}\n                {{~#regexMatch (get \"opt-ignored-freq-value-regex\") \"u\"~}}{{this.frequency}}{{~/regexMatch~}}\n            {{/set~}}\n            {{~#if (op \"&&\" (op \"===\" (get \"rx-match-ignored-freq\") \"\") (op \"===\" (get \"rx-match-ignored-value\") \"\"))~}}\n\n                {{~!\n                    only uses the 1st frequency of any dictionary.\n                    For example, if JPDB lists 440 and 26189㋕, only the first 440 will be used.\n                ~}}\n                {{~set \"read-freq\" false ~}}\n                {{~#if (op \"!==\" (get \"prev-freq-dict\") this.dictionary ) ~}}\n                    {{~set \"read-freq\" true ~}}\n                    {{~set \"prev-freq-dict\" this.dictionary ~}}\n                {{/if~}}\n\n                {{~#if (op \"!\" (get \"read-freq\") ) ~}}\n                    {{~#set \"rx-match-keep-freqs\" ~}}\n                        {{~#regexMatch (get \"opt-keep-freqs-past-first-regex\") \"u\"~}}{{this.dictionary}}{{~/regexMatch~}}\n                    {{/set~}}\n\n                    {{~! rx-match-keep-freqs is not empty if keep freqs ~}}\n                    {{~#if (op \"!==\" (get \"rx-match-keep-freqs\") \"\") ~}}\n                        {{~set \"read-freq\" true ~}}\n                    {{/if~}}\n                {{/if~}}\n\n                {{~#if (get \"read-freq\") ~}}\n                    {{~set \"f\" (op \"+\" (regexMatch \"\\d+\" \"\" this.frequency)) ~}}\n\n                    {{~#if (op \"===\" (get \"opt-freq-sorting-method\") \"min\") ~}}\n                        {{~#if\n                            (op \"||\"\n                                (op \"===\" (get \"result-freq\") -1)\n                                (op \">\" (get \"result-freq\") (get \"f\"))\n                            )\n                        ~}}\n                            {{~set \"result-freq\" (op \"+\" (get \"f\")) ~}}\n                        {{~/if~}}\n\n                    {{~else if (op \"===\" (get \"opt-freq-sorting-method\") \"first\") ~}}\n                        {{~#if (op \"===\" (get \"result-freq\") -1) ~}}\n                            {{~set \"result-freq\" (get \"f\") ~}}\n                        {{~/if~}}\n\n                    {{~else if (op \"===\" (get \"opt-freq-sorting-method\") \"avg\") ~}}\n\n                        {{~#if (op \"===\" (get \"result-freq\") -1) ~}}\n                            {{~set \"result-freq\" (get \"f\") ~}}\n                        {{~else~}}\n                            {{~!\n                                iterative mean formula (to prevent floating point overflow):\n                                    $S_{(t+1)} = S_t + \\frac{1}{t+1} (x - S_t)$\n                                - example java implementation: https://stackoverflow.com/a/1934266\n                                - proof: https://www.heikohoffmann.de/htmlthesis/node134.html\n                            ~}}\n                            {{~set \"result-freq\"\n                                (op \"+\"\n                                    (get \"result-freq\")\n                                    (op \"/\"\n                                        (op \"-\"\n                                            (get \"f\")\n                                            (get \"result-freq\")\n                                        )\n                                        (get \"t\")\n                                    )\n                                )\n                            }}\n                        {{~/if~}}\n                        {{~set \"t\" (op \"+\" (get \"t\") 1) ~}}\n\n                    {{~else if (op \"===\" (get \"opt-freq-sorting-method\") \"harmonic\") ~}}\n                        {{~#if (op \">\" (get \"f\") 0) ~}} {{~! ensures only positive numbers are used ~}}\n                            {{~#if (op \"===\" (get \"result-freq\") -1) ~}}\n                                {{~set \"result-freq\" (op \"/\" 1 (get \"f\")) ~}}\n                            {{~else ~}}\n                                {{~set \"result-freq\"\n                                    (op \"+\"\n                                        (get \"result-freq\")\n                                        (op \"/\" 1 (get \"f\"))\n                                    )\n                                }}\n                                {{~set \"t\" (op \"+\" (get \"t\") 1) ~}}\n                            {{~/if~}}\n                        {{~/if~}}\n\n                    {{~else if (op \"===\" (get \"opt-freq-sorting-method\") \"debug\") ~}}\n\n                        {{ this.dictionary }}: {{ this.frequency }} -> {{ get \"f\" }} <br>\n\n                    {{~else~}}\n                        (INVALID opt-freq-sorting-method value)\n                    {{~/if~}}\n\n                {{~/if~}}\n\n            {{~/if~}}\n\n        {{~/each~}}\n\n        {{~! (x) >> 0 apparently floors x: https://stackoverflow.com/a/4228528 ~}}\n        {{~#if (op \"===\" (get \"result-freq\") -1) ~}}\n            {{~set \"result-freq\" (get \"opt-no-freq-default-value\") ~}}\n        {{~ else if (op \"===\" (get \"opt-freq-sorting-method\") \"avg\") ~}}\n            {{~set \"result-freq\"\n                (op \">>\" (get \"result-freq\") 0 )\n            ~}}\n        {{~ else if (op \"===\" (get \"opt-freq-sorting-method\") \"harmonic\") ~}}\n            {{~set \"result-freq\"\n                (op \">>\"\n                    (op \"*\"\n                        (op \"/\" 1 (get \"result-freq\"))\n                        (get \"t\")\n                    )\n                    0\n                )\n            ~}}\n        {{~/if~}}\n\n        {{~! override final result if grammar dictionary ~}}\n        {{~#if (\n            op \"&&\"\n                (op \"===\" (get \"found-grammar-dict\") true)\n                (op \"===\" (get \"opt-grammar-override\") true)\n            )\n        ~}}\n            {{~set \"result-freq\" (get \"opt-grammar-override-value\") ~}}\n        {{/if}}\n\n        {{~get \"result-freq\"~}}\n    {{~/scope~}}\n{{/inline}}\n\n\n\n\n{{~!\n    ==============\n     pitch accent\n    ==============\n~}}\n\n{{#*inline \"jpmn-pitch-accent-graphs\"}}\n    {{~#if (op \">\" pitchCount 0)~}}\n        {{~#each pitches~}}\n            <div class=\"pa-graphs__group\" data-details=\"{{dictionary}}\"> {{~s~}}\n                <div class=\"pa-graphs__dictionary\"> {{~s~}}\n                    <div class=\"pa-graphs__dictionary-inner\"> {{~s~}}\n                        {{~dictionary~}}\n                    </div> {{~s~}}\n                </div> {{~s~}}\n                <ol> {{~s~}}\n                    {{~#each pitches~}}\n                        <li>\n                            {{~> pitch-accent-item-disambiguation~}}\n\n                            {{~#scope~}}\n                                {{~set \"any\" false~}}\n                                {{~#each tags~}}\n                                    {{~#if (get \"any\")}}, {{else}}({{/if~}}\n                                    {{name}}\n                                    {{~set \"any\" true~}}\n                                {{~/each~}}\n                                {{~#if (get \"any\")}}) {{/if~}}\n                            {{~/scope~}}\n\n                            {{~> pitch-accent-item format=\"graph\"~}}\n                        </li>\n                    {{~/each~}}\n                </ol> {{~s~}}\n            </div>\n        {{~/each~}}\n    {{~/if~}}\n{{/inline}}\n\n\n{{#*inline \"jpmn-pitch-accent-positions\"}}\n    {{~#if (op \">\" pitchCount 0)~}}\n        {{~#each pitches~}}\n            <div class=\"pa-positions__group\" data-details=\"{{dictionary}}\"> {{~s~}}\n                <div class=\"pa-positions__dictionary\"> {{~s~}}\n                    <div class=\"pa-positions__dictionary-inner\"> {{~s~}}\n                        {{~dictionary~}}\n                    </div> {{~s~}}\n                </div> {{~s~}}\n                <ol> {{~s~}}\n                    {{~#each pitches~}}\n                        <li>\n                            {{~> pitch-accent-item-disambiguation~}}\n\n                            {{~#scope~}}\n                                {{~set \"any\" false~}}\n                                {{~#each tags~}}\n                                    {{~#if (get \"any\")}}, {{else}}({{/if~}}\n                                    {{name}}\n                                    {{~set \"any\" true~}}\n                                {{~/each~}}\n                                {{~#if (get \"any\")}}) {{/if~}}\n                            {{~/scope~}}\n\n                            {{~> pitch-accent-item format=\"position\"~}}\n                        </li>\n                    {{~/each~}}\n                </ol> {{~s~}}\n            </div>\n        {{~/each~}}\n    {{~/if~}}\n{{/inline}}\n\n\n{{~!\n    ==============\n     dictionaries\n    ==============\n~}}\n\n\n{{~! primary def: first monolingual (or first bilingual if no monolingual dicts found) ~}}\n{{~! does the reverse if opt-first-definition-type is \"bilingual\" ~}}\n{{~#*inline \"jpmn-primary-definition\"~}}\n\n    {{~#scope~}}\n\n        {{~#set \"primary-dictionary\"}}{{~> _jpmn-get-primary-definition-dict . ~}}{{/set~}}\n\n        {{~#if (op \"===\" (get \"primary-dictionary\") \"\")~}}\n            {{~> _jpmn-selection-text ~}}\n        {{~else~}}\n            {{~#set \"selection\"}}{{~> _jpmn-selection-text ~}}{{/set~}}\n            {{~#set \"selection-uses-glossary\"~}}\n                {{~> _jpmn-selection-uses-glossary . ~}}\n            {{~/set~}}\n\n            {{~! not \"\" <=> is a filled string ~}}\n            {{~#if (op \"!==\" (get \"selection-uses-glossary\") \"\")~}}\n\n                {{~! escape regex ~}}\n                {{~#set \"search-selection\"}}{{~#regexReplace \"[.*+?^${}()|[\\]\\\\]\" \"\\$&\" \"g\"~}}{{~> _jpmn-selection-text ~}}{{~/regexReplace~}}{{/set~}}\n                {{~#set \"search-selection-bold\"}}<b>{{~> _jpmn-selection-text ~}}</b>{{/set~}}\n\n                {{~#regexReplace (get \"search-selection\") (get \"search-selection-bold\") \"g\"~}}\n                    {{~> _jpmn-get-primary-definition-value . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n                {{~/regexReplace~}}\n\n            {{~else~}}\n                {{~#set \"search-selection\"}}{{/set~}}\n                {{~> _jpmn-get-primary-definition-value . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n            {{~/if~}}\n\n        {{~/if~}}\n\n    {{~/scope~}}\n\n{{~/inline~}}\n\n\n{{~! extra def: bilingual defs (excluding primary def) ~}}\n{{~#*inline \"jpmn-secondary-definition\"~}}\n\n    {{~#scope~}}\n\n        {{~#set \"primary-dictionary\"}}{{~> _jpmn-get-primary-definition-dict . ~}}{{/set~}}\n\n        {{~! looks to see if another dictionary exists ~}}\n        {{~! entry count must be gotten here in order to properly iterate through definition.definitions ~}}\n        {{~#set \"entry-count\"}}{{~> _jpmn-primary-dict-entry-count . ~}}{{/set~}}\n        {{~#set \"has-valid-dict\"}}{{~> _jpmn-non-primary-has-valid-dict . validDictType=\"bilingual\" entryCount=(get \"entry-count\")~}}{{/set~}}\n\n        {{~#if (op \"===\" (get \"has-valid-dict\") \"true\") ~}}\n            <ol>\n            {{~#each definition.definitions~}}\n                {{~#set \"is-valid-dict\"}}{{~> _jpmn-non-primary-is-valid-dict . validDictType=\"bilingual\" entryCount=(get \"entry-count\") dictionaryName=dictionary ~}}{{/set~}}\n                {{~#if (op \"===\" (get \"is-valid-dict\") \"true\") ~}}\n\n                    <li data-details=\"{{~dictionary~}}\">\n                        {{~> _jpmn-glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n                    </li>\n\n                {{~/if~}}\n            {{~/each~}}\n            </ol>\n        {{~/if~}}\n\n    {{~/scope~}}\n\n{{~/inline~}}\n\n\n{{~! extra def: monolingual defs (excluding primary def) ~}}\n{{~#*inline \"jpmn-extra-definitions\"~}}\n\n    {{~#scope~}}\n\n        {{~#set \"primary-dictionary\"}}{{~> _jpmn-get-primary-definition-dict . ~}}{{/set~}}\n\n        {{~! looks to see if another dictionary exists ~}}\n        {{~! entry count must be gotten here in order to properly iterate through definition.definitions ~}}\n        {{~#set \"entry-count\"}}{{~> _jpmn-primary-dict-entry-count . ~}}{{/set~}}\n        {{~#set \"has-valid-dict\"}}{{~> _jpmn-non-primary-has-valid-dict . validDictType=\"monolingual\" entryCount=(get \"entry-count\")~}}{{/set~}}\n\n        {{~#if (op \"===\" (get \"has-valid-dict\") \"true\") ~}}\n            <ol>\n            {{~#each definition.definitions~}}\n                {{~#set \"is-valid-dict\"}}{{~> _jpmn-non-primary-is-valid-dict . validDictType=\"monolingual\" entryCount=(get \"entry-count\") dictionaryName=dictionary ~}}{{/set~}}\n                {{~#if (op \"===\" (get \"is-valid-dict\") \"true\") ~}}\n                    <li data-details=\"{{~dictionary~}}\">\n                        {{~> _jpmn-glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n                    </li>\n                {{~/if~}}\n            {{~/each~}}\n            </ol>\n        {{~/if~}}\n\n    {{~/scope~}}\n\n{{~/inline~}}\n\n\n\n{{~! pitch accent info: all pitch accent info dictionaries ~}}\n\n{{~#*inline \"jpmn-utility-dictionaries\"~}}\n\n    {{~#scope~}}\n\n        {{~! looks to see if another dictionary exists ~}}\n        {{~! this if-statement is much more simple than the ones above, since utility dictionaries usually aren't the primary definition (if it is, then it'll just be repeated again here) ~}}\n        {{~#set \"has-valid-dict\"}}{{~> _jpmn-non-primary-has-valid-dict . validDictType=\"utility\"~}}{{/set~}}\n\n        {{~#if (op \"===\" (get \"has-valid-dict\") \"true\") ~}}\n            <ol>\n            {{~#each definition.definitions~}}\n                {{~#set \"test-dict-name\"}}{{~> jpmn-get-dict-type . dictionaryName=dictionary ~}}{{/set~}}\n                {{~#if (op \"===\" (get \"test-dict-name\") \"utility\")~}}\n                    <li data-details=\"{{~dictionary~}}\">\n                        {{~> _jpmn-glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n                    </li>\n                {{~/if~}}\n            {{~/each~}}\n            </ol>\n        {{~/if~}}\n\n    {{~/scope~}}\n\n{{~/inline~}}\n\n\n\n{{~!\n    =======\n     other\n    =======\n~}}\n\n{{~#*inline \"jpmn-word-reading-hiragana\"~}}\n    {{~#set \"word-reading\" ~}}{{> reading}}{{/set~}}\n\n    {{~#if (op \"\" (get \"word-reading\")) ~}}\n        {{~#set \"word-reading\" ~}}{{> expression}}{{/set~}}\n    {{~/if~}}\n\n    {{#hiragana (get \"word-reading\") keepProlongedSoundMarks=false}}{{/hiragana}}\n{{~/inline~}}\n\n\n\n{{~!\nthanks to:\n- https://github.com/FooSoft/yomichan/issues/1952#issuecomment-922671489 for the base code\n- DaNautics#8833 for finding the above + removing the span classes\n~}}\n{{#*inline \"jpmn-sentence-bolded-furigana-plain\"}}\n    {{~#if definition.cloze~}}\n\n        {{~#regexReplace \"(<span class=\\\"term\\\">)|(</span>)\" \"\" \"g\"~}}\n        {{~#regexReplace \"<ruby>(.+?)<rt>(.+?)</rt></ruby>\" \" $1[$2]\" \"g\"~}}\n\n            {{~#if (hasMedia \"textFurigana\" definition.cloze.prefix)~}}\n                {{~#getMedia \"textFurigana\" definition.cloze.prefix escape=false}}{{/getMedia~}}\n            {{~else~}}\n                {{~definition.cloze.prefix~}}\n            {{~/if~}}\n\n            <b>\n            {{~#if (hasMedia \"textFurigana\" definition.cloze.body)~}}\n                {{~#getMedia \"textFurigana\" definition.cloze.body escape=false}}{{/getMedia~}}\n            {{~else~}}\n                {{~definition.cloze.body~}}\n            {{~/if~}}\n            </b>\n\n            {{~#if (hasMedia \"textFurigana\" definition.cloze.suffix)~}}\n                {{~#getMedia \"textFurigana\" definition.cloze.suffix escape=false}}{{/getMedia~}}\n            {{~else~}}\n                {{~definition.cloze.suffix~}}\n            {{~/if~}}\n\n        {{~/regexReplace~}}\n        {{~/regexReplace~}}\n\n    {{~/if~}}\n{{/inline}}\n\n\n\n{{#*inline \"jpmn-filled-if-word-is-hiragana\"}}\n    {{~#scope~}}\n        {{~#set \"expression\" ~}}{{> expression}}{{/set~}}\n        {{~#set \"reading\" ~}}{{> reading}}{{/set~}}\n        {{~#set \"expression-hiragana\" ~}}{{> jpmn-word-reading-hiragana}}{{/set~}}\n\n        {{~#if (op \"&&\" (op \"===\" (get \"expression\") (get \"reading\")) (op \"===\" (get \"expression\") (get \"expression-hiragana\")))~}}\n            1\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n\n{{#*inline \"jpmn-filled-if-word-is-not-hiragana\"}}\n    {{~#scope~}}\n        {{~#set \"filled\" ~}}{{> jpmn-filled-if-word-is-hiragana}}{{/set~}}\n        {{~#if (op \"===\" (get \"filled\") \"\")~}}\n            1\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n\n\n\n{{#*inline \"jpmn-filled-if-grammar-point\"}}\n    {{~#scope~}}\n        {{~set \"found-grammar-dict\" false ~}}\n\n        {{~! search for grammar dictionary ~}}\n        {{~#each definition.definitions~}}\n            {{~#set \"rx-match-grammar-dicts\" ~}}\n                {{~#regexMatch (get \"opt-grammar-override-dict-regex\") \"gu\"~}}{{this.dictionary}}{{~/regexMatch~}}\n            {{/set~}}\n            {{~! rx-match-grammar-dicts is not empty if a grammar dictionary was found ~}}\n            {{~#if (op \"!==\" (get \"rx-match-grammar-dicts\") \"\") ~}}\n                {{~set \"found-grammar-dict\" true ~}}\n            {{/if~}}\n        {{~/each~}}\n\n        {{~! Additional case when \"Result grouping mode\" is set to \"No Grouping\"~}}\n        {{~#set \"rx-match-grammar-dicts\" ~}}\n            {{~#regexMatch (get \"opt-grammar-override-dict-regex\") \"gu\"~}}{{this.definition.dictionary}}{{~/regexMatch~}}\n        {{/set~}}\n        {{~! rx-match-grammar-dicts is not empty if a grammar dictionary was found ~}}\n        {{~#if (op \"!==\" (get \"rx-match-grammar-dicts\") \"\") ~}}\n            {{~set \"found-grammar-dict\" true ~}}\n        {{/if~}}\n\n        {{~#if (get \"found-grammar-dict\") ~}}\n            1\n        {{~/if~}}\n\n    {{~/scope~}}\n{{/inline}}\n\n{{#*inline \"jpmn-filled-if-not-grammar-point\"}}\n    {{~#scope~}}\n        {{~#set \"filled\" ~}}{{> jpmn-filled-if-grammar-point}}{{/set~}}\n        {{~#if (op \"===\" (get \"filled\") \"\")~}}\n            1\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n\n\n\n\n{{#*inline \"jpmn-filled-if-on-mim\"}}\n    {{~#scope~}}\n        {{~#set \"rx-match-on-mim\" ~}}\n            {{~#regexMatch \"(, |^)on-mim(, |$)\" \"gu\"~}}{{> tags }}{{~/regexMatch~}}\n        {{/set~}}\n\n        {{~#if (op \"!==\" (get \"rx-match-on-mim\") \"\") ~}}\n            1\n        {{/if~}}\n    {{~/scope~}}\n{{/inline}}\n\n{{#*inline \"jpmn-filled-if-not-on-mim\"}}\n    {{~#scope~}}\n        {{~#set \"filled\" ~}}{{> jpmn-filled-if-not-on-mim}}{{/set~}}\n        {{~#if (op \"===\" (get \"filled\") \"\")~}}\n            1\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n\n\n\n\n{{~! my personal settings:\n- sentence card if grammar point\n- otherwise, if it's on-mim, then hint card\n- otherwise, default\n~}}\n\n{{#*inline \"jpmn-is-sentence-card\"}}\n    {{~> jpmn-filled-if-grammar-point ~}}\n{{/inline}}\n\n{{#*inline \"jpmn-is-hint-card\"}}\n    {{~#scope~}}\n        {{~#set \"filled\" ~}}{{> jpmn-is-sentence-card}}{{/set~}}\n        {{~#if (op \"===\" (get \"filled\") \"\")~}}\n            {{~> jpmn-filled-if-on-mim ~}}\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n\n{{#*inline \"jpmn-is-click-card\"}}\n    {{~#scope~}}\n        {{~#set \"filled1\" ~}}{{> jpmn-is-hint-card}}{{/set~}}\n        {{~#set \"filled2\" ~}}{{> jpmn-is-sentence-card}}{{/set~}}\n        {{~#if (op \"&&\"\n            (op \"===\" (get \"filled1\") \"\")\n            (op \"===\" (get \"filled2\") \"\")\n        )~}}\n            1\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n\n\n\n\n{{~! a test to check if your dictionaries are correctly classified. ~}}\n{{~! Only meant to be used for debugging purposes, not Anki. ~}}\n{{~#*inline \"jpmn-test-dict-type\"~}}\n{{~#scope~}}\n{{~#each definition.definitions~}}\n「{{dictionary}}」: {{> jpmn-get-dict-type . dictionaryName=dictionary}}\n{{/each~}}\n{{~/scope~}}\n{{~/inline~}}",
                        "duplicateScope": "collection",
                        "checkForDuplicates": true,
                        "suspendNewCards": false,
                        "duplicateScopeCheckAllModels": false,
                        "noteGuiMode": "browse",
                        "apiKey": "",
                        "downloadTimeout": 0,
                        "duplicateBehavior": "new",
                        "displayTagsAndFlags": "never"
                    },
                    "parsing": {
                        "enableScanningParser": true,
                        "enableMecabParser": false,
                        "selectedParser": "scan",
                        "readingMode": "none",
                        "termSpacing": false
                    },
                    "translation": {
                        "textReplacements": {
                            "searchOriginal": true,
                            "groups": [
                                [
                                    {
                                        "pattern": "1|１",
                                        "ignoreCase": false,
                                        "replacement": "一"
                                    },
                                    {
                                        "pattern": "2|２",
                                        "ignoreCase": false,
                                        "replacement": "二"
                                    },
                                    {
                                        "pattern": "3|３",
                                        "ignoreCase": false,
                                        "replacement": "三"
                                    },
                                    {
                                        "pattern": "4|４",
                                        "ignoreCase": false,
                                        "replacement": "四"
                                    },
                                    {
                                        "pattern": "5|５",
                                        "ignoreCase": false,
                                        "replacement": "五"
                                    },
                                    {
                                        "pattern": "6|６",
                                        "ignoreCase": false,
                                        "replacement": "六"
                                    },
                                    {
                                        "pattern": "7|７",
                                        "ignoreCase": false,
                                        "replacement": "七"
                                    },
                                    {
                                        "pattern": "8|８",
                                        "ignoreCase": false,
                                        "replacement": "八"
                                    },
                                    {
                                        "pattern": "9|９",
                                        "ignoreCase": false,
                                        "replacement": "九"
                                    },
                                    {
                                        "pattern": "(.)々",
                                        "ignoreCase": false,
                                        "replacement": "$1$1"
                                    },
                                    {
                                        "pattern": "ッ",
                                        "ignoreCase": false,
                                        "replacement": "っ"
                                    },
                                    {
                                        "pattern": "・|、|\\-|\\.|\\s",
                                        "ignoreCase": false,
                                        "replacement": ""
                                    }
                                ]
                            ]
                        },
                        "searchResolution": "letter"
                    },
                    "sentenceParsing": {
                        "scanExtent": 200,
                        "terminationCharacters": [
                            {
                                "enabled": true,
                                "character1": "「",
                                "character2": "」",
                                "includeCharacterAtStart": true,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "『",
                                "character2": "』",
                                "includeCharacterAtStart": true,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "\"",
                                "character2": "\"",
                                "includeCharacterAtStart": true,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "'",
                                "character2": "'",
                                "includeCharacterAtStart": false,
                                "includeCharacterAtEnd": false
                            },
                            {
                                "enabled": true,
                                "character1": ".",
                                "character2": null,
                                "includeCharacterAtStart": false,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "!",
                                "character2": null,
                                "includeCharacterAtStart": false,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "?",
                                "character2": null,
                                "includeCharacterAtStart": false,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "．",
                                "character2": null,
                                "includeCharacterAtStart": false,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "。",
                                "character2": null,
                                "includeCharacterAtStart": false,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "！",
                                "character2": null,
                                "includeCharacterAtStart": false,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "？",
                                "character2": null,
                                "includeCharacterAtStart": false,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "…",
                                "character2": null,
                                "includeCharacterAtStart": false,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "︒",
                                "character2": null,
                                "includeCharacterAtStart": false,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "︕",
                                "character2": null,
                                "includeCharacterAtStart": false,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "︖",
                                "character2": null,
                                "includeCharacterAtStart": false,
                                "includeCharacterAtEnd": true
                            },
                            {
                                "enabled": true,
                                "character1": "︙",
                                "character2": null,
                                "includeCharacterAtStart": false,
                                "includeCharacterAtEnd": true
                            }
                        ],
                        "terminationCharacterMode": "custom"
                    },
                    "inputs": {
                        "hotkeys": [
                            {
                                "action": "close",
                                "key": "Escape",
                                "modifiers": [],
                                "scopes": [
                                    "popup"
                                ],
                                "enabled": true,
                                "argument": ""
                            },
                            {
                                "action": "focusSearchBox",
                                "key": "Escape",
                                "modifiers": [],
                                "scopes": [
                                    "search"
                                ],
                                "enabled": true,
                                "argument": ""
                            },
                            {
                                "action": "previousEntry",
                                "key": "PageUp",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search"
                                ],
                                "enabled": true,
                                "argument": "3"
                            },
                            {
                                "action": "nextEntry",
                                "key": "PageDown",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search"
                                ],
                                "enabled": true,
                                "argument": "3"
                            },
                            {
                                "action": "lastEntry",
                                "key": "End",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search"
                                ],
                                "enabled": true,
                                "argument": ""
                            },
                            {
                                "action": "firstEntry",
                                "key": "Home",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search"
                                ],
                                "enabled": true,
                                "argument": ""
                            },
                            {
                                "action": "previousEntry",
                                "key": "ArrowUp",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search"
                                ],
                                "enabled": true,
                                "argument": "1"
                            },
                            {
                                "action": "nextEntry",
                                "key": "ArrowDown",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search"
                                ],
                                "enabled": true,
                                "argument": "1"
                            },
                            {
                                "action": "historyBackward",
                                "key": "KeyB",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search"
                                ],
                                "enabled": true,
                                "argument": ""
                            },
                            {
                                "action": "historyForward",
                                "key": "KeyF",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search"
                                ],
                                "enabled": true,
                                "argument": ""
                            },
                            {
                                "action": "addNoteKanji",
                                "key": "KeyK",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search"
                                ],
                                "enabled": true,
                                "argument": ""
                            },
                            {
                                "action": "addNoteTermKanji",
                                "key": "KeyE",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search"
                                ],
                                "enabled": true,
                                "argument": ""
                            },
                            {
                                "action": "addNoteTermKana",
                                "key": "KeyR",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search"
                                ],
                                "enabled": true,
                                "argument": ""
                            },
                            {
                                "action": "playAudio",
                                "key": "KeyP",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search"
                                ],
                                "enabled": true,
                                "argument": ""
                            },
                            {
                                "action": "viewNotes",
                                "key": "KeyV",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search"
                                ],
                                "enabled": true,
                                "argument": ""
                            },
                            {
                                "action": "copyHostSelection",
                                "key": "KeyC",
                                "modifiers": [
                                    "ctrl"
                                ],
                                "scopes": [
                                    "popup"
                                ],
                                "enabled": true,
                                "argument": ""
                            },
                            {
                                "action": "profilePrevious",
                                "key": "Minus",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search",
                                    "web"
                                ],
                                "enabled": true,
                                "argument": ""
                            },
                            {
                                "action": "profileNext",
                                "key": "Equal",
                                "modifiers": [
                                    "alt"
                                ],
                                "scopes": [
                                    "popup",
                                    "search",
                                    "web"
                                ],
                                "enabled": true,
                                "argument": ""
                            }
                        ]
                    },
                    "popupWindow": {
                        "width": 400,
                        "height": 250,
                        "left": 0,
                        "top": 0,
                        "useLeft": false,
                        "useTop": false,
                        "windowType": "popup",
                        "windowState": "normal"
                    },
                    "clipboard": {
                        "enableBackgroundMonitor": false,
                        "enableSearchPageMonitor": true,
                        "autoSearchContent": true,
                        "maximumSearchLength": 1000
                    },
                    "accessibility": {
                        "forceGoogleDocsHtmlRendering": false
                    }
                },
                "conditionGroups": [
                    {
                        "conditions": [
                            {
                                "type": "modifierKeys",
                                "operator": "are",
                                "value": "alt"
                            }
                        ]
                    }
                ],
                "id": "profile-1"
            }
        ],
        "profileCurrent": 0,
        "version": 54,
        "global": {
            "database": {
                "prefixWildcardsSupported": true
            }
        }
    }
}